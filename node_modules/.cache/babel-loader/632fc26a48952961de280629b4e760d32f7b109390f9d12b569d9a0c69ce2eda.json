{"ast":null,"code":"import { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { w as walletIds } from '../../../../dist/walletIds-e41b240b.browser.esm.js';\nimport { W as WagmiAdapter } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { a as AbstractClientWallet } from '../../../../dist/base-eec23f27.browser.esm.js';\nimport 'eventemitter3';\nimport '../../../../dist/classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport '../../abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js';\nimport 'ethers';\nimport '@thirdweb-dev/sdk';\nclass FrameWallet extends AbstractClientWallet {\n  get walletName() {\n    return \"Frame Wallet\";\n  }\n  constructor(options) {\n    super(FrameWallet.id, options);\n  }\n  async getConnector() {\n    if (!this.connector) {\n      // import the connector dynamically\n      const {\n        FrameConnector\n      } = await import('../../../connectors/frame/dist/thirdweb-dev-wallets-evm-connectors-frame.browser.esm.js');\n      this.connector = new WagmiAdapter(new FrameConnector({\n        chains: this.chains,\n        connectorStorage: this.walletStorage,\n        options: {\n          shimDisconnect: true\n        }\n      }));\n    }\n    return this.connector;\n  }\n}\n_defineProperty(FrameWallet, \"id\", walletIds.frame);\nexport { FrameWallet };","map":{"version":3,"names":["_","_defineProperty","w","walletIds","W","WagmiAdapter","a","AbstractClientWallet","FrameWallet","walletName","constructor","options","id","getConnector","connector","FrameConnector","chains","connectorStorage","walletStorage","shimDisconnect","frame"],"sources":["C:/Users/SUMAN K/meta_transfer/node_modules/@thirdweb-dev/wallets/evm/wallets/frame/dist/thirdweb-dev-wallets-evm-wallets-frame.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { w as walletIds } from '../../../../dist/walletIds-e41b240b.browser.esm.js';\nimport { W as WagmiAdapter } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { a as AbstractClientWallet } from '../../../../dist/base-eec23f27.browser.esm.js';\nimport 'eventemitter3';\nimport '../../../../dist/classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport '../../abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js';\nimport 'ethers';\nimport '@thirdweb-dev/sdk';\n\nclass FrameWallet extends AbstractClientWallet {\n  get walletName() {\n    return \"Frame Wallet\";\n  }\n  constructor(options) {\n    super(FrameWallet.id, options);\n  }\n  async getConnector() {\n    if (!this.connector) {\n      // import the connector dynamically\n      const {\n        FrameConnector\n      } = await import('../../../connectors/frame/dist/thirdweb-dev-wallets-evm-connectors-frame.browser.esm.js');\n      this.connector = new WagmiAdapter(new FrameConnector({\n        chains: this.chains,\n        connectorStorage: this.walletStorage,\n        options: {\n          shimDisconnect: true\n        }\n      }));\n    }\n    return this.connector;\n  }\n}\n_defineProperty(FrameWallet, \"id\", walletIds.frame);\n\nexport { FrameWallet };\n"],"mappings":"AAAA,SAASA,CAAC,IAAIC,eAAe,QAAQ,yDAAyD;AAC9F,SAASC,CAAC,IAAIC,SAAS,QAAQ,oDAAoD;AACnF,SAASC,CAAC,IAAIC,YAAY,QAAQ,oDAAoD;AACtF,SAASC,CAAC,IAAIC,oBAAoB,QAAQ,+CAA+C;AACzF,OAAO,eAAe;AACtB,OAAO,gEAAgE;AACvE,OAAO,+DAA+D;AACtE,OAAO,sBAAsB;AAC7B,OAAO,8EAA8E;AACrF,OAAO,QAAQ;AACf,OAAO,mBAAmB;AAE1B,MAAMC,WAAW,SAASD,oBAAoB,CAAC;EAC7C,IAAIE,UAAUA,CAAA,EAAG;IACf,OAAO,cAAc;EACvB;EACAC,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAACH,WAAW,CAACI,EAAE,EAAED,OAAO,CAAC;EAChC;EACA,MAAME,YAAYA,CAAA,EAAG;IACnB,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE;MACnB;MACA,MAAM;QACJC;MACF,CAAC,GAAG,MAAM,MAAM,CAAC,yFAAyF,CAAC;MAC3G,IAAI,CAACD,SAAS,GAAG,IAAIT,YAAY,CAAC,IAAIU,cAAc,CAAC;QACnDC,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBC,gBAAgB,EAAE,IAAI,CAACC,aAAa;QACpCP,OAAO,EAAE;UACPQ,cAAc,EAAE;QAClB;MACF,CAAC,CAAC,CAAC;IACL;IACA,OAAO,IAAI,CAACL,SAAS;EACvB;AACF;AACAb,eAAe,CAACO,WAAW,EAAE,IAAI,EAAEL,SAAS,CAACiB,KAAK,CAAC;AAEnD,SAASZ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}