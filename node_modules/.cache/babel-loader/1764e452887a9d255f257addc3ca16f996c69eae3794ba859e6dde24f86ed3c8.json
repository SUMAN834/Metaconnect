{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar _SafeFactory_contractNetworks, _SafeFactory_isL1SafeMasterCopy, _SafeFactory_safeVersion, _SafeFactory_ethAdapter, _SafeFactory_safeProxyFactoryContract, _SafeFactory_gnosisSafeContract;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst satisfies_1 = __importDefault(require(\"semver/functions/satisfies\"));\nconst zksync_web3_1 = require(\"zksync-web3\");\nconst config_1 = require(\"../contracts/config\");\nconst safeDeploymentContracts_1 = require(\"../contracts/safeDeploymentContracts\");\nconst Safe_1 = __importDefault(require(\"../Safe\"));\nconst constants_1 = require(\"../utils/constants\");\nconst utils_1 = require(\"./utils\");\nconst ZKSYNC_MAINNET = 324;\nconst ZKSYNC_TESTNET = 280;\n// For bundle size efficiency we store SafeProxy.sol/GnosisSafeProxy.sol zksync bytecode hash in hex.\n// To get the values below we need to:\n// 1. Compile Safe smart contracts for zksync\n// 2. Get `deployedBytecode` from SafeProxy.json/GnosisSafeProxy.json\n// 3. Use zksync-web3 SDK to get the bytecode hash\n//    const bytecodeHash = zkSyncUtils.hashBytecode(${deployedBytecode})\n// 4. Use ethers to convert the array into hex\n//    const deployedBytecodeHash = ethers.utils.hexlify(bytecodeHash)\nconst ZKSYNC_SAFE_PROXY_DEPLOYED_BYTECODE = {\n  '1.3.0': {\n    deployedBytecodeHash: '0x0100004124426fb9ebb25e27d670c068e52f9ba631bd383279a188be47e3f86d'\n  }\n};\nclass SafeFactory {\n  constructor() {\n    _SafeFactory_contractNetworks.set(this, void 0);\n    _SafeFactory_isL1SafeMasterCopy.set(this, void 0);\n    _SafeFactory_safeVersion.set(this, void 0);\n    _SafeFactory_ethAdapter.set(this, void 0);\n    _SafeFactory_safeProxyFactoryContract.set(this, void 0);\n    _SafeFactory_gnosisSafeContract.set(this, void 0);\n  }\n  static async create({\n    ethAdapter,\n    safeVersion = config_1.SAFE_LAST_VERSION,\n    isL1SafeMasterCopy = false,\n    contractNetworks\n  }) {\n    const safeFactorySdk = new SafeFactory();\n    await safeFactorySdk.init({\n      ethAdapter,\n      safeVersion,\n      isL1SafeMasterCopy,\n      contractNetworks\n    });\n    return safeFactorySdk;\n  }\n  async init({\n    ethAdapter,\n    safeVersion,\n    isL1SafeMasterCopy,\n    contractNetworks\n  }) {\n    __classPrivateFieldSet(this, _SafeFactory_ethAdapter, ethAdapter, \"f\");\n    __classPrivateFieldSet(this, _SafeFactory_safeVersion, safeVersion, \"f\");\n    __classPrivateFieldSet(this, _SafeFactory_isL1SafeMasterCopy, isL1SafeMasterCopy, \"f\");\n    __classPrivateFieldSet(this, _SafeFactory_contractNetworks, contractNetworks, \"f\");\n    const chainId = await __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\").getChainId();\n    const customContracts = contractNetworks === null || contractNetworks === void 0 ? void 0 : contractNetworks[chainId];\n    __classPrivateFieldSet(this, _SafeFactory_safeProxyFactoryContract, await (0, safeDeploymentContracts_1.getProxyFactoryContract)({\n      ethAdapter,\n      safeVersion,\n      chainId,\n      customContracts\n    }), \"f\");\n    __classPrivateFieldSet(this, _SafeFactory_gnosisSafeContract, await (0, safeDeploymentContracts_1.getSafeContract)({\n      ethAdapter,\n      safeVersion,\n      chainId,\n      isL1SafeMasterCopy,\n      customContracts\n    }), \"f\");\n  }\n  getEthAdapter() {\n    return __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\");\n  }\n  getSafeVersion() {\n    return __classPrivateFieldGet(this, _SafeFactory_safeVersion, \"f\");\n  }\n  getAddress() {\n    return __classPrivateFieldGet(this, _SafeFactory_safeProxyFactoryContract, \"f\").getAddress();\n  }\n  async getChainId() {\n    return __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\").getChainId();\n  }\n  async encodeSetupCallData({\n    owners,\n    threshold,\n    to = constants_1.ZERO_ADDRESS,\n    data = constants_1.EMPTY_DATA,\n    fallbackHandler,\n    paymentToken = constants_1.ZERO_ADDRESS,\n    payment = 0,\n    paymentReceiver = constants_1.ZERO_ADDRESS\n  }) {\n    var _a;\n    if ((0, satisfies_1.default)(__classPrivateFieldGet(this, _SafeFactory_safeVersion, \"f\"), '<=1.0.0')) {\n      return __classPrivateFieldGet(this, _SafeFactory_gnosisSafeContract, \"f\").encode('setup', [owners, threshold, to, data, paymentToken, payment, paymentReceiver]);\n    }\n    let fallbackHandlerAddress;\n    if (fallbackHandler) {\n      fallbackHandlerAddress = fallbackHandler;\n    } else {\n      const chainId = await __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\").getChainId();\n      const customContracts = (_a = __classPrivateFieldGet(this, _SafeFactory_contractNetworks, \"f\")) === null || _a === void 0 ? void 0 : _a[chainId];\n      const fallbackHandlerContract = await (0, safeDeploymentContracts_1.getCompatibilityFallbackHandlerContract)({\n        ethAdapter: __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\"),\n        safeVersion: __classPrivateFieldGet(this, _SafeFactory_safeVersion, \"f\"),\n        chainId,\n        customContracts\n      });\n      fallbackHandlerAddress = fallbackHandlerContract.getAddress();\n    }\n    return __classPrivateFieldGet(this, _SafeFactory_gnosisSafeContract, \"f\").encode('setup', [owners, threshold, to, data, fallbackHandlerAddress, paymentToken, payment, paymentReceiver]);\n  }\n  async predictSafeAddress({\n    safeAccountConfig,\n    safeDeploymentConfig\n  }) {\n    (0, utils_1.validateSafeAccountConfig)(safeAccountConfig);\n    (0, utils_1.validateSafeDeploymentConfig)(safeDeploymentConfig);\n    const from = __classPrivateFieldGet(this, _SafeFactory_safeProxyFactoryContract, \"f\").getAddress();\n    const initializer = await this.encodeSetupCallData(safeAccountConfig);\n    const saltNonce = safeDeploymentConfig.saltNonce;\n    const encodedNonce = (0, ethereumjs_util_1.toBuffer)(__classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\").encodeParameters(['uint256'], [saltNonce])).toString('hex');\n    const salt = (0, ethereumjs_util_1.keccak256)((0, ethereumjs_util_1.toBuffer)('0x' + (0, ethereumjs_util_1.keccak256)((0, ethereumjs_util_1.toBuffer)(initializer)).toString('hex') + encodedNonce));\n    const proxyCreationCode = await __classPrivateFieldGet(this, _SafeFactory_safeProxyFactoryContract, \"f\").proxyCreationCode();\n    const input = __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\").encodeParameters(['address'], [__classPrivateFieldGet(this, _SafeFactory_gnosisSafeContract, \"f\").getAddress()]);\n    const chainId = await __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\").getChainId();\n    // zkSync Era counterfactual deployment is calculated differently\n    // https://era.zksync.io/docs/reference/architecture/differences-with-ethereum.html#create-create2\n    if ([ZKSYNC_MAINNET, ZKSYNC_TESTNET].includes(chainId)) {\n      const safeVersion = await __classPrivateFieldGet(this, _SafeFactory_gnosisSafeContract, \"f\").getVersion();\n      const bytecodeHash = ZKSYNC_SAFE_PROXY_DEPLOYED_BYTECODE[safeVersion].deployedBytecodeHash;\n      return zksync_web3_1.utils.create2Address(from, bytecodeHash, salt, input);\n    }\n    const constructorData = (0, ethereumjs_util_1.toBuffer)(input).toString('hex');\n    const initCode = proxyCreationCode + constructorData;\n    const proxyAddress = '0x' + (0, ethereumjs_util_1.generateAddress2)((0, ethereumjs_util_1.toBuffer)(from), (0, ethereumjs_util_1.toBuffer)(salt), (0, ethereumjs_util_1.toBuffer)(initCode)).toString('hex');\n    return __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\").getChecksummedAddress(proxyAddress);\n  }\n  async deploySafe({\n    safeAccountConfig,\n    safeDeploymentConfig,\n    options,\n    callback\n  }) {\n    var _a;\n    (0, utils_1.validateSafeAccountConfig)(safeAccountConfig);\n    if (safeDeploymentConfig) {\n      (0, utils_1.validateSafeDeploymentConfig)(safeDeploymentConfig);\n    }\n    const signerAddress = await __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\").getSignerAddress();\n    if (!signerAddress) {\n      throw new Error('EthAdapter must be initialized with a signer to use this method');\n    }\n    const initializer = await this.encodeSetupCallData(safeAccountConfig);\n    const saltNonce = (_a = safeDeploymentConfig === null || safeDeploymentConfig === void 0 ? void 0 : safeDeploymentConfig.saltNonce) !== null && _a !== void 0 ? _a : (Date.now() * 1000 + Math.floor(Math.random() * 1000)).toString();\n    if ((options === null || options === void 0 ? void 0 : options.gas) && (options === null || options === void 0 ? void 0 : options.gasLimit)) {\n      throw new Error('Cannot specify gas and gasLimit together in transaction options');\n    }\n    const safeAddress = await __classPrivateFieldGet(this, _SafeFactory_safeProxyFactoryContract, \"f\").createProxy({\n      safeMasterCopyAddress: __classPrivateFieldGet(this, _SafeFactory_gnosisSafeContract, \"f\").getAddress(),\n      initializer,\n      saltNonce,\n      options: {\n        from: signerAddress,\n        ...options\n      },\n      callback\n    });\n    const isContractDeployed = await __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\").isContractDeployed(safeAddress);\n    if (!isContractDeployed) {\n      throw new Error('SafeProxy contract is not deployed on the current network');\n    }\n    const safe = await Safe_1.default.create({\n      ethAdapter: __classPrivateFieldGet(this, _SafeFactory_ethAdapter, \"f\"),\n      safeAddress,\n      isL1SafeMasterCopy: __classPrivateFieldGet(this, _SafeFactory_isL1SafeMasterCopy, \"f\"),\n      contractNetworks: __classPrivateFieldGet(this, _SafeFactory_contractNetworks, \"f\")\n    });\n    return safe;\n  }\n}\n_SafeFactory_contractNetworks = new WeakMap(), _SafeFactory_isL1SafeMasterCopy = new WeakMap(), _SafeFactory_safeVersion = new WeakMap(), _SafeFactory_ethAdapter = new WeakMap(), _SafeFactory_safeProxyFactoryContract = new WeakMap(), _SafeFactory_gnosisSafeContract = new WeakMap();\nexports.default = SafeFactory;","map":{"version":3,"names":["ethereumjs_util_1","require","satisfies_1","__importDefault","zksync_web3_1","config_1","safeDeploymentContracts_1","Safe_1","constants_1","utils_1","ZKSYNC_MAINNET","ZKSYNC_TESTNET","ZKSYNC_SAFE_PROXY_DEPLOYED_BYTECODE","deployedBytecodeHash","SafeFactory","constructor","_SafeFactory_contractNetworks","set","_SafeFactory_isL1SafeMasterCopy","_SafeFactory_safeVersion","_SafeFactory_ethAdapter","_SafeFactory_safeProxyFactoryContract","_SafeFactory_gnosisSafeContract","create","ethAdapter","safeVersion","SAFE_LAST_VERSION","isL1SafeMasterCopy","contractNetworks","safeFactorySdk","init","__classPrivateFieldSet","chainId","__classPrivateFieldGet","getChainId","customContracts","getProxyFactoryContract","getSafeContract","getEthAdapter","getSafeVersion","getAddress","encodeSetupCallData","owners","threshold","to","ZERO_ADDRESS","data","EMPTY_DATA","fallbackHandler","paymentToken","payment","paymentReceiver","default","encode","fallbackHandlerAddress","_a","fallbackHandlerContract","getCompatibilityFallbackHandlerContract","predictSafeAddress","safeAccountConfig","safeDeploymentConfig","validateSafeAccountConfig","validateSafeDeploymentConfig","from","initializer","saltNonce","encodedNonce","toBuffer","encodeParameters","toString","salt","keccak256","proxyCreationCode","input","includes","getVersion","bytecodeHash","utils","create2Address","constructorData","initCode","proxyAddress","generateAddress2","getChecksummedAddress","deploySafe","options","callback","signerAddress","getSignerAddress","Error","Date","now","Math","floor","random","gas","gasLimit","safeAddress","createProxy","safeMasterCopyAddress","isContractDeployed","safe","exports"],"sources":["../../../src/safeFactory/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}