{"ast":null,"code":"/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { property } from 'lit/decorators.js';\nimport { $needsRender, $progressTracker, $renderer, $scene, $shouldAttemptPreload } from '../model-viewer-base.js';\nimport { clamp, deserializeUrl } from '../utilities.js';\nexport const BASE_OPACITY = 0.5;\nconst DEFAULT_SHADOW_INTENSITY = 0.0;\nconst DEFAULT_SHADOW_SOFTNESS = 1.0;\nconst DEFAULT_EXPOSURE = 1.0;\nexport const $currentEnvironmentMap = Symbol('currentEnvironmentMap');\nexport const $currentBackground = Symbol('currentBackground');\nexport const $updateEnvironment = Symbol('updateEnvironment');\nconst $cancelEnvironmentUpdate = Symbol('cancelEnvironmentUpdate');\nexport const EnvironmentMixin = ModelViewerElement => {\n  var _a, _b, _c;\n  class EnvironmentModelViewerElement extends ModelViewerElement {\n    constructor() {\n      super(...arguments);\n      this.environmentImage = null;\n      this.skyboxImage = null;\n      this.shadowIntensity = DEFAULT_SHADOW_INTENSITY;\n      this.shadowSoftness = DEFAULT_SHADOW_SOFTNESS;\n      this.exposure = DEFAULT_EXPOSURE;\n      this[_a] = null;\n      this[_b] = null;\n      this[_c] = null;\n    }\n    updated(changedProperties) {\n      super.updated(changedProperties);\n      if (changedProperties.has('shadowIntensity')) {\n        this[$scene].setShadowIntensity(this.shadowIntensity * BASE_OPACITY);\n        this[$needsRender]();\n      }\n      if (changedProperties.has('shadowSoftness')) {\n        this[$scene].setShadowSoftness(this.shadowSoftness);\n        this[$needsRender]();\n      }\n      if (changedProperties.has('exposure')) {\n        this[$scene].exposure = this.exposure;\n        this[$needsRender]();\n      }\n      if ((changedProperties.has('environmentImage') || changedProperties.has('skyboxImage')) && this[$shouldAttemptPreload]()) {\n        this[$updateEnvironment]();\n      }\n    }\n    hasBakedShadow() {\n      return this[$scene].bakedShadows.size > 0;\n    }\n    async [(_a = $currentEnvironmentMap, _b = $currentBackground, _c = $cancelEnvironmentUpdate, $updateEnvironment)]() {\n      const {\n        skyboxImage,\n        environmentImage\n      } = this;\n      if (this[$cancelEnvironmentUpdate] != null) {\n        this[$cancelEnvironmentUpdate]();\n        this[$cancelEnvironmentUpdate] = null;\n      }\n      const {\n        textureUtils\n      } = this[$renderer];\n      if (textureUtils == null) {\n        return;\n      }\n      const updateEnvProgress = this[$progressTracker].beginActivity();\n      try {\n        const {\n          environmentMap,\n          skybox\n        } = await textureUtils.generateEnvironmentMapAndSkybox(deserializeUrl(skyboxImage), environmentImage, progress => updateEnvProgress(clamp(progress, 0, 1)));\n        if (this[$currentEnvironmentMap] !== environmentMap) {\n          this[$currentEnvironmentMap] = environmentMap;\n          this.dispatchEvent(new CustomEvent('environment-change'));\n        }\n        if (skybox != null) {\n          // When using the same environment and skybox, use the environment as\n          // it gives HDR filtering.\n          this[$currentBackground] = skybox.name === environmentMap.name ? environmentMap : skybox;\n        } else {\n          this[$currentBackground] = null;\n        }\n        this[$scene].setEnvironmentAndSkybox(this[$currentEnvironmentMap], this[$currentBackground]);\n        this[$scene].dispatchEvent({\n          type: 'envmap-update'\n        });\n      } catch (errorOrPromise) {\n        if (errorOrPromise instanceof Error) {\n          this[$scene].setEnvironmentAndSkybox(null, null);\n          throw errorOrPromise;\n        }\n      } finally {\n        updateEnvProgress(1.0);\n      }\n    }\n  }\n  __decorate([property({\n    type: String,\n    attribute: 'environment-image'\n  })], EnvironmentModelViewerElement.prototype, \"environmentImage\", void 0);\n  __decorate([property({\n    type: String,\n    attribute: 'skybox-image'\n  })], EnvironmentModelViewerElement.prototype, \"skyboxImage\", void 0);\n  __decorate([property({\n    type: Number,\n    attribute: 'shadow-intensity'\n  })], EnvironmentModelViewerElement.prototype, \"shadowIntensity\", void 0);\n  __decorate([property({\n    type: Number,\n    attribute: 'shadow-softness'\n  })], EnvironmentModelViewerElement.prototype, \"shadowSoftness\", void 0);\n  __decorate([property({\n    type: Number\n  })], EnvironmentModelViewerElement.prototype, \"exposure\", void 0);\n  return EnvironmentModelViewerElement;\n};","map":{"version":3,"names":["property","$needsRender","$progressTracker","$renderer","$scene","$shouldAttemptPreload","clamp","deserializeUrl","BASE_OPACITY","DEFAULT_SHADOW_INTENSITY","DEFAULT_SHADOW_SOFTNESS","DEFAULT_EXPOSURE","$currentEnvironmentMap","Symbol","$currentBackground","$updateEnvironment","$cancelEnvironmentUpdate","EnvironmentMixin","ModelViewerElement","EnvironmentModelViewerElement","constructor","environmentImage","skyboxImage","shadowIntensity","shadowSoftness","exposure","_a","_b","_c","updated","changedProperties","has","setShadowIntensity","setShadowSoftness","hasBakedShadow","bakedShadows","size","textureUtils","updateEnvProgress","beginActivity","environmentMap","skybox","generateEnvironmentMapAndSkybox","progress","dispatchEvent","CustomEvent","name","setEnvironmentAndSkybox","type","errorOrPromise","Error","__decorate","String","attribute","Number"],"sources":["C:\\Users\\SUMAN K\\meta_transfer\\node_modules\\@google\\model-viewer\\src\\features\\environment.ts"],"sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {property} from 'lit/decorators.js';\nimport {Texture} from 'three';\n\nimport ModelViewerElementBase, {$needsRender, $progressTracker, $renderer, $scene, $shouldAttemptPreload} from '../model-viewer-base.js';\nimport {clamp, Constructor, deserializeUrl} from '../utilities.js';\n\nexport const BASE_OPACITY = 0.5;\nconst DEFAULT_SHADOW_INTENSITY = 0.0;\nconst DEFAULT_SHADOW_SOFTNESS = 1.0;\nconst DEFAULT_EXPOSURE = 1.0;\n\nexport const $currentEnvironmentMap = Symbol('currentEnvironmentMap');\nexport const $currentBackground = Symbol('currentBackground');\nexport const $updateEnvironment = Symbol('updateEnvironment');\nconst $cancelEnvironmentUpdate = Symbol('cancelEnvironmentUpdate');\n\nexport declare interface EnvironmentInterface {\n  environmentImage: string|null;\n  skyboxImage: string|null;\n  shadowIntensity: number;\n  shadowSoftness: number;\n  exposure: number;\n  hasBakedShadow(): boolean;\n}\n\nexport const EnvironmentMixin = <T extends Constructor<ModelViewerElementBase>>(\n    ModelViewerElement: T): Constructor<EnvironmentInterface>&T => {\n  class EnvironmentModelViewerElement extends ModelViewerElement {\n    @property({type: String, attribute: 'environment-image'})\n    environmentImage: string|null = null;\n\n    @property({type: String, attribute: 'skybox-image'})\n    skyboxImage: string|null = null;\n\n    @property({type: Number, attribute: 'shadow-intensity'})\n    shadowIntensity: number = DEFAULT_SHADOW_INTENSITY;\n\n    @property({type: Number, attribute: 'shadow-softness'})\n    shadowSoftness: number = DEFAULT_SHADOW_SOFTNESS;\n\n    @property({\n      type: Number,\n    })\n    exposure: number = DEFAULT_EXPOSURE;\n\n    protected[$currentEnvironmentMap]: Texture|null = null;\n    protected[$currentBackground]: Texture|null = null;\n\n    private[$cancelEnvironmentUpdate]: ((...args: any[]) => any)|null = null;\n\n    updated(changedProperties: Map<string|number|symbol, unknown>) {\n      super.updated(changedProperties);\n\n      if (changedProperties.has('shadowIntensity')) {\n        this[$scene].setShadowIntensity(this.shadowIntensity * BASE_OPACITY);\n        this[$needsRender]();\n      }\n\n      if (changedProperties.has('shadowSoftness')) {\n        this[$scene].setShadowSoftness(this.shadowSoftness);\n        this[$needsRender]();\n      }\n\n      if (changedProperties.has('exposure')) {\n        this[$scene].exposure = this.exposure;\n        this[$needsRender]();\n      }\n\n      if ((changedProperties.has('environmentImage') ||\n           changedProperties.has('skyboxImage')) &&\n          this[$shouldAttemptPreload]()) {\n        this[$updateEnvironment]();\n      }\n    }\n\n    hasBakedShadow(): boolean {\n      return this[$scene].bakedShadows.size > 0;\n    }\n\n    async[$updateEnvironment]() {\n      const {skyboxImage, environmentImage} = this;\n\n      if (this[$cancelEnvironmentUpdate] != null) {\n        this[$cancelEnvironmentUpdate]!();\n        this[$cancelEnvironmentUpdate] = null;\n      }\n\n      const {textureUtils} = this[$renderer];\n\n      if (textureUtils == null) {\n        return;\n      }\n\n      const updateEnvProgress = this[$progressTracker].beginActivity();\n\n      try {\n        const {environmentMap, skybox} =\n            await textureUtils.generateEnvironmentMapAndSkybox(\n                deserializeUrl(skyboxImage),\n                environmentImage,\n                (progress: number) => updateEnvProgress(clamp(progress, 0, 1)));\n\n        if (this[$currentEnvironmentMap] !== environmentMap) {\n          this[$currentEnvironmentMap] = environmentMap;\n          this.dispatchEvent(new CustomEvent('environment-change'));\n        }\n        if (skybox != null) {\n          // When using the same environment and skybox, use the environment as\n          // it gives HDR filtering.\n          this[$currentBackground] =\n              skybox.name === environmentMap.name ? environmentMap : skybox;\n        } else {\n          this[$currentBackground] = null;\n        }\n\n        this[$scene].setEnvironmentAndSkybox(\n            this[$currentEnvironmentMap], this[$currentBackground]);\n        this[$scene].dispatchEvent({type: 'envmap-update'});\n      } catch (errorOrPromise) {\n        if (errorOrPromise instanceof Error) {\n          this[$scene].setEnvironmentAndSkybox(null, null);\n          throw errorOrPromise;\n        }\n      } finally {\n        updateEnvProgress(1.0);\n      }\n    }\n  }\n\n  return EnvironmentModelViewerElement;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}