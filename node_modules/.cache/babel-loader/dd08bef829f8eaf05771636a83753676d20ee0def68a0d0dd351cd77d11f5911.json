{"ast":null,"code":"/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Mesh, OrthographicCamera, PlaneGeometry, Scene, ShaderMaterial, Texture, WebGLRenderTarget } from 'three';\n/**\n * This Debugger exposes internal details of the <model-viewer> rendering\n * substructure so that external tools can more easily inspect and operate on\n * them.\n *\n * It also activates shader debugging on the associated GL context. Shader\n * debugging trades performance for useful error information, so it is not\n * recommended to activate this unless needed.\n */\nexport class Debugger {\n  constructor(renderer) {\n    // Force WebGL shader debugging on:\n    renderer.threeRenderer.debug = {\n      checkShaderErrors: true\n    };\n    // Announce debug details at microtask timing to give the `Renderer`\n    // constructor time to complete its initialization, just to be on the safe\n    // side:\n    Promise.resolve().then(() => {\n      self.dispatchEvent(new CustomEvent('model-viewer-renderer-debug', {\n        detail: {\n          renderer,\n          THREE: {\n            ShaderMaterial,\n            Texture,\n            Mesh,\n            Scene,\n            PlaneGeometry,\n            OrthographicCamera,\n            WebGLRenderTarget\n          }\n        }\n      }));\n    });\n  }\n  addScene(scene) {\n    self.dispatchEvent(new CustomEvent('model-viewer-scene-added-debug', {\n      detail: {\n        scene\n      }\n    }));\n  }\n  removeScene(scene) {\n    self.dispatchEvent(new CustomEvent('model-viewer-scene-removed-debug', {\n      detail: {\n        scene\n      }\n    }));\n  }\n}","map":{"version":3,"names":["Mesh","OrthographicCamera","PlaneGeometry","Scene","ShaderMaterial","Texture","WebGLRenderTarget","Debugger","constructor","renderer","threeRenderer","debug","checkShaderErrors","Promise","resolve","then","self","dispatchEvent","CustomEvent","detail","THREE","addScene","scene","removeScene"],"sources":["C:\\Users\\SUMAN K\\meta_transfer\\node_modules\\@google\\model-viewer\\src\\three-components\\Debugger.ts"],"sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Mesh, OrthographicCamera, PlaneGeometry, Scene, ShaderMaterial, Texture, WebGLRenderTarget} from 'three';\n\nimport {Constructor} from '../utilities.js';\n\nimport {ModelScene} from './ModelScene.js';\nimport {Renderer} from './Renderer.js';\n\nexport interface ModelViewerRendererDebugDetails {\n  renderer: Renderer;\n  THREE: {\n    ShaderMaterial: Constructor<ShaderMaterial>;\n    PlaneGeometry: Constructor<PlaneGeometry>;\n    OrthographicCamera: Constructor<OrthographicCamera>;\n    WebGLRenderTarget: Constructor<WebGLRenderTarget>;\n    Texture: Constructor<Texture>;\n    Scene: Constructor<Scene>;\n    Mesh: Constructor<Mesh>;\n  };\n}\n\nexport interface ModelViewerSceneDetails {\n  scene: ModelScene\n}\n\n/**\n * This Debugger exposes internal details of the <model-viewer> rendering\n * substructure so that external tools can more easily inspect and operate on\n * them.\n *\n * It also activates shader debugging on the associated GL context. Shader\n * debugging trades performance for useful error information, so it is not\n * recommended to activate this unless needed.\n */\nexport class Debugger {\n  constructor(renderer: Renderer) {\n    // Force WebGL shader debugging on:\n    renderer.threeRenderer.debug = {checkShaderErrors: true};\n    // Announce debug details at microtask timing to give the `Renderer`\n    // constructor time to complete its initialization, just to be on the safe\n    // side:\n    Promise.resolve().then(() => {\n      self.dispatchEvent(new CustomEvent<ModelViewerRendererDebugDetails>(\n          'model-viewer-renderer-debug', {\n            detail: {\n              renderer,\n              THREE: {\n                ShaderMaterial,\n                Texture,\n                Mesh,\n                Scene,\n                PlaneGeometry,\n                OrthographicCamera,\n                WebGLRenderTarget\n              }\n            }\n          }));\n    });\n  }\n\n  addScene(scene: ModelScene) {\n    self.dispatchEvent(new CustomEvent<ModelViewerSceneDetails>(\n        'model-viewer-scene-added-debug', {detail: {scene}}));\n  }\n\n  removeScene(scene: ModelScene) {\n    self.dispatchEvent(new CustomEvent<ModelViewerSceneDetails>(\n        'model-viewer-scene-removed-debug', {detail: {scene}}));\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;AAeA,SAAQA,IAAI,EAAEC,kBAAkB,EAAEC,aAAa,EAAEC,KAAK,EAAEC,cAAc,EAAEC,OAAO,EAAEC,iBAAiB,QAAO,OAAO;AAwBhH;;;;;;;;;AASA,OAAM,MAAOC,QAAQ;EACnBC,YAAYC,QAAkB;IAC5B;IACAA,QAAQ,CAACC,aAAa,CAACC,KAAK,GAAG;MAACC,iBAAiB,EAAE;IAAI,CAAC;IACxD;IACA;IACA;IACAC,OAAO,CAACC,OAAO,EAAE,CAACC,IAAI,CAAC,MAAK;MAC1BC,IAAI,CAACC,aAAa,CAAC,IAAIC,WAAW,CAC9B,6BAA6B,EAAE;QAC7BC,MAAM,EAAE;UACNV,QAAQ;UACRW,KAAK,EAAE;YACLhB,cAAc;YACdC,OAAO;YACPL,IAAI;YACJG,KAAK;YACLD,aAAa;YACbD,kBAAkB;YAClBK;;;OAGL,CAAC,CAAC;IACT,CAAC,CAAC;EACJ;EAEAe,QAAQA,CAACC,KAAiB;IACxBN,IAAI,CAACC,aAAa,CAAC,IAAIC,WAAW,CAC9B,gCAAgC,EAAE;MAACC,MAAM,EAAE;QAACG;MAAK;IAAC,CAAC,CAAC,CAAC;EAC3D;EAEAC,WAAWA,CAACD,KAAiB;IAC3BN,IAAI,CAACC,aAAa,CAAC,IAAIC,WAAW,CAC9B,kCAAkC,EAAE;MAACC,MAAM,EAAE;QAACG;MAAK;IAAC,CAAC,CAAC,CAAC;EAC7D"},"metadata":{},"sourceType":"module","externalDependencies":[]}