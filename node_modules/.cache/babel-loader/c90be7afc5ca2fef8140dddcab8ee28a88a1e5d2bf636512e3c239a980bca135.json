{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPaymasterParams = exports.getGeneralPaymasterInput = exports.getApprovalBasedPaymasterInput = exports.IPaymasterFlow = void 0;\nconst ethers_1 = require(\"ethers\");\nexports.IPaymasterFlow = new ethers_1.ethers.utils.Interface(require('../../abi/IPaymasterFlow.json').abi);\nfunction getApprovalBasedPaymasterInput(paymasterInput) {\n  return exports.IPaymasterFlow.encodeFunctionData('approvalBased', [paymasterInput.token, paymasterInput.minimalAllowance, paymasterInput.innerInput]);\n}\nexports.getApprovalBasedPaymasterInput = getApprovalBasedPaymasterInput;\nfunction getGeneralPaymasterInput(paymasterInput) {\n  return exports.IPaymasterFlow.encodeFunctionData('general', [paymasterInput.innerInput]);\n}\nexports.getGeneralPaymasterInput = getGeneralPaymasterInput;\nfunction getPaymasterParams(paymasterAddress, paymasterInput) {\n  if (paymasterInput.type == 'General') {\n    return {\n      paymaster: paymasterAddress,\n      paymasterInput: getGeneralPaymasterInput(paymasterInput)\n    };\n  } else {\n    return {\n      paymaster: paymasterAddress,\n      paymasterInput: getApprovalBasedPaymasterInput(paymasterInput)\n    };\n  }\n}\nexports.getPaymasterParams = getPaymasterParams;","map":{"version":3,"names":["Object","defineProperty","exports","value","getPaymasterParams","getGeneralPaymasterInput","getApprovalBasedPaymasterInput","IPaymasterFlow","ethers_1","require","ethers","utils","Interface","abi","paymasterInput","encodeFunctionData","token","minimalAllowance","innerInput","paymasterAddress","type","paymaster"],"sources":["C:/Users/SUMAN K/meta_transfer/node_modules/zksync-web3/build/src/paymaster-utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPaymasterParams = exports.getGeneralPaymasterInput = exports.getApprovalBasedPaymasterInput = exports.IPaymasterFlow = void 0;\nconst ethers_1 = require(\"ethers\");\nexports.IPaymasterFlow = new ethers_1.ethers.utils.Interface(require('../../abi/IPaymasterFlow.json').abi);\nfunction getApprovalBasedPaymasterInput(paymasterInput) {\n    return exports.IPaymasterFlow.encodeFunctionData('approvalBased', [\n        paymasterInput.token,\n        paymasterInput.minimalAllowance,\n        paymasterInput.innerInput\n    ]);\n}\nexports.getApprovalBasedPaymasterInput = getApprovalBasedPaymasterInput;\nfunction getGeneralPaymasterInput(paymasterInput) {\n    return exports.IPaymasterFlow.encodeFunctionData('general', [paymasterInput.innerInput]);\n}\nexports.getGeneralPaymasterInput = getGeneralPaymasterInput;\nfunction getPaymasterParams(paymasterAddress, paymasterInput) {\n    if (paymasterInput.type == 'General') {\n        return {\n            paymaster: paymasterAddress,\n            paymasterInput: getGeneralPaymasterInput(paymasterInput)\n        };\n    }\n    else {\n        return {\n            paymaster: paymasterAddress,\n            paymasterInput: getApprovalBasedPaymasterInput(paymasterInput)\n        };\n    }\n}\nexports.getPaymasterParams = getPaymasterParams;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAGF,OAAO,CAACG,wBAAwB,GAAGH,OAAO,CAACI,8BAA8B,GAAGJ,OAAO,CAACK,cAAc,GAAG,KAAK,CAAC;AACxI,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAClCP,OAAO,CAACK,cAAc,GAAG,IAAIC,QAAQ,CAACE,MAAM,CAACC,KAAK,CAACC,SAAS,CAACH,OAAO,CAAC,+BAA+B,CAAC,CAACI,GAAG,CAAC;AAC1G,SAASP,8BAA8BA,CAACQ,cAAc,EAAE;EACpD,OAAOZ,OAAO,CAACK,cAAc,CAACQ,kBAAkB,CAAC,eAAe,EAAE,CAC9DD,cAAc,CAACE,KAAK,EACpBF,cAAc,CAACG,gBAAgB,EAC/BH,cAAc,CAACI,UAAU,CAC5B,CAAC;AACN;AACAhB,OAAO,CAACI,8BAA8B,GAAGA,8BAA8B;AACvE,SAASD,wBAAwBA,CAACS,cAAc,EAAE;EAC9C,OAAOZ,OAAO,CAACK,cAAc,CAACQ,kBAAkB,CAAC,SAAS,EAAE,CAACD,cAAc,CAACI,UAAU,CAAC,CAAC;AAC5F;AACAhB,OAAO,CAACG,wBAAwB,GAAGA,wBAAwB;AAC3D,SAASD,kBAAkBA,CAACe,gBAAgB,EAAEL,cAAc,EAAE;EAC1D,IAAIA,cAAc,CAACM,IAAI,IAAI,SAAS,EAAE;IAClC,OAAO;MACHC,SAAS,EAAEF,gBAAgB;MAC3BL,cAAc,EAAET,wBAAwB,CAACS,cAAc;IAC3D,CAAC;EACL,CAAC,MACI;IACD,OAAO;MACHO,SAAS,EAAEF,gBAAgB;MAC3BL,cAAc,EAAER,8BAA8B,CAACQ,cAAc;IACjE,CAAC;EACL;AACJ;AACAZ,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}