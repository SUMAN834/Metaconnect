{"ast":null,"code":"import { _ as _classPrivateMethodInitSpec, a as _classPrivateMethodGet } from '../../../../dist/classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet, b as _classPrivateFieldGet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { W as WagmiAdapter } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { a as AbstractClientWallet } from '../../../../dist/base-eec23f27.browser.esm.js';\nimport { T as TW_WC_PROJECT_ID } from '../../../../dist/wc-c6a6a61c.browser.esm.js';\nimport { w as walletIds } from '../../../../dist/walletIds-e41b240b.browser.esm.js';\nimport 'eventemitter3';\nimport '@thirdweb-dev/chains';\nimport '../../abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js';\nimport 'ethers';\nimport '@thirdweb-dev/sdk';\nvar _walletConnectConnector = /*#__PURE__*/new WeakMap();\nvar _provider = /*#__PURE__*/new WeakMap();\nvar _maybeThrowError = /*#__PURE__*/new WeakMap();\nvar _onConnect = /*#__PURE__*/new WeakMap();\nvar _onDisconnect = /*#__PURE__*/new WeakMap();\nvar _onChange = /*#__PURE__*/new WeakMap();\nvar _onMessage = /*#__PURE__*/new WeakMap();\nvar _onSessionRequestSent = /*#__PURE__*/new WeakMap();\nvar _setupListeners = /*#__PURE__*/new WeakSet();\nvar _removeListeners = /*#__PURE__*/new WeakSet();\nclass WalletConnect extends AbstractClientWallet {\n  get walletName() {\n    return \"WalletConnect\";\n  }\n  constructor(options) {\n    super(options?.walletId || WalletConnect.id, options);\n    _classPrivateMethodInitSpec(this, _removeListeners);\n    _classPrivateMethodInitSpec(this, _setupListeners);\n    _classPrivateFieldInitSpec(this, _walletConnectConnector, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _maybeThrowError, {\n      writable: true,\n      value: error => {\n        if (error) {\n          throw error;\n        }\n      }\n    });\n    _classPrivateFieldInitSpec(this, _onConnect, {\n      writable: true,\n      value: data => {\n        _classPrivateFieldSet(this, _provider, data.provider);\n        if (!_classPrivateFieldGet(this, _provider)) {\n          throw new Error(\"WalletConnect provider not found after connecting.\");\n        }\n      }\n    });\n    _classPrivateFieldInitSpec(this, _onDisconnect, {\n      writable: true,\n      value: () => {\n        _classPrivateMethodGet(this, _removeListeners, _removeListeners2).call(this);\n      }\n    });\n    _classPrivateFieldInitSpec(this, _onChange, {\n      writable: true,\n      value: async payload => {\n        if (payload.chain) ;else if (payload.account) ;\n      }\n    });\n    _classPrivateFieldInitSpec(this, _onMessage, {\n      writable: true,\n      value: payload => {\n        switch (payload.type) {\n          case \"display_uri\":\n            this.emit(\"display_uri\", payload.data);\n            break;\n        }\n      }\n    });\n    _classPrivateFieldInitSpec(this, _onSessionRequestSent, {\n      writable: true,\n      value: () => {\n        this.emit(\"wc_session_request_sent\");\n      }\n    });\n    this.projectId = options?.projectId || TW_WC_PROJECT_ID;\n    this.qrcode = options?.qrcode === false ? false : true;\n  }\n  async getConnector() {\n    if (!this.connector) {\n      // import the connector dynamically\n      const {\n        WalletConnectConnector\n      } = await import('../../../connectors/wallet-connect/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect.browser.esm.js');\n      _classPrivateFieldSet(this, _walletConnectConnector, new WalletConnectConnector({\n        chains: this.chains,\n        options: {\n          qrcode: this.qrcode,\n          projectId: this.projectId,\n          dappMetadata: this.dappMetadata,\n          storage: this.walletStorage,\n          qrModalOptions: this.options?.qrModalOptions\n        }\n      }));\n      this.connector = new WagmiAdapter(_classPrivateFieldGet(this, _walletConnectConnector));\n      _classPrivateFieldSet(this, _provider, await _classPrivateFieldGet(this, _walletConnectConnector).getProvider());\n      _classPrivateMethodGet(this, _setupListeners, _setupListeners2).call(this);\n    }\n    return this.connector;\n  }\n  async connectWithQrCode(options) {\n    await this.getConnector();\n    const wcConnector = _classPrivateFieldGet(this, _walletConnectConnector);\n    if (!wcConnector) {\n      throw new Error(\"WalletConnect connector not found\");\n    }\n    const wcProvider = await wcConnector.getProvider();\n    wcProvider.on(\"display_uri\", uri => {\n      options.onQrCodeUri(uri);\n    });\n\n    // trigger connect flow\n    this.connect({\n      chainId: options.chainId\n    }).then(options.onConnected);\n  }\n}\nfunction _setupListeners2() {\n  if (!_classPrivateFieldGet(this, _walletConnectConnector)) {\n    return;\n  }\n  _classPrivateMethodGet(this, _removeListeners, _removeListeners2).call(this);\n  _classPrivateFieldGet(this, _walletConnectConnector).on(\"connect\", _classPrivateFieldGet(this, _onConnect));\n  _classPrivateFieldGet(this, _walletConnectConnector).on(\"disconnect\", _classPrivateFieldGet(this, _onDisconnect));\n  _classPrivateFieldGet(this, _walletConnectConnector).on(\"change\", _classPrivateFieldGet(this, _onChange));\n  _classPrivateFieldGet(this, _walletConnectConnector).on(\"message\", _classPrivateFieldGet(this, _onMessage));\n  _classPrivateFieldGet(this, _provider)?.signer.client.on(\"session_request_sent\", _classPrivateFieldGet(this, _onSessionRequestSent));\n}\nfunction _removeListeners2() {\n  if (!_classPrivateFieldGet(this, _walletConnectConnector)) {\n    return;\n  }\n  _classPrivateFieldGet(this, _walletConnectConnector).removeListener(\"connect\", _classPrivateFieldGet(this, _onConnect));\n  _classPrivateFieldGet(this, _walletConnectConnector).removeListener(\"disconnect\", _classPrivateFieldGet(this, _onDisconnect));\n  _classPrivateFieldGet(this, _walletConnectConnector).removeListener(\"change\", _classPrivateFieldGet(this, _onChange));\n  _classPrivateFieldGet(this, _walletConnectConnector).removeListener(\"message\", _classPrivateFieldGet(this, _onMessage));\n  _classPrivateFieldGet(this, _provider)?.signer.client.removeListener(\"session_request_sent\", _classPrivateFieldGet(this, _onSessionRequestSent));\n}\n_defineProperty(WalletConnect, \"id\", walletIds.walletConnect);\n_defineProperty(WalletConnect, \"meta\", {\n  name: \"WalletConnect\",\n  iconURL: \"ipfs://QmX58KPRaTC9JYZ7KriuBzeoEaV2P9eZcA3qbFnTHZazKw/wallet-connect.svg\"\n});\nexport { WalletConnect };","map":{"version":3,"names":["_","_classPrivateMethodInitSpec","a","_classPrivateMethodGet","_defineProperty","_classPrivateFieldInitSpec","_classPrivateFieldSet","b","_classPrivateFieldGet","W","WagmiAdapter","AbstractClientWallet","T","TW_WC_PROJECT_ID","w","walletIds","_walletConnectConnector","WeakMap","_provider","_maybeThrowError","_onConnect","_onDisconnect","_onChange","_onMessage","_onSessionRequestSent","_setupListeners","WeakSet","_removeListeners","WalletConnect","walletName","constructor","options","walletId","id","writable","value","error","data","provider","Error","_removeListeners2","call","payload","chain","account","type","emit","projectId","qrcode","getConnector","connector","WalletConnectConnector","chains","dappMetadata","storage","walletStorage","qrModalOptions","getProvider","_setupListeners2","connectWithQrCode","wcConnector","wcProvider","on","uri","onQrCodeUri","connect","chainId","then","onConnected","signer","client","removeListener","walletConnect","name","iconURL"],"sources":["C:/Users/SUMAN K/meta_transfer/node_modules/@thirdweb-dev/wallets/evm/wallets/wallet-connect/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect.browser.esm.js"],"sourcesContent":["import { _ as _classPrivateMethodInitSpec, a as _classPrivateMethodGet } from '../../../../dist/classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet, b as _classPrivateFieldGet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { W as WagmiAdapter } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { a as AbstractClientWallet } from '../../../../dist/base-eec23f27.browser.esm.js';\nimport { T as TW_WC_PROJECT_ID } from '../../../../dist/wc-c6a6a61c.browser.esm.js';\nimport { w as walletIds } from '../../../../dist/walletIds-e41b240b.browser.esm.js';\nimport 'eventemitter3';\nimport '@thirdweb-dev/chains';\nimport '../../abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js';\nimport 'ethers';\nimport '@thirdweb-dev/sdk';\n\nvar _walletConnectConnector = /*#__PURE__*/new WeakMap();\nvar _provider = /*#__PURE__*/new WeakMap();\nvar _maybeThrowError = /*#__PURE__*/new WeakMap();\nvar _onConnect = /*#__PURE__*/new WeakMap();\nvar _onDisconnect = /*#__PURE__*/new WeakMap();\nvar _onChange = /*#__PURE__*/new WeakMap();\nvar _onMessage = /*#__PURE__*/new WeakMap();\nvar _onSessionRequestSent = /*#__PURE__*/new WeakMap();\nvar _setupListeners = /*#__PURE__*/new WeakSet();\nvar _removeListeners = /*#__PURE__*/new WeakSet();\nclass WalletConnect extends AbstractClientWallet {\n  get walletName() {\n    return \"WalletConnect\";\n  }\n  constructor(options) {\n    super(options?.walletId || WalletConnect.id, options);\n    _classPrivateMethodInitSpec(this, _removeListeners);\n    _classPrivateMethodInitSpec(this, _setupListeners);\n    _classPrivateFieldInitSpec(this, _walletConnectConnector, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _maybeThrowError, {\n      writable: true,\n      value: error => {\n        if (error) {\n          throw error;\n        }\n      }\n    });\n    _classPrivateFieldInitSpec(this, _onConnect, {\n      writable: true,\n      value: data => {\n        _classPrivateFieldSet(this, _provider, data.provider);\n        if (!_classPrivateFieldGet(this, _provider)) {\n          throw new Error(\"WalletConnect provider not found after connecting.\");\n        }\n      }\n    });\n    _classPrivateFieldInitSpec(this, _onDisconnect, {\n      writable: true,\n      value: () => {\n        _classPrivateMethodGet(this, _removeListeners, _removeListeners2).call(this);\n      }\n    });\n    _classPrivateFieldInitSpec(this, _onChange, {\n      writable: true,\n      value: async payload => {\n        if (payload.chain) ; else if (payload.account) ;\n      }\n    });\n    _classPrivateFieldInitSpec(this, _onMessage, {\n      writable: true,\n      value: payload => {\n        switch (payload.type) {\n          case \"display_uri\":\n            this.emit(\"display_uri\", payload.data);\n            break;\n        }\n      }\n    });\n    _classPrivateFieldInitSpec(this, _onSessionRequestSent, {\n      writable: true,\n      value: () => {\n        this.emit(\"wc_session_request_sent\");\n      }\n    });\n    this.projectId = options?.projectId || TW_WC_PROJECT_ID;\n    this.qrcode = options?.qrcode === false ? false : true;\n  }\n  async getConnector() {\n    if (!this.connector) {\n      // import the connector dynamically\n      const {\n        WalletConnectConnector\n      } = await import('../../../connectors/wallet-connect/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect.browser.esm.js');\n      _classPrivateFieldSet(this, _walletConnectConnector, new WalletConnectConnector({\n        chains: this.chains,\n        options: {\n          qrcode: this.qrcode,\n          projectId: this.projectId,\n          dappMetadata: this.dappMetadata,\n          storage: this.walletStorage,\n          qrModalOptions: this.options?.qrModalOptions\n        }\n      }));\n      this.connector = new WagmiAdapter(_classPrivateFieldGet(this, _walletConnectConnector));\n      _classPrivateFieldSet(this, _provider, await _classPrivateFieldGet(this, _walletConnectConnector).getProvider());\n      _classPrivateMethodGet(this, _setupListeners, _setupListeners2).call(this);\n    }\n    return this.connector;\n  }\n  async connectWithQrCode(options) {\n    await this.getConnector();\n    const wcConnector = _classPrivateFieldGet(this, _walletConnectConnector);\n    if (!wcConnector) {\n      throw new Error(\"WalletConnect connector not found\");\n    }\n    const wcProvider = await wcConnector.getProvider();\n    wcProvider.on(\"display_uri\", uri => {\n      options.onQrCodeUri(uri);\n    });\n\n    // trigger connect flow\n    this.connect({\n      chainId: options.chainId\n    }).then(options.onConnected);\n  }\n}\nfunction _setupListeners2() {\n  if (!_classPrivateFieldGet(this, _walletConnectConnector)) {\n    return;\n  }\n  _classPrivateMethodGet(this, _removeListeners, _removeListeners2).call(this);\n  _classPrivateFieldGet(this, _walletConnectConnector).on(\"connect\", _classPrivateFieldGet(this, _onConnect));\n  _classPrivateFieldGet(this, _walletConnectConnector).on(\"disconnect\", _classPrivateFieldGet(this, _onDisconnect));\n  _classPrivateFieldGet(this, _walletConnectConnector).on(\"change\", _classPrivateFieldGet(this, _onChange));\n  _classPrivateFieldGet(this, _walletConnectConnector).on(\"message\", _classPrivateFieldGet(this, _onMessage));\n  _classPrivateFieldGet(this, _provider)?.signer.client.on(\"session_request_sent\", _classPrivateFieldGet(this, _onSessionRequestSent));\n}\nfunction _removeListeners2() {\n  if (!_classPrivateFieldGet(this, _walletConnectConnector)) {\n    return;\n  }\n  _classPrivateFieldGet(this, _walletConnectConnector).removeListener(\"connect\", _classPrivateFieldGet(this, _onConnect));\n  _classPrivateFieldGet(this, _walletConnectConnector).removeListener(\"disconnect\", _classPrivateFieldGet(this, _onDisconnect));\n  _classPrivateFieldGet(this, _walletConnectConnector).removeListener(\"change\", _classPrivateFieldGet(this, _onChange));\n  _classPrivateFieldGet(this, _walletConnectConnector).removeListener(\"message\", _classPrivateFieldGet(this, _onMessage));\n  _classPrivateFieldGet(this, _provider)?.signer.client.removeListener(\"session_request_sent\", _classPrivateFieldGet(this, _onSessionRequestSent));\n}\n_defineProperty(WalletConnect, \"id\", walletIds.walletConnect);\n_defineProperty(WalletConnect, \"meta\", {\n  name: \"WalletConnect\",\n  iconURL: \"ipfs://QmX58KPRaTC9JYZ7KriuBzeoEaV2P9eZcA3qbFnTHZazKw/wallet-connect.svg\"\n});\n\nexport { WalletConnect };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}