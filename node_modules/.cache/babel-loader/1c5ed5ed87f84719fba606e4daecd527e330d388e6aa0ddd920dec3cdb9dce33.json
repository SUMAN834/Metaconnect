{"ast":null,"code":"import { a_ as hasMatchingAbi, cG as AbiSchema, ei as AmountSchema, bD as getCreate2FactoryAddress, bN as computeDeploymentInfo, bB as isContractDeployed, bF as getInitBytecodeWithSalt, cr as BigNumberTransformSchema, cp as BigNumberSchema, ej as CommonNFTOutput, cq as BigNumberishSchema, ek as CommonNFTInput, el as NFTInputOrUriSchema, ct as AddressOrEnsSchema } from './smart-contract-40473f5e.browser.esm.js';\nimport { utils, BigNumber } from 'ethers';\nimport invariant from 'tiny-invariant';\nimport { GENERATED_ABI } from '@thirdweb-dev/generated-abis';\nimport { z } from 'zod';\n\n/**\n * @internal\n * @param contractWrapper\n * @param abi\n * @returns\n */\nfunction matchesPrebuiltAbi(contractWrapper, abi) {\n  return hasMatchingAbi(AbiSchema.parse(contractWrapper.abi || []), [abi]);\n}\nfunction toEther(amount) {\n  return utils.formatEther(amount);\n}\nfunction toUnits(amount, decimals) {\n  return utils.parseUnits(AmountSchema.parse(amount), decimals);\n}\nfunction toDisplayValue(amount, decimals) {\n  return utils.formatUnits(amount, decimals);\n}\n\n/**\n *\n * @internal\n * @param provider\n * @param storage\n * @param create2Factory\n */\nasync function computeNativeTokenAddress(provider, storage, create2Factory, clientId, secretKey) {\n  if (!create2Factory || create2Factory === \"\") {\n    create2Factory = await getCreate2FactoryAddress(provider);\n  }\n  return (await computeDeploymentInfo(\"infra\", provider, storage, create2Factory, {\n    contractName: \"WETH9\"\n  }, clientId, secretKey)).transaction.predictedAddress;\n}\n\n/**\n * Deploy a contract at a deterministic address, using Create2 method\n * Address depends on the Create2 factory address.\n *\n * @public\n *\n * @param type signer\n * @param bytecode\n * @param encodedArgs\n * @param create2FactoryAddress\n */\nasync function deployContractDeterministicRaw(signer, bytecode, encodedArgs, create2FactoryAddress, options, predictedAddress) {\n  let gasLimit = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 7000000;\n  // Check if the implementation contract is already deployed\n  invariant(signer.provider, \"Provider required\");\n  const contractDeployed = predictedAddress ? await isContractDeployed(predictedAddress, signer.provider) : false;\n  if (!contractDeployed) {\n    console.debug(`deploying contract via create2 factory at: ${predictedAddress}`);\n    const initBytecodeWithSalt = getInitBytecodeWithSalt(bytecode, encodedArgs);\n    const tx = {\n      to: create2FactoryAddress,\n      data: initBytecodeWithSalt\n    };\n    try {\n      await signer.estimateGas(tx);\n    } catch (e) {\n      console.debug(\"error estimating gas while deploying prebuilt: \", e);\n      tx.gasLimit = BigNumber.from(gasLimit);\n    }\n    await (await signer.sendTransaction(tx)).wait();\n  }\n}\nfunction getCachedAbiForContract(address) {\n  if (address in GENERATED_ABI) {\n    return GENERATED_ABI[address];\n  }\n  return undefined;\n}\nlet ProposalState = /*#__PURE__*/function (ProposalState) {\n  ProposalState[ProposalState[\"Pending\"] = 0] = \"Pending\";\n  ProposalState[ProposalState[\"Active\"] = 1] = \"Active\";\n  ProposalState[ProposalState[\"Canceled\"] = 2] = \"Canceled\";\n  ProposalState[ProposalState[\"Defeated\"] = 3] = \"Defeated\";\n  ProposalState[ProposalState[\"Succeeded\"] = 4] = \"Succeeded\";\n  ProposalState[ProposalState[\"Queued\"] = 5] = \"Queued\";\n  ProposalState[ProposalState[\"Expired\"] = 6] = \"Expired\";\n  ProposalState[ProposalState[\"Executed\"] = 7] = \"Executed\";\n  return ProposalState;\n}({});\nconst PropertiesInput = /* @__PURE__ */(() => z.object({}).catchall(z.union([BigNumberTransformSchema, z.unknown()])))();\n\n/**\n * @internal\n */\nconst OptionalPropertiesInput = /* @__PURE__ */(() => z.union([z.array(PropertiesInput), PropertiesInput]).optional())();\n\n/**\n * @internal\n */\nconst EditionMetadataOutputSchema = /* @__PURE__ */(() => z.object({\n  supply: BigNumberSchema,\n  metadata: CommonNFTOutput\n}))();\n\n/**\n * @internal\n */\nconst EditionMetadataWithOwnerOutputSchema = /* @__PURE__ */(() => EditionMetadataOutputSchema.extend({\n  owner: z.string(),\n  quantityOwned: BigNumberSchema\n}))();\n\n/**\n * @internal\n */\nconst EditionMetadataInputSchema = /* @__PURE__ */(() => z.object({\n  supply: BigNumberishSchema,\n  metadata: CommonNFTInput\n}))();\n\n/**\n * @internal\n */\nconst EditionMetadataInputOrUriSchema = /* @__PURE__ */(() => z.object({\n  supply: BigNumberishSchema,\n  metadata: NFTInputOrUriSchema\n}))();\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\n/**\n * @internal\n */\nconst TokenMintInputSchema = /* @__PURE__ */(() => z.object({\n  toAddress: AddressOrEnsSchema,\n  amount: AmountSchema\n}))();\n\n/**\n * @public\n */\n\nexport { EditionMetadataOutputSchema as E, OptionalPropertiesInput as O, ProposalState as P, TokenMintInputSchema as T, toUnits as a, toDisplayValue as b, computeNativeTokenAddress as c, deployContractDeterministicRaw as d, EditionMetadataWithOwnerOutputSchema as e, EditionMetadataInputSchema as f, getCachedAbiForContract as g, EditionMetadataInputOrUriSchema as h, matchesPrebuiltAbi as m, toEther as t };","map":{"version":3,"names":["a_","hasMatchingAbi","cG","AbiSchema","ei","AmountSchema","bD","getCreate2FactoryAddress","bN","computeDeploymentInfo","bB","isContractDeployed","bF","getInitBytecodeWithSalt","cr","BigNumberTransformSchema","cp","BigNumberSchema","ej","CommonNFTOutput","cq","BigNumberishSchema","ek","CommonNFTInput","el","NFTInputOrUriSchema","ct","AddressOrEnsSchema","utils","BigNumber","invariant","GENERATED_ABI","z","matchesPrebuiltAbi","contractWrapper","abi","parse","toEther","amount","formatEther","toUnits","decimals","parseUnits","toDisplayValue","formatUnits","computeNativeTokenAddress","provider","storage","create2Factory","clientId","secretKey","contractName","transaction","predictedAddress","deployContractDeterministicRaw","signer","bytecode","encodedArgs","create2FactoryAddress","options","gasLimit","arguments","length","undefined","contractDeployed","console","debug","initBytecodeWithSalt","tx","to","data","estimateGas","e","from","sendTransaction","wait","getCachedAbiForContract","address","ProposalState","PropertiesInput","object","catchall","union","unknown","OptionalPropertiesInput","array","optional","EditionMetadataOutputSchema","supply","metadata","EditionMetadataWithOwnerOutputSchema","extend","owner","string","quantityOwned","EditionMetadataInputSchema","EditionMetadataInputOrUriSchema","TokenMintInputSchema","toAddress","E","O","P","T","a","b","c","d","f","g","h","m","t"],"sources":["C:/Users/SUMAN K/meta_transfer/node_modules/@thirdweb-dev/sdk/dist/token-b033941a.browser.esm.js"],"sourcesContent":["import { a_ as hasMatchingAbi, cG as AbiSchema, ei as AmountSchema, bD as getCreate2FactoryAddress, bN as computeDeploymentInfo, bB as isContractDeployed, bF as getInitBytecodeWithSalt, cr as BigNumberTransformSchema, cp as BigNumberSchema, ej as CommonNFTOutput, cq as BigNumberishSchema, ek as CommonNFTInput, el as NFTInputOrUriSchema, ct as AddressOrEnsSchema } from './smart-contract-40473f5e.browser.esm.js';\nimport { utils, BigNumber } from 'ethers';\nimport invariant from 'tiny-invariant';\nimport { GENERATED_ABI } from '@thirdweb-dev/generated-abis';\nimport { z } from 'zod';\n\n/**\n * @internal\n * @param contractWrapper\n * @param abi\n * @returns\n */\nfunction matchesPrebuiltAbi(contractWrapper, abi) {\n  return hasMatchingAbi(AbiSchema.parse(contractWrapper.abi || []), [abi]);\n}\n\nfunction toEther(amount) {\n  return utils.formatEther(amount);\n}\n\nfunction toUnits(amount, decimals) {\n  return utils.parseUnits(AmountSchema.parse(amount), decimals);\n}\n\nfunction toDisplayValue(amount, decimals) {\n  return utils.formatUnits(amount, decimals);\n}\n\n/**\n *\n * @internal\n * @param provider\n * @param storage\n * @param create2Factory\n */\nasync function computeNativeTokenAddress(provider, storage, create2Factory, clientId, secretKey) {\n  if (!create2Factory || create2Factory === \"\") {\n    create2Factory = await getCreate2FactoryAddress(provider);\n  }\n  return (await computeDeploymentInfo(\"infra\", provider, storage, create2Factory, {\n    contractName: \"WETH9\"\n  }, clientId, secretKey)).transaction.predictedAddress;\n}\n\n/**\n * Deploy a contract at a deterministic address, using Create2 method\n * Address depends on the Create2 factory address.\n *\n * @public\n *\n * @param type signer\n * @param bytecode\n * @param encodedArgs\n * @param create2FactoryAddress\n */\nasync function deployContractDeterministicRaw(signer, bytecode, encodedArgs, create2FactoryAddress, options, predictedAddress) {\n  let gasLimit = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 7000000;\n  // Check if the implementation contract is already deployed\n  invariant(signer.provider, \"Provider required\");\n  const contractDeployed = predictedAddress ? await isContractDeployed(predictedAddress, signer.provider) : false;\n  if (!contractDeployed) {\n    console.debug(`deploying contract via create2 factory at: ${predictedAddress}`);\n    const initBytecodeWithSalt = getInitBytecodeWithSalt(bytecode, encodedArgs);\n    const tx = {\n      to: create2FactoryAddress,\n      data: initBytecodeWithSalt\n    };\n    try {\n      await signer.estimateGas(tx);\n    } catch (e) {\n      console.debug(\"error estimating gas while deploying prebuilt: \", e);\n      tx.gasLimit = BigNumber.from(gasLimit);\n    }\n    await (await signer.sendTransaction(tx)).wait();\n  }\n}\n\nfunction getCachedAbiForContract(address) {\n  if (address in GENERATED_ABI) {\n    return GENERATED_ABI[address];\n  }\n  return undefined;\n}\n\nlet ProposalState = /*#__PURE__*/function (ProposalState) {\n  ProposalState[ProposalState[\"Pending\"] = 0] = \"Pending\";\n  ProposalState[ProposalState[\"Active\"] = 1] = \"Active\";\n  ProposalState[ProposalState[\"Canceled\"] = 2] = \"Canceled\";\n  ProposalState[ProposalState[\"Defeated\"] = 3] = \"Defeated\";\n  ProposalState[ProposalState[\"Succeeded\"] = 4] = \"Succeeded\";\n  ProposalState[ProposalState[\"Queued\"] = 5] = \"Queued\";\n  ProposalState[ProposalState[\"Expired\"] = 6] = \"Expired\";\n  ProposalState[ProposalState[\"Executed\"] = 7] = \"Executed\";\n  return ProposalState;\n}({});\n\nconst PropertiesInput = /* @__PURE__ */(() => z.object({}).catchall(z.union([BigNumberTransformSchema, z.unknown()])))();\n\n/**\n * @internal\n */\nconst OptionalPropertiesInput = /* @__PURE__ */(() => z.union([z.array(PropertiesInput), PropertiesInput]).optional())();\n\n/**\n * @internal\n */\nconst EditionMetadataOutputSchema = /* @__PURE__ */(() => z.object({\n  supply: BigNumberSchema,\n  metadata: CommonNFTOutput\n}))();\n\n/**\n * @internal\n */\nconst EditionMetadataWithOwnerOutputSchema = /* @__PURE__ */(() => EditionMetadataOutputSchema.extend({\n  owner: z.string(),\n  quantityOwned: BigNumberSchema\n}))();\n\n/**\n * @internal\n */\nconst EditionMetadataInputSchema = /* @__PURE__ */(() => z.object({\n  supply: BigNumberishSchema,\n  metadata: CommonNFTInput\n}))();\n\n/**\n * @internal\n */\nconst EditionMetadataInputOrUriSchema = /* @__PURE__ */(() => z.object({\n  supply: BigNumberishSchema,\n  metadata: NFTInputOrUriSchema\n}))();\n\n/**\n * @public\n */\n\n/**\n * @public\n */\n\n/**\n * @internal\n */\nconst TokenMintInputSchema = /* @__PURE__ */(() => z.object({\n  toAddress: AddressOrEnsSchema,\n  amount: AmountSchema\n}))();\n\n/**\n * @public\n */\n\nexport { EditionMetadataOutputSchema as E, OptionalPropertiesInput as O, ProposalState as P, TokenMintInputSchema as T, toUnits as a, toDisplayValue as b, computeNativeTokenAddress as c, deployContractDeterministicRaw as d, EditionMetadataWithOwnerOutputSchema as e, EditionMetadataInputSchema as f, getCachedAbiForContract as g, EditionMetadataInputOrUriSchema as h, matchesPrebuiltAbi as m, toEther as t };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}