{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateEIP712Signature = exports.generateSignature = exports.adjustVInSignature = exports.isTxHashSignedWithPrefix = exports.generatePreValidatedSignature = void 0;\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst utils_1 = require(\"../../utils\");\nconst SafeSignature_1 = __importDefault(require(\"./SafeSignature\"));\nfunction generatePreValidatedSignature(ownerAddress) {\n  const signature = '0x000000000000000000000000' + ownerAddress.slice(2) + '0000000000000000000000000000000000000000000000000000000000000000' + '01';\n  return new SafeSignature_1.default(ownerAddress, signature);\n}\nexports.generatePreValidatedSignature = generatePreValidatedSignature;\nfunction isTxHashSignedWithPrefix(txHash, signature, ownerAddress) {\n  let hasPrefix;\n  try {\n    const rsvSig = {\n      r: Buffer.from(signature.slice(2, 66), 'hex'),\n      s: Buffer.from(signature.slice(66, 130), 'hex'),\n      v: parseInt(signature.slice(130, 132), 16)\n    };\n    const recoveredData = (0, ethereumjs_util_1.ecrecover)(Buffer.from(txHash.slice(2), 'hex'), rsvSig.v, rsvSig.r, rsvSig.s);\n    const recoveredAddress = (0, ethereumjs_util_1.bufferToHex)((0, ethereumjs_util_1.pubToAddress)(recoveredData));\n    hasPrefix = !(0, utils_1.sameString)(recoveredAddress, ownerAddress);\n  } catch (e) {\n    hasPrefix = true;\n  }\n  return hasPrefix;\n}\nexports.isTxHashSignedWithPrefix = isTxHashSignedWithPrefix;\nconst adjustVInSignature = (signingMethod, signature, safeTxHash, signerAddress) => {\n  const ETHEREUM_V_VALUES = [0, 1, 27, 28];\n  const MIN_VALID_V_VALUE_FOR_SAFE_ECDSA = 27;\n  let signatureV = parseInt(signature.slice(-2), 16);\n  if (!ETHEREUM_V_VALUES.includes(signatureV)) {\n    throw new Error('Invalid signature');\n  }\n  if (signingMethod === 'eth_sign') {\n    /*\n      The Safe's expected V value for ECDSA signature is:\n      - 27 or 28\n      - 31 or 32 if the message was signed with a EIP-191 prefix. Should be calculated as ECDSA V value + 4\n      Some wallets do that, some wallets don't, V > 30 is used by contracts to differentiate between\n      prefixed and non-prefixed messages. The only way to know if the message was signed with a\n      prefix is to check if the signer address is the same as the recovered address.\n           More info:\n      https://docs.gnosis-safe.io/contracts/signatures\n    */\n    if (signatureV < MIN_VALID_V_VALUE_FOR_SAFE_ECDSA) {\n      signatureV += MIN_VALID_V_VALUE_FOR_SAFE_ECDSA;\n    }\n    const adjustedSignature = signature.slice(0, -2) + signatureV.toString(16);\n    const signatureHasPrefix = isTxHashSignedWithPrefix(safeTxHash, adjustedSignature, signerAddress);\n    if (signatureHasPrefix) {\n      signatureV += 4;\n    }\n  }\n  if (signingMethod === 'eth_signTypedData') {\n    // Metamask with ledger returns V=0/1 here too, we need to adjust it to be ethereum's valid value (27 or 28)\n    if (signatureV < MIN_VALID_V_VALUE_FOR_SAFE_ECDSA) {\n      signatureV += MIN_VALID_V_VALUE_FOR_SAFE_ECDSA;\n    }\n  }\n  signature = signature.slice(0, -2) + signatureV.toString(16);\n  return signature;\n};\nexports.adjustVInSignature = adjustVInSignature;\nasync function generateSignature(ethAdapter, hash) {\n  const signerAddress = await ethAdapter.getSignerAddress();\n  if (!signerAddress) {\n    throw new Error('EthAdapter must be initialized with a signer to use this method');\n  }\n  let signature = await ethAdapter.signMessage(hash);\n  signature = (0, exports.adjustVInSignature)('eth_sign', signature, hash, signerAddress);\n  return new SafeSignature_1.default(signerAddress, signature);\n}\nexports.generateSignature = generateSignature;\nasync function generateEIP712Signature(ethAdapter, safeTransactionEIP712Args, methodVersion) {\n  const signerAddress = await ethAdapter.getSignerAddress();\n  if (!signerAddress) {\n    throw new Error('EthAdapter must be initialized with a signer to use this method');\n  }\n  let signature = await ethAdapter.signTypedData(safeTransactionEIP712Args, methodVersion);\n  signature = (0, exports.adjustVInSignature)('eth_signTypedData', signature);\n  return new SafeSignature_1.default(signerAddress, signature);\n}\nexports.generateEIP712Signature = generateEIP712Signature;","map":{"version":3,"names":["ethereumjs_util_1","require","utils_1","SafeSignature_1","__importDefault","generatePreValidatedSignature","ownerAddress","signature","slice","default","exports","isTxHashSignedWithPrefix","txHash","hasPrefix","rsvSig","r","Buffer","from","s","v","parseInt","recoveredData","ecrecover","recoveredAddress","bufferToHex","pubToAddress","sameString","e","adjustVInSignature","signingMethod","safeTxHash","signerAddress","ETHEREUM_V_VALUES","MIN_VALID_V_VALUE_FOR_SAFE_ECDSA","signatureV","includes","Error","adjustedSignature","toString","signatureHasPrefix","generateSignature","ethAdapter","hash","getSignerAddress","signMessage","generateEIP712Signature","safeTransactionEIP712Args","methodVersion","signTypedData"],"sources":["../../../../src/utils/signatures/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}