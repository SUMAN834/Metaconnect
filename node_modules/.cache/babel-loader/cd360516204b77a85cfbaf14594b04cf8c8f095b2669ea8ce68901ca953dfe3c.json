{"ast":null,"code":"var te = Object.create;\nvar D = Object.defineProperty;\nvar ne = Object.getOwnPropertyDescriptor;\nvar ie = Object.getOwnPropertyNames;\nvar ae = Object.getPrototypeOf,\n  oe = Object.prototype.hasOwnProperty;\nvar H = (n, r) => () => (r || n((r = {\n  exports: {}\n}).exports, r), r.exports);\nvar se = (n, r, s, m) => {\n  if (r && typeof r == \"object\" || typeof r == \"function\") for (let h of ie(r)) !oe.call(n, h) && h !== s && D(n, h, {\n    get: () => r[h],\n    enumerable: !(m = ne(r, h)) || m.enumerable\n  });\n  return n;\n};\nvar T = (n, r, s) => (s = n != null ? te(ae(n)) : {}, se(r || !n || !n.__esModule ? D(s, \"default\", {\n  value: n,\n  enumerable: !0\n}) : s, n));\nvar C = (n, r, s) => new Promise((m, h) => {\n  var w = p => {\n      try {\n        d(s.next(p));\n      } catch (u) {\n        h(u);\n      }\n    },\n    R = p => {\n      try {\n        d(s.throw(p));\n      } catch (u) {\n        h(u);\n      }\n    },\n    d = p => p.done ? m(p.value) : Promise.resolve(p.value).then(w, R);\n  d((s = s.apply(n, r)).next());\n});\nvar k = H((I, F) => {\n  (function (n, r) {\n    typeof I == \"object\" ? F.exports = I = r() : typeof define == \"function\" && define.amd ? define([], r) : n.CryptoJS = r();\n  })(I, function () {\n    var n = n || function (r, s) {\n      var m = Object.create || function () {\n          function e() {}\n          return function (t) {\n            var c;\n            return e.prototype = t, c = new e(), e.prototype = null, c;\n          };\n        }(),\n        h = {},\n        w = h.lib = {},\n        R = w.Base = function () {\n          return {\n            extend: function (e) {\n              var t = m(this);\n              return e && t.mixIn(e), (!t.hasOwnProperty(\"init\") || this.init === t.init) && (t.init = function () {\n                t.$super.init.apply(this, arguments);\n              }), t.init.prototype = t, t.$super = this, t;\n            },\n            create: function () {\n              var e = this.extend();\n              return e.init.apply(e, arguments), e;\n            },\n            init: function () {},\n            mixIn: function (e) {\n              for (var t in e) e.hasOwnProperty(t) && (this[t] = e[t]);\n              e.hasOwnProperty(\"toString\") && (this.toString = e.toString);\n            },\n            clone: function () {\n              return this.init.prototype.extend(this);\n            }\n          };\n        }(),\n        d = w.WordArray = R.extend({\n          init: function (e, t) {\n            e = this.words = e || [], t != s ? this.sigBytes = t : this.sigBytes = e.length * 4;\n          },\n          toString: function (e) {\n            return (e || u).stringify(this);\n          },\n          concat: function (e) {\n            var t = this.words,\n              c = e.words,\n              i = this.sigBytes,\n              g = e.sigBytes;\n            if (this.clamp(), i % 4) for (var v = 0; v < g; v++) {\n              var b = c[v >>> 2] >>> 24 - v % 4 * 8 & 255;\n              t[i + v >>> 2] |= b << 24 - (i + v) % 4 * 8;\n            } else for (var v = 0; v < g; v += 4) t[i + v >>> 2] = c[v >>> 2];\n            return this.sigBytes += g, this;\n          },\n          clamp: function () {\n            var e = this.words,\n              t = this.sigBytes;\n            e[t >>> 2] &= 4294967295 << 32 - t % 4 * 8, e.length = r.ceil(t / 4);\n          },\n          clone: function () {\n            var e = R.clone.call(this);\n            return e.words = this.words.slice(0), e;\n          },\n          random: function (e) {\n            for (var t = [], c = function (y) {\n                var y = y,\n                  A = 987654321,\n                  B = 4294967295;\n                return function () {\n                  A = 36969 * (A & 65535) + (A >> 16) & B, y = 18e3 * (y & 65535) + (y >> 16) & B;\n                  var x = (A << 16) + y & B;\n                  return x /= 4294967296, x += .5, x * (r.random() > .5 ? 1 : -1);\n                };\n              }, i = 0, g; i < e; i += 4) {\n              var v = c((g || r.random()) * 4294967296);\n              g = v() * 987654071, t.push(v() * 4294967296 | 0);\n            }\n            return new d.init(t, e);\n          }\n        }),\n        p = h.enc = {},\n        u = p.Hex = {\n          stringify: function (e) {\n            for (var t = e.words, c = e.sigBytes, i = [], g = 0; g < c; g++) {\n              var v = t[g >>> 2] >>> 24 - g % 4 * 8 & 255;\n              i.push((v >>> 4).toString(16)), i.push((v & 15).toString(16));\n            }\n            return i.join(\"\");\n          },\n          parse: function (e) {\n            for (var t = e.length, c = [], i = 0; i < t; i += 2) c[i >>> 3] |= parseInt(e.substr(i, 2), 16) << 24 - i % 8 * 4;\n            return new d.init(c, t / 2);\n          }\n        },\n        _ = p.Latin1 = {\n          stringify: function (e) {\n            for (var t = e.words, c = e.sigBytes, i = [], g = 0; g < c; g++) {\n              var v = t[g >>> 2] >>> 24 - g % 4 * 8 & 255;\n              i.push(String.fromCharCode(v));\n            }\n            return i.join(\"\");\n          },\n          parse: function (e) {\n            for (var t = e.length, c = [], i = 0; i < t; i++) c[i >>> 2] |= (e.charCodeAt(i) & 255) << 24 - i % 4 * 8;\n            return new d.init(c, t);\n          }\n        },\n        a = p.Utf8 = {\n          stringify: function (e) {\n            try {\n              return decodeURIComponent(escape(_.stringify(e)));\n            } catch {\n              throw new Error(\"Malformed UTF-8 data\");\n            }\n          },\n          parse: function (e) {\n            return _.parse(unescape(encodeURIComponent(e)));\n          }\n        },\n        f = w.BufferedBlockAlgorithm = R.extend({\n          reset: function () {\n            this._data = new d.init(), this._nDataBytes = 0;\n          },\n          _append: function (e) {\n            typeof e == \"string\" && (e = a.parse(e)), this._data.concat(e), this._nDataBytes += e.sigBytes;\n          },\n          _process: function (e) {\n            var t = this._data,\n              c = t.words,\n              i = t.sigBytes,\n              g = this.blockSize,\n              v = g * 4,\n              b = i / v;\n            e ? b = r.ceil(b) : b = r.max((b | 0) - this._minBufferSize, 0);\n            var y = b * g,\n              A = r.min(y * 4, i);\n            if (y) {\n              for (var B = 0; B < y; B += g) this._doProcessBlock(c, B);\n              var x = c.splice(0, y);\n              t.sigBytes -= A;\n            }\n            return new d.init(x, A);\n          },\n          clone: function () {\n            var e = R.clone.call(this);\n            return e._data = this._data.clone(), e;\n          },\n          _minBufferSize: 0\n        }),\n        o = w.Hasher = f.extend({\n          cfg: R.extend(),\n          init: function (e) {\n            this.cfg = this.cfg.extend(e), this.reset();\n          },\n          reset: function () {\n            f.reset.call(this), this._doReset();\n          },\n          update: function (e) {\n            return this._append(e), this._process(), this;\n          },\n          finalize: function (e) {\n            e && this._append(e);\n            var t = this._doFinalize();\n            return t;\n          },\n          blockSize: 512 / 32,\n          _createHelper: function (e) {\n            return function (t, c) {\n              return new e.init(c).finalize(t);\n            };\n          },\n          _createHmacHelper: function (e) {\n            return function (t, c) {\n              return new l.HMAC.init(e, c).finalize(t);\n            };\n          }\n        }),\n        l = h.algo = {};\n      return h;\n    }(Math);\n    return n;\n  });\n});\nvar z = H((S, W) => {\n  (function (n, r) {\n    typeof S == \"object\" ? W.exports = S = r(k()) : typeof define == \"function\" && define.amd ? define([\"./core\"], r) : r(n.CryptoJS);\n  })(S, function (n) {\n    return function (r) {\n      var s = n,\n        m = s.lib,\n        h = m.WordArray,\n        w = m.Hasher,\n        R = s.algo,\n        d = [],\n        p = [];\n      (function () {\n        function a(e) {\n          for (var t = r.sqrt(e), c = 2; c <= t; c++) if (!(e % c)) return !1;\n          return !0;\n        }\n        function f(e) {\n          return (e - (e | 0)) * 4294967296 | 0;\n        }\n        for (var o = 2, l = 0; l < 64;) a(o) && (l < 8 && (d[l] = f(r.pow(o, 1 / 2))), p[l] = f(r.pow(o, 1 / 3)), l++), o++;\n      })();\n      var u = [],\n        _ = R.SHA256 = w.extend({\n          _doReset: function () {\n            this._hash = new h.init(d.slice(0));\n          },\n          _doProcessBlock: function (a, f) {\n            for (var o = this._hash.words, l = o[0], e = o[1], t = o[2], c = o[3], i = o[4], g = o[5], v = o[6], b = o[7], y = 0; y < 64; y++) {\n              if (y < 16) u[y] = a[f + y] | 0;else {\n                var A = u[y - 15],\n                  B = (A << 25 | A >>> 7) ^ (A << 14 | A >>> 18) ^ A >>> 3,\n                  x = u[y - 2],\n                  G = (x << 15 | x >>> 17) ^ (x << 13 | x >>> 19) ^ x >>> 10;\n                u[y] = B + u[y - 7] + G + u[y - 16];\n              }\n              var Q = i & g ^ ~i & v,\n                X = l & e ^ l & t ^ e & t,\n                Z = (l << 30 | l >>> 2) ^ (l << 19 | l >>> 13) ^ (l << 10 | l >>> 22),\n                ee = (i << 26 | i >>> 6) ^ (i << 21 | i >>> 11) ^ (i << 7 | i >>> 25),\n                P = b + ee + Q + p[y] + u[y],\n                re = Z + X;\n              b = v, v = g, g = i, i = c + P | 0, c = t, t = e, e = l, l = P + re | 0;\n            }\n            o[0] = o[0] + l | 0, o[1] = o[1] + e | 0, o[2] = o[2] + t | 0, o[3] = o[3] + c | 0, o[4] = o[4] + i | 0, o[5] = o[5] + g | 0, o[6] = o[6] + v | 0, o[7] = o[7] + b | 0;\n          },\n          _doFinalize: function () {\n            var a = this._data,\n              f = a.words,\n              o = this._nDataBytes * 8,\n              l = a.sigBytes * 8;\n            return f[l >>> 5] |= 128 << 24 - l % 32, f[(l + 64 >>> 9 << 4) + 14] = r.floor(o / 4294967296), f[(l + 64 >>> 9 << 4) + 15] = o, a.sigBytes = f.length * 4, this._process(), this._hash;\n          },\n          clone: function () {\n            var a = w.clone.call(this);\n            return a._hash = this._hash.clone(), a;\n          }\n        });\n      s.SHA256 = w._createHelper(_), s.HmacSHA256 = w._createHmacHelper(_);\n    }(Math), n.SHA256;\n  });\n});\nvar q = H((U, L) => {\n  (function (n, r) {\n    typeof U == \"object\" ? L.exports = U = r(k()) : typeof define == \"function\" && define.amd ? define([\"./core\"], r) : r(n.CryptoJS);\n  })(U, function (n) {\n    return function () {\n      var r = n,\n        s = r.lib,\n        m = s.WordArray,\n        h = r.enc,\n        w = h.Base64 = {\n          stringify: function (d) {\n            var p = d.words,\n              u = d.sigBytes,\n              _ = this._map;\n            d.clamp();\n            for (var a = [], f = 0; f < u; f += 3) for (var o = p[f >>> 2] >>> 24 - f % 4 * 8 & 255, l = p[f + 1 >>> 2] >>> 24 - (f + 1) % 4 * 8 & 255, e = p[f + 2 >>> 2] >>> 24 - (f + 2) % 4 * 8 & 255, t = o << 16 | l << 8 | e, c = 0; c < 4 && f + c * .75 < u; c++) a.push(_.charAt(t >>> 6 * (3 - c) & 63));\n            var i = _.charAt(64);\n            if (i) for (; a.length % 4;) a.push(i);\n            return a.join(\"\");\n          },\n          parse: function (d) {\n            var p = d.length,\n              u = this._map,\n              _ = this._reverseMap;\n            if (!_) {\n              _ = this._reverseMap = [];\n              for (var a = 0; a < u.length; a++) _[u.charCodeAt(a)] = a;\n            }\n            var f = u.charAt(64);\n            if (f) {\n              var o = d.indexOf(f);\n              o !== -1 && (p = o);\n            }\n            return R(d, p, _);\n          },\n          _map: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"\n        };\n      function R(d, p, u) {\n        for (var _ = [], a = 0, f = 0; f < p; f++) if (f % 4) {\n          var o = u[d.charCodeAt(f - 1)] << f % 4 * 2,\n            l = u[d.charCodeAt(f)] >>> 6 - f % 4 * 2;\n          _[a >>> 2] |= (o | l) << 24 - a % 4 * 8, a++;\n        }\n        return m.create(_, a);\n      }\n    }(), n.enc.Base64;\n  });\n});\nimport { Extension as le } from \"magic-sdk\";\nvar E = (r => (r.ParseRedirectResult = \"magic_oauth_parse_redirect_result\", r))(E || {}),\n  ce = (a => (a.InvalidRequest = \"invalid_request\", a.InvalidClient = \"invalid_client\", a.InvalidScope = \"invalid_scope\", a.InvalidGrant = \"invalid_grant\", a.UnauthorizedClient = \"unauthorized_client\", a.UnsupportedResponseType = \"unsupported_response_type\", a.UnsupportedGrantType = \"unsupported_grant_type\", a.UnsupportedTokenType = \"unsupported_token_type\", a.AccessDenied = \"access_denied\", a.ServerError = \"server_error\", a.TemporarilyUnavailable = \"temporarily_unavailable\", a))(ce || {});\nvar j = T(z()),\n  J = T(q());\nvar $ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~\",\n  V = typeof window != \"undefined\" && !!window.crypto,\n  fe = V && !!window.crypto.subtle;\nfunction ue(n) {\n  return Array.from(n).map(r => $[r % $.length]).join(\"\");\n}\nfunction M(n) {\n  let r = s => s.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  if (n instanceof ArrayBuffer) {\n    let s = new Uint8Array(n),\n      m = Array.from(s).map(w => String.fromCharCode(w)).join(\"\"),\n      h = btoa(m);\n    return r(h);\n  }\n  return r(J.default.stringify(n));\n}\nfunction de(n) {\n  return C(this, null, function* () {\n    if (fe) {\n      let r = new TextEncoder().encode(n);\n      return crypto.subtle.digest(\"SHA-256\", r).then(M);\n    }\n    return M((0, j.default)(n));\n  });\n}\nfunction N(n) {\n  let r = new Uint8Array(n);\n  if (V) window.crypto.getRandomValues(r);else for (let s = 0; s < n; s += 1) r[s] = Math.floor(Math.random() * Math.floor(255));\n  return ue(r);\n}\nfunction K() {\n  return C(this, null, function* () {\n    let n = N(128),\n      r = N(128),\n      s = yield de(r);\n    return {\n      verifier: r,\n      challenge: s,\n      state: n\n    };\n  });\n}\nvar Y = class extends le.Internal {\n    constructor() {\n      super(...arguments);\n      this.name = \"oauth\";\n      this.config = {};\n      this.compat = {\n        \"magic-sdk\": \">=2.4.6\",\n        \"@magic-sdk/react-native\": !1,\n        \"@magic-sdk/react-native-bare\": !1,\n        \"@magic-sdk/react-native-expo\": !1\n      };\n    }\n    loginWithRedirect(s) {\n      return this.utils.createPromiEvent(m => C(this, null, function* () {\n        let {\n          provider: h,\n          query: w\n        } = yield pe.call(this, s);\n        window.location.href = new URL(`/v1/oauth2/${h}/start?${w}`, this.sdk.endpoint).href, m();\n      }));\n    }\n    getRedirectResult() {\n      let s = window.location.search,\n        m = window.location.origin + window.location.pathname;\n      return window.history.replaceState(null, \"\", m), he.call(this, s);\n    }\n  },\n  O = \"oauth_redirect_metadata\";\nfunction pe(n) {\n  return C(this, null, function* () {\n    yield this.utils.storage.removeItem(O);\n    let {\n        provider: r,\n        redirectURI: s,\n        scope: m,\n        loginHint: h\n      } = n,\n      {\n        verifier: w,\n        challenge: R,\n        state: d\n      } = yield K(),\n      p = JSON.stringify({\n        verifier: w,\n        state: d\n      });\n    return yield this.utils.storage.setItem(O, p), {\n      query: [`magic_api_key=${encodeURIComponent(this.sdk.apiKey)}`, `magic_challenge=${encodeURIComponent(R)}`, `state=${encodeURIComponent(d)}`, `platform=${encodeURIComponent(\"web\")}`, m && `scope=${encodeURIComponent(m.join(\" \"))}`, s && `redirect_uri=${encodeURIComponent(s)}`, h && `login_hint=${encodeURIComponent(h)}`].reduce((_, a) => a ? `${_}&${a}` : _),\n      provider: r,\n      redirectURI: s\n    };\n  });\n}\nfunction he(n) {\n  return this.utils.createPromiEvent((r, s) => C(this, null, function* () {\n    var _;\n    let m = yield this.utils.storage.getItem(O),\n      {\n        verifier: h,\n        state: w\n      } = JSON.parse(m);\n    this.utils.storage.removeItem(O);\n    let R = this.utils.createJsonRpcRequestPayload(\"magic_oauth_parse_redirect_result\", [n, h, w]),\n      d = yield this.request(R),\n      p = d,\n      u = d;\n    u.error && s(this.createError(u.error, (_ = u.error_description) != null ? _ : \"An error occurred.\", {\n      errorURI: u.error_uri,\n      provider: u.provider\n    })), r(p);\n  }));\n}\nexport { ce as OAuthErrorCode, Y as OAuthExtension, E as OAuthPayloadMethods };","map":{"version":3,"names":["k","H","I","F","n","r","exports","define","amd","CryptoJS","s","m","Object","create","e","t","c","prototype","h","w","lib","R","Base","extend","mixIn","hasOwnProperty","init","$super","apply","arguments","toString","clone","d","WordArray","words","sigBytes","length","u","stringify","concat","i","g","clamp","v","b","ceil","call","slice","random","y","A","B","x","push","p","enc","Hex","join","parse","parseInt","substr","_","Latin1","String","fromCharCode","charCodeAt","a","Utf8","decodeURIComponent","escape","Error","unescape","encodeURIComponent","f","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","blockSize","max","_minBufferSize","min","_doProcessBlock","splice","o","Hasher","cfg","_doReset","update","finalize","_doFinalize","_createHelper","_createHmacHelper","l","HMAC","algo","Math","z","S","W","sqrt","pow","SHA256","_hash","G","Q","X","Z","ee","P","re","floor","HmacSHA256","q","U","L","Base64","_map","charAt","_reverseMap","indexOf","Extension","le","E","ParseRedirectResult","ce","InvalidRequest","InvalidClient","InvalidScope","InvalidGrant","UnauthorizedClient","UnsupportedResponseType","UnsupportedGrantType","UnsupportedTokenType","AccessDenied","ServerError","TemporarilyUnavailable","j","T","J","$","V","window","crypto","fe","subtle","ue","Array","from","map","M","replace","ArrayBuffer","Uint8Array","btoa","default","de","C","TextEncoder","encode","digest","then","N","getRandomValues","K","verifier","challenge","state","Y","Internal","constructor","name","config","compat","loginWithRedirect","utils","createPromiEvent","provider","query","pe","location","href","URL","sdk","endpoint","getRedirectResult","search","origin","pathname","history","replaceState","he","O","storage","removeItem","redirectURI","scope","loginHint","JSON","setItem","apiKey","reduce","getItem","createJsonRpcRequestPayload","request","error","createError","error_description","errorURI","error_uri","OAuthErrorCode","OAuthExtension","OAuthPayloadMethods"],"sources":["C:\\Users\\SUMAN K\\meta_transfer\\node_modules\\@magic-ext\\oauth\\node_modules\\crypto-js\\core.js","C:\\Users\\SUMAN K\\meta_transfer\\node_modules\\@magic-ext\\oauth\\node_modules\\crypto-js\\sha256.js","C:\\Users\\SUMAN K\\meta_transfer\\node_modules\\@magic-ext\\oauth\\node_modules\\crypto-js\\enc-base64.js","C:\\Users\\SUMAN K\\meta_transfer\\node_modules\\@magic-ext\\oauth\\src\\index.ts","C:\\Users\\SUMAN K\\meta_transfer\\node_modules\\@magic-ext\\oauth\\src\\types.ts","C:\\Users\\SUMAN K\\meta_transfer\\node_modules\\@magic-ext\\oauth\\src\\crypto.ts"],"sourcesContent":[";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /*\n\t     * Local polyfil of Object.create\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {};\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));","/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport { Extension } from 'magic-sdk';\nimport {\n  OAuthErrorData,\n  OAuthPayloadMethods,\n  OAuthRedirectError,\n  OAuthRedirectResult,\n  OAuthRedirectConfiguration,\n} from './types';\nimport { createCryptoChallenge } from './crypto';\n\nexport class OAuthExtension extends Extension.Internal<'oauth'> {\n  name = 'oauth' as const;\n  config = {};\n  compat = {\n    'magic-sdk': '>=2.4.6',\n    '@magic-sdk/react-native': false,\n    '@magic-sdk/react-native-bare': false,\n    '@magic-sdk/react-native-expo': false,\n  };\n\n  public loginWithRedirect(configuration: OAuthRedirectConfiguration) {\n    return this.utils.createPromiEvent<void>(async (resolve) => {\n      const { provider, query } = await createURI.call(this, configuration);\n\n      // @ts-ignore - this.sdk.endpoint is marked protected but we need to access it.\n      window.location.href = new URL(`/v1/oauth2/${provider}/start?${query}`, this.sdk.endpoint).href;\n\n      resolve();\n    });\n  }\n\n  public getRedirectResult() {\n    const queryString = window.location.search;\n\n    // Remove the query from the redirect callback as a precaution to prevent\n    // malicious parties from parsing it before we have a chance to use it.\n    const urlWithoutQuery = window.location.origin + window.location.pathname;\n    window.history.replaceState(null, '', urlWithoutQuery);\n\n    return getResult.call(this, queryString);\n  }\n}\n\nconst OAUTH_REDIRECT_METADATA_KEY = 'oauth_redirect_metadata';\n\nasync function createURI(this: OAuthExtension, configuration: OAuthRedirectConfiguration) {\n  // Bust any old, in-progress OAuth flows.\n  await this.utils.storage.removeItem(OAUTH_REDIRECT_METADATA_KEY);\n\n  // Unpack configuration, generate crypto values, and persist to storage.\n  const { provider, redirectURI, scope, loginHint } = configuration;\n  const { verifier, challenge, state } = await createCryptoChallenge();\n\n  /* Stringify for RN Async storage */\n  const storedData = JSON.stringify({\n    verifier,\n    state,\n  });\n\n  await this.utils.storage.setItem(OAUTH_REDIRECT_METADATA_KEY, storedData);\n\n  // Formulate the initial redirect query to Magic's OAuth hub.\n  // Required fields:\n  //   - `magic_api_key`\n  //   - `magic_challenge`\n  //   - `state`\n  //   - `redirect_uri`\n  //   - `platform`\n\n  const query = [\n    `magic_api_key=${encodeURIComponent(this.sdk.apiKey)}`,\n    `magic_challenge=${encodeURIComponent(challenge)}`,\n    `state=${encodeURIComponent(state)}`,\n    `platform=${encodeURIComponent('web')}`,\n    scope && `scope=${encodeURIComponent(scope.join(' '))}`,\n    redirectURI && `redirect_uri=${encodeURIComponent(redirectURI)}`,\n    loginHint && `login_hint=${encodeURIComponent(loginHint)}`,\n  ].reduce((prev, next) => (next ? `${prev}&${next}` : prev));\n\n  return {\n    query,\n    provider,\n    redirectURI,\n  };\n}\n\nfunction getResult(this: OAuthExtension, queryString: string) {\n  return this.utils.createPromiEvent<OAuthRedirectResult>(async (resolve, reject) => {\n    const json: string = (await this.utils.storage.getItem(OAUTH_REDIRECT_METADATA_KEY)) as string;\n\n    const { verifier, state } = JSON.parse(json);\n\n    // Remove the save OAuth state from storage, it stays in memory now...\n    this.utils.storage.removeItem(OAUTH_REDIRECT_METADATA_KEY);\n\n    const parseRedirectResult = this.utils.createJsonRpcRequestPayload(OAuthPayloadMethods.ParseRedirectResult, [\n      queryString,\n      verifier,\n      state,\n    ]);\n\n    // Parse the result, which may contain an OAuth-formatted error.\n    const resultOrError = await this.request<OAuthRedirectResult | OAuthRedirectError>(parseRedirectResult);\n    const maybeResult = resultOrError as OAuthRedirectResult;\n    const maybeError = resultOrError as OAuthRedirectError;\n\n    if (maybeError.error) {\n      reject(\n        this.createError<OAuthErrorData>(maybeError.error, maybeError.error_description ?? 'An error occurred.', {\n          errorURI: maybeError.error_uri,\n          provider: maybeError.provider,\n        }),\n      );\n    }\n\n    resolve(maybeResult);\n  });\n}\n\nexport * from './types';\n","import { MagicUserMetadata } from '@magic-sdk/types';\n\nexport enum OAuthPayloadMethods {\n  ParseRedirectResult = 'magic_oauth_parse_redirect_result',\n}\n\nexport type OAuthProvider =\n  | 'google'\n  | 'facebook'\n  | 'apple'\n  | 'github'\n  | 'bitbucket'\n  | 'gitlab'\n  | 'linkedin'\n  | 'twitter'\n  | 'discord'\n  | 'twitch'\n  | 'microsoft';\n\nexport interface OAuthErrorData {\n  provider: OAuthProvider;\n  errorURI?: string;\n}\n\nexport interface OpenIDConnectProfile {\n  name?: string;\n  familyName?: string;\n  givenName?: string;\n  middleName?: string;\n  nickname?: string;\n  preferredUsername?: string;\n  profile?: string;\n  picture?: string;\n  website?: string;\n  gender?: string;\n  birthdate?: string;\n  zoneinfo?: string;\n  locale?: string;\n  updatedAt?: number;\n}\n\nexport interface OpenIDConnectEmail {\n  email?: string;\n  emailVerified?: boolean;\n}\n\nexport interface OpenIDConnectPhone {\n  phoneNumber?: string;\n  phoneNumberVerified?: boolean;\n}\n\nexport interface OpenIDConnectAddress {\n  address?: {\n    formatted?: string;\n    streetAddress?: string;\n    locality?: string;\n    region?: string;\n    postalCode?: string;\n    country?: string;\n  };\n}\n\nexport type OpenIDConnectUserInfo = OpenIDConnectProfile &\n  OpenIDConnectEmail &\n  OpenIDConnectPhone &\n  OpenIDConnectAddress & { sub?: string; sources?: Record<string, any> } & Record<string, any>;\n\nexport interface OAuthRedirectResult {\n  oauth: {\n    provider: OAuthProvider;\n    scope: string[];\n    accessToken: string;\n    userHandle: string;\n    userInfo: OpenIDConnectUserInfo;\n  };\n\n  magic: {\n    idToken: string;\n    userMetadata: MagicUserMetadata;\n  };\n}\n\nexport interface OAuthRedirectError {\n  provider: OAuthProvider;\n  error: string;\n  error_description?: string;\n  error_uri?: string;\n}\n\nexport interface OAuthRedirectConfiguration {\n  provider: OAuthProvider;\n  redirectURI: string;\n  scope?: string[];\n  loginHint?: string;\n}\n\nexport enum OAuthErrorCode {\n  InvalidRequest = 'invalid_request',\n  InvalidClient = 'invalid_client',\n  InvalidScope = 'invalid_scope',\n  InvalidGrant = 'invalid_grant',\n  UnauthorizedClient = 'unauthorized_client',\n  UnsupportedResponseType = 'unsupported_response_type',\n  UnsupportedGrantType = 'unsupported_grant_type',\n  UnsupportedTokenType = 'unsupported_token_type',\n  AccessDenied = 'access_denied',\n  ServerError = 'server_error',\n  TemporarilyUnavailable = 'temporarily_unavailable',\n}\n","import { WordArray } from 'crypto-js';\nimport sha256Fallback from 'crypto-js/sha256';\nimport Base64 from 'crypto-js/enc-base64';\n\nconst CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\nconst HAS_CRYPTO = typeof window !== 'undefined' && !!(window.crypto as any);\nconst HAS_SUBTLE_CRYPTO = HAS_CRYPTO && !!(window.crypto.subtle as any);\n\n/**\n * Stringifies `bytes` using the OAuth 2.0 `code_verifier` character set.\n */\nfunction bytesToVerifierString(bytes: Uint8Array) {\n  return Array.from(bytes)\n    .map((value: number) => CHARSET[value % CHARSET.length])\n    .join('');\n}\n\n/**\n * Stringifies argument (as CryptoJS `WordArray` or EcmaScript `ArrayBuffer`)\n * and encodes to URL-safe Base64.\n */\nfunction base64URLEncodeFromByteArray(wordArray: WordArray): string;\nfunction base64URLEncodeFromByteArray(arrayBuffer: ArrayBuffer): string;\nfunction base64URLEncodeFromByteArray(arg: WordArray | ArrayBuffer): string {\n  const makeURLSafe = (base64: string) => {\n    return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n  };\n\n  if (arg instanceof ArrayBuffer) {\n    const bytes = new Uint8Array(arg);\n    const utf8Binary = Array.from(bytes)\n      .map((value) => String.fromCharCode(value))\n      .join('');\n\n    const base64 = btoa(utf8Binary);\n    return makeURLSafe(base64);\n  }\n\n  return makeURLSafe(Base64.stringify(arg));\n}\n\n/**\n * Produces a SHA-256 hash of the given `message`. This function first attempts\n * to use the browser's built-in `SubtleCrypto` API, falling back to\n * CryptoJS if required.\n */\nasync function sha256(message: string) {\n  if (HAS_SUBTLE_CRYPTO) {\n    const bytes = new TextEncoder().encode(message);\n    return crypto.subtle.digest('SHA-256', bytes).then(base64URLEncodeFromByteArray);\n  }\n\n  return base64URLEncodeFromByteArray(sha256Fallback(message));\n}\n\n/**\n * Creates a cryptographically random string using the browser's built-in\n * `Crypto` API, falling back to `Math.random` if required.\n */\nfunction createRandomString(size: number) {\n  const bytes = new Uint8Array(size);\n\n  if (HAS_CRYPTO) {\n    window.crypto.getRandomValues(bytes);\n  } else {\n    for (let i = 0; i < size; i += 1) bytes[i] = Math.floor(Math.random() * Math.floor(255));\n  }\n\n  return bytesToVerifierString(bytes);\n}\n\n/**\n * Creates OAuth 2.0-compatible `code_verifier`, `code_challenge`, and `state`\n * parameters.\n */\nexport async function createCryptoChallenge() {\n  const state = createRandomString(128);\n  const verifier = createRandomString(128);\n  const challenge = await sha256(verifier);\n  return { verifier, challenge, state };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}