{"ast":null,"code":"const getProtocol = location => {\n  if (location === 'injected') return 'injected';\n  if (location.endsWith('.ipc')) return 'ipc';\n  if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws';\n  if (location.startsWith('https://') || location.startsWith('http://')) return 'http';\n  return '';\n};\nmodule.exports = (targets, presets) => {\n  return [].concat(...[].concat(targets).map(provider => {\n    if (presets[provider]) {\n      return presets[provider].map(location => ({\n        type: provider,\n        location,\n        protocol: getProtocol(location)\n      }));\n    } else {\n      return {\n        type: 'custom',\n        location: provider,\n        protocol: getProtocol(provider)\n      };\n    }\n  })).filter(provider => {\n    if (provider.protocol || provider.type === 'injected') {\n      return true;\n    } else {\n      console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"');\n      return false;\n    }\n  });\n};","map":{"version":3,"names":["getProtocol","location","endsWith","startsWith","module","exports","targets","presets","concat","map","provider","type","protocol","filter","console","log"],"sources":["C:/Users/SUMAN K/meta_transfer/node_modules/eth-provider/resolve/index.js"],"sourcesContent":["const getProtocol = location => {\n  if (location === 'injected') return 'injected'\n  if (location.endsWith('.ipc')) return 'ipc'\n  if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws'\n  if (location.startsWith('https://') || location.startsWith('http://')) return 'http'\n  return ''\n}\n\nmodule.exports = (targets, presets) => {\n  return [].concat(...[].concat(targets).map(provider => {\n    if (presets[provider]) {\n      return presets[provider].map(location => ({ type: provider, location, protocol: getProtocol(location) }))\n    } else {\n      return { type: 'custom', location: provider, protocol: getProtocol(provider) }\n    }\n  })).filter(provider => {\n    if (provider.protocol || provider.type === 'injected') {\n      return true\n    } else {\n      console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"')\n      return false\n    }\n  })\n}\n"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,QAAQ,IAAI;EAC9B,IAAIA,QAAQ,KAAK,UAAU,EAAE,OAAO,UAAU;EAC9C,IAAIA,QAAQ,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,KAAK;EAC3C,IAAID,QAAQ,CAACE,UAAU,CAAC,QAAQ,CAAC,IAAIF,QAAQ,CAACE,UAAU,CAAC,OAAO,CAAC,EAAE,OAAO,IAAI;EAC9E,IAAIF,QAAQ,CAACE,UAAU,CAAC,UAAU,CAAC,IAAIF,QAAQ,CAACE,UAAU,CAAC,SAAS,CAAC,EAAE,OAAO,MAAM;EACpF,OAAO,EAAE;AACX,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG,CAACC,OAAO,EAAEC,OAAO,KAAK;EACrC,OAAO,EAAE,CAACC,MAAM,CAAC,GAAG,EAAE,CAACA,MAAM,CAACF,OAAO,CAAC,CAACG,GAAG,CAACC,QAAQ,IAAI;IACrD,IAAIH,OAAO,CAACG,QAAQ,CAAC,EAAE;MACrB,OAAOH,OAAO,CAACG,QAAQ,CAAC,CAACD,GAAG,CAACR,QAAQ,KAAK;QAAEU,IAAI,EAAED,QAAQ;QAAET,QAAQ;QAAEW,QAAQ,EAAEZ,WAAW,CAACC,QAAQ;MAAE,CAAC,CAAC,CAAC;IAC3G,CAAC,MAAM;MACL,OAAO;QAAEU,IAAI,EAAE,QAAQ;QAAEV,QAAQ,EAAES,QAAQ;QAAEE,QAAQ,EAAEZ,WAAW,CAACU,QAAQ;MAAE,CAAC;IAChF;EACF,CAAC,CAAC,CAAC,CAACG,MAAM,CAACH,QAAQ,IAAI;IACrB,IAAIA,QAAQ,CAACE,QAAQ,IAAIF,QAAQ,CAACC,IAAI,KAAK,UAAU,EAAE;MACrD,OAAO,IAAI;IACb,CAAC,MAAM;MACLG,OAAO,CAACC,GAAG,CAAC,oDAAoD,GAAGL,QAAQ,CAACT,QAAQ,GAAG,GAAG,CAAC;MAC3F,OAAO,KAAK;IACd;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}