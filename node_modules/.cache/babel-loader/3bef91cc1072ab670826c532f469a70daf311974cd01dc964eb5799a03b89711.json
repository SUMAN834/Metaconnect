{"ast":null,"code":"import { ethers } from 'ethers';\nimport { SmartWalletConnector } from '../../smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-smart-wallet.browser.esm.js';\nimport { E as ERC6551_REGISTRY } from '../../../../dist/constants-1ba9df2b.browser.esm.js';\nimport '../../../../dist/connector-05689d68.browser.esm.js';\nimport 'eventemitter3';\nimport '@account-abstraction/sdk';\nimport '../../../../dist/url-bc88b2b6.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport '@account-abstraction/contracts';\nimport '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport '@account-abstraction/utils';\nimport '@thirdweb-dev/sdk';\nclass TokenBoundSmartWalletConnector extends SmartWalletConnector {\n  constructor(input) {\n    super({\n      ...input,\n      factoryAddress: input.registryAddress || ERC6551_REGISTRY\n    });\n    this.tbaConfig = input;\n    // TODO default account implementation address\n  }\n\n  defaultFactoryInfo() {\n    return {\n      createAccount: async factory => {\n        return factory.prepare(\"createAccount\", [this.tbaConfig.accountImplementation, this.chainId, this.tbaConfig.tokenContract, this.tbaConfig.tokenId, this.tbaConfig.salt, ethers.utils.toUtf8Bytes(\"\")]);\n      },\n      getAccountAddress: async factory => {\n        return await factory.call(\"account\", [this.tbaConfig.accountImplementation, this.chainId, this.tbaConfig.tokenContract, this.tbaConfig.tokenId, this.tbaConfig.salt]);\n      }\n    };\n  }\n}\nexport { TokenBoundSmartWalletConnector };","map":{"version":3,"names":["ethers","SmartWalletConnector","E","ERC6551_REGISTRY","TokenBoundSmartWalletConnector","constructor","input","factoryAddress","registryAddress","tbaConfig","defaultFactoryInfo","createAccount","factory","prepare","accountImplementation","chainId","tokenContract","tokenId","salt","utils","toUtf8Bytes","getAccountAddress","call"],"sources":["C:/Users/SUMAN K/meta_transfer/node_modules/@thirdweb-dev/wallets/evm/connectors/token-bound-smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-token-bound-smart-wallet.browser.esm.js"],"sourcesContent":["import { ethers } from 'ethers';\nimport { SmartWalletConnector } from '../../smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-smart-wallet.browser.esm.js';\nimport { E as ERC6551_REGISTRY } from '../../../../dist/constants-1ba9df2b.browser.esm.js';\nimport '../../../../dist/connector-05689d68.browser.esm.js';\nimport 'eventemitter3';\nimport '@account-abstraction/sdk';\nimport '../../../../dist/url-bc88b2b6.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport '@account-abstraction/contracts';\nimport '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport '@account-abstraction/utils';\nimport '@thirdweb-dev/sdk';\n\nclass TokenBoundSmartWalletConnector extends SmartWalletConnector {\n  constructor(input) {\n    super({\n      ...input,\n      factoryAddress: input.registryAddress || ERC6551_REGISTRY\n    });\n    this.tbaConfig = input;\n    // TODO default account implementation address\n  }\n\n  defaultFactoryInfo() {\n    return {\n      createAccount: async factory => {\n        return factory.prepare(\"createAccount\", [this.tbaConfig.accountImplementation, this.chainId, this.tbaConfig.tokenContract, this.tbaConfig.tokenId, this.tbaConfig.salt, ethers.utils.toUtf8Bytes(\"\")]);\n      },\n      getAccountAddress: async factory => {\n        return await factory.call(\"account\", [this.tbaConfig.accountImplementation, this.chainId, this.tbaConfig.tokenContract, this.tbaConfig.tokenId, this.tbaConfig.salt]);\n      }\n    };\n  }\n}\n\nexport { TokenBoundSmartWalletConnector };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,SAASC,oBAAoB,QAAQ,yFAAyF;AAC9H,SAASC,CAAC,IAAIC,gBAAgB,QAAQ,oDAAoD;AAC1F,OAAO,oDAAoD;AAC3D,OAAO,eAAe;AACtB,OAAO,0BAA0B;AACjC,OAAO,8CAA8C;AACrD,OAAO,sBAAsB;AAC7B,OAAO,gCAAgC;AACvC,OAAO,yDAAyD;AAChE,OAAO,4BAA4B;AACnC,OAAO,mBAAmB;AAE1B,MAAMC,8BAA8B,SAASH,oBAAoB,CAAC;EAChEI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAAC;MACJ,GAAGA,KAAK;MACRC,cAAc,EAAED,KAAK,CAACE,eAAe,IAAIL;IAC3C,CAAC,CAAC;IACF,IAAI,CAACM,SAAS,GAAGH,KAAK;IACtB;EACF;;EAEAI,kBAAkBA,CAAA,EAAG;IACnB,OAAO;MACLC,aAAa,EAAE,MAAMC,OAAO,IAAI;QAC9B,OAAOA,OAAO,CAACC,OAAO,CAAC,eAAe,EAAE,CAAC,IAAI,CAACJ,SAAS,CAACK,qBAAqB,EAAE,IAAI,CAACC,OAAO,EAAE,IAAI,CAACN,SAAS,CAACO,aAAa,EAAE,IAAI,CAACP,SAAS,CAACQ,OAAO,EAAE,IAAI,CAACR,SAAS,CAACS,IAAI,EAAElB,MAAM,CAACmB,KAAK,CAACC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;MACxM,CAAC;MACDC,iBAAiB,EAAE,MAAMT,OAAO,IAAI;QAClC,OAAO,MAAMA,OAAO,CAACU,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAACb,SAAS,CAACK,qBAAqB,EAAE,IAAI,CAACC,OAAO,EAAE,IAAI,CAACN,SAAS,CAACO,aAAa,EAAE,IAAI,CAACP,SAAS,CAACQ,OAAO,EAAE,IAAI,CAACR,SAAS,CAACS,IAAI,CAAC,CAAC;MACvK;IACF,CAAC;EACH;AACF;AAEA,SAASd,8BAA8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}