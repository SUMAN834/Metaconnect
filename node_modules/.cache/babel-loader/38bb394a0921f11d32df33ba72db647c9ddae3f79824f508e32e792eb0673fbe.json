{"ast":null,"code":"/**\n * This mixin function is designed to be applied to a class that inherits\n * from HTMLElement. It makes it easy for a custom element to coordinate with\n * the :focus-visible polyfill.\n *\n * NOTE(cdata): The code here was adapted from an example proposed with the\n * introduction of ShadowDOM support in the :focus-visible polyfill.\n *\n * @see https://github.com/WICG/focus-visible/pull/196\n * @param {Function} SuperClass The base class implementation to decorate with\n * implementation that coordinates with the :focus-visible polyfill\n */\nexport const FocusVisiblePolyfillMixin = SuperClass => {\n  var _a;\n  const coordinateWithPolyfill = instance => {\n    // If there is no shadow root, there is no need to coordinate with\n    // the polyfill. If we already coordinated with the polyfill, we can\n    // skip subsequent invocations:\n    if (instance.shadowRoot == null || instance.hasAttribute('data-js-focus-visible')) {\n      return () => {};\n    }\n    // The polyfill might already be loaded. If so, we can apply it to\n    // the shadow root immediately:\n    if (self.applyFocusVisiblePolyfill) {\n      self.applyFocusVisiblePolyfill(instance.shadowRoot);\n    } else {\n      const coordinationHandler = () => {\n        self.applyFocusVisiblePolyfill(instance.shadowRoot);\n      };\n      // Otherwise, wait for the polyfill to be loaded lazily. It might\n      // never be loaded, but if it is then we can apply it to the\n      // shadow root at the appropriate time by waiting for the ready\n      // event:\n      self.addEventListener('focus-visible-polyfill-ready', coordinationHandler, {\n        once: true\n      });\n      return () => {\n        self.removeEventListener('focus-visible-polyfill-ready', coordinationHandler);\n      };\n    }\n    return () => {};\n  };\n  const $endPolyfillCoordination = Symbol('endPolyfillCoordination');\n  // IE11 doesn't natively support custom elements or JavaScript class\n  // syntax The mixin implementation assumes that the user will take the\n  // appropriate steps to support both:\n  class FocusVisibleCoordinator extends SuperClass {\n    constructor() {\n      super(...arguments);\n      this[_a] = null;\n    }\n    // Attempt to coordinate with the polyfill when connected to the\n    // document:\n    connectedCallback() {\n      super.connectedCallback && super.connectedCallback();\n      if (this[$endPolyfillCoordination] == null) {\n        this[$endPolyfillCoordination] = coordinateWithPolyfill(this);\n      }\n    }\n    disconnectedCallback() {\n      super.disconnectedCallback && super.disconnectedCallback();\n      // It's important to remove the polyfill event listener when we\n      // disconnect, otherwise we will leak the whole element via window:\n      if (this[$endPolyfillCoordination] != null) {\n        this[$endPolyfillCoordination]();\n        this[$endPolyfillCoordination] = null;\n      }\n    }\n  }\n  _a = $endPolyfillCoordination;\n  ;\n  return FocusVisibleCoordinator;\n};","map":{"version":3,"names":["FocusVisiblePolyfillMixin","SuperClass","coordinateWithPolyfill","instance","shadowRoot","hasAttribute","self","applyFocusVisiblePolyfill","coordinationHandler","addEventListener","once","removeEventListener","$endPolyfillCoordination","Symbol","FocusVisibleCoordinator","constructor","_a","connectedCallback","disconnectedCallback"],"sources":["C:\\Users\\SUMAN K\\meta_transfer\\node_modules\\@google\\model-viewer\\src\\utilities\\focus-visible.ts"],"sourcesContent":["/* @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Constructor} from '../utilities.js';\n\nexport interface OptionalLifecycleCallbacks {\n  connectedCallback?(): void;\n  disconnectedCallback?(): void;\n}\n\nexport type MixableBaseClass = HTMLElement&OptionalLifecycleCallbacks;\n\ntype EndPolyfillCoordinationCallback = () => void;\n\n/**\n * This mixin function is designed to be applied to a class that inherits\n * from HTMLElement. It makes it easy for a custom element to coordinate with\n * the :focus-visible polyfill.\n *\n * NOTE(cdata): The code here was adapted from an example proposed with the\n * introduction of ShadowDOM support in the :focus-visible polyfill.\n *\n * @see https://github.com/WICG/focus-visible/pull/196\n * @param {Function} SuperClass The base class implementation to decorate with\n * implementation that coordinates with the :focus-visible polyfill\n */\nexport const FocusVisiblePolyfillMixin =\n    <T extends Constructor<MixableBaseClass>>(SuperClass: T): T => {\n      const coordinateWithPolyfill =\n          (instance: MixableBaseClass): EndPolyfillCoordinationCallback => {\n            // If there is no shadow root, there is no need to coordinate with\n            // the polyfill. If we already coordinated with the polyfill, we can\n            // skip subsequent invocations:\n            if (instance.shadowRoot == null ||\n                instance.hasAttribute('data-js-focus-visible')) {\n              return () => {};\n            }\n\n            // The polyfill might already be loaded. If so, we can apply it to\n            // the shadow root immediately:\n            if ((self as any).applyFocusVisiblePolyfill) {\n              (self as any).applyFocusVisiblePolyfill(instance.shadowRoot);\n            } else {\n              const coordinationHandler = () => {\n                (self as any).applyFocusVisiblePolyfill(instance.shadowRoot);\n              };\n              // Otherwise, wait for the polyfill to be loaded lazily. It might\n              // never be loaded, but if it is then we can apply it to the\n              // shadow root at the appropriate time by waiting for the ready\n              // event:\n              self.addEventListener(\n                  'focus-visible-polyfill-ready',\n                  coordinationHandler,\n                  {once: true});\n\n              return () => {\n                self.removeEventListener(\n                    'focus-visible-polyfill-ready', coordinationHandler);\n              };\n            }\n\n            return () => {};\n          };\n\n      const $endPolyfillCoordination = Symbol('endPolyfillCoordination');\n\n      // IE11 doesn't natively support custom elements or JavaScript class\n      // syntax The mixin implementation assumes that the user will take the\n      // appropriate steps to support both:\n      class FocusVisibleCoordinator extends SuperClass {\n        private[$endPolyfillCoordination]: EndPolyfillCoordinationCallback|\n            null = null;\n        // Attempt to coordinate with the polyfill when connected to the\n        // document:\n        connectedCallback() {\n          super.connectedCallback && super.connectedCallback();\n          if (this[$endPolyfillCoordination] == null) {\n            this[$endPolyfillCoordination] = coordinateWithPolyfill(this);\n          }\n        }\n\n        disconnectedCallback() {\n          super.disconnectedCallback && super.disconnectedCallback();\n          // It's important to remove the polyfill event listener when we\n          // disconnect, otherwise we will leak the whole element via window:\n          if (this[$endPolyfillCoordination] != null) {\n            this[$endPolyfillCoordination]!();\n            this[$endPolyfillCoordination] = null;\n          }\n        }\n      };\n\n      return FocusVisibleCoordinator;\n    };"],"mappings":"AAyBA;;;;;;;;;;;;AAYA,OAAO,MAAMA,yBAAyB,GACQC,UAAa,IAAO;;EAC5D,MAAMC,sBAAsB,GACvBC,QAA0B,IAAqC;IAC9D;IACA;IACA;IACA,IAAIA,QAAQ,CAACC,UAAU,IAAI,IAAI,IAC3BD,QAAQ,CAACE,YAAY,CAAC,uBAAuB,CAAC,EAAE;MAClD,OAAO,MAAK,CAAE,CAAC;;IAGjB;IACA;IACA,IAAKC,IAAY,CAACC,yBAAyB,EAAE;MAC1CD,IAAY,CAACC,yBAAyB,CAACJ,QAAQ,CAACC,UAAU,CAAC;KAC7D,MAAM;MACL,MAAMI,mBAAmB,GAAGA,CAAA,KAAK;QAC9BF,IAAY,CAACC,yBAAyB,CAACJ,QAAQ,CAACC,UAAU,CAAC;MAC9D,CAAC;MACD;MACA;MACA;MACA;MACAE,IAAI,CAACG,gBAAgB,CACjB,8BAA8B,EAC9BD,mBAAmB,EACnB;QAACE,IAAI,EAAE;MAAI,CAAC,CAAC;MAEjB,OAAO,MAAK;QACVJ,IAAI,CAACK,mBAAmB,CACpB,8BAA8B,EAAEH,mBAAmB,CAAC;MAC1D,CAAC;;IAGH,OAAO,MAAK,CAAE,CAAC;EACjB,CAAC;EAEL,MAAMI,wBAAwB,GAAGC,MAAM,CAAC,yBAAyB,CAAC;EAElE;EACA;EACA;EACA,MAAMC,uBAAwB,SAAQb,UAAU;IAAhDc,YAAA;;MACS,KAAAC,EAAA,CAA0B,GACtB,IAAI;IAmBjB;IAlBE;IACA;IACAC,iBAAiBA,CAAA;MACf,KAAK,CAACA,iBAAiB,IAAI,KAAK,CAACA,iBAAiB,EAAE;MACpD,IAAI,IAAI,CAACL,wBAAwB,CAAC,IAAI,IAAI,EAAE;QAC1C,IAAI,CAACA,wBAAwB,CAAC,GAAGV,sBAAsB,CAAC,IAAI,CAAC;;IAEjE;IAEAgB,oBAAoBA,CAAA;MAClB,KAAK,CAACA,oBAAoB,IAAI,KAAK,CAACA,oBAAoB,EAAE;MAC1D;MACA;MACA,IAAI,IAAI,CAACN,wBAAwB,CAAC,IAAI,IAAI,EAAE;QAC1C,IAAI,CAACA,wBAAwB,CAAE,EAAE;QACjC,IAAI,CAACA,wBAAwB,CAAC,GAAG,IAAI;;IAEzC;;OAnBQA,wBAAwB;EAoBjC;EAED,OAAOE,uBAAuB;AAChC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}