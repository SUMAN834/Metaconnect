{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EthersAdapter_ethers, _EthersAdapter_signer, _EthersAdapter_provider;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst abstract_signer_1 = require(\"@ethersproject/abstract-signer\");\nconst bignumber_1 = require(\"@ethersproject/bignumber\");\nconst safe_core_sdk_utils_1 = require(\"@safe-global/safe-core-sdk-utils\");\nconst contractInstancesEthers_1 = require(\"./contracts/contractInstancesEthers\");\nconst utils_1 = require(\"./utils\");\nclass EthersAdapter {\n  constructor({\n    ethers,\n    signerOrProvider\n  }) {\n    _EthersAdapter_ethers.set(this, void 0);\n    _EthersAdapter_signer.set(this, void 0);\n    _EthersAdapter_provider.set(this, void 0);\n    if (!ethers) {\n      throw new Error('ethers property missing from options');\n    }\n    __classPrivateFieldSet(this, _EthersAdapter_ethers, ethers, \"f\");\n    const isSigner = signerOrProvider instanceof abstract_signer_1.Signer;\n    if (isSigner) {\n      const signer = signerOrProvider;\n      if (!signer.provider) {\n        throw new Error('Signer must be connected to a provider');\n      }\n      __classPrivateFieldSet(this, _EthersAdapter_provider, signer.provider, \"f\");\n      __classPrivateFieldSet(this, _EthersAdapter_signer, signer, \"f\");\n    } else {\n      __classPrivateFieldSet(this, _EthersAdapter_provider, signerOrProvider, \"f\");\n    }\n  }\n  getProvider() {\n    return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n  }\n  getSigner() {\n    return __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\");\n  }\n  isAddress(address) {\n    return __classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.isAddress(address);\n  }\n  async getEip3770Address(fullAddress) {\n    const chainId = await this.getChainId();\n    return (0, safe_core_sdk_utils_1.validateEip3770Address)(fullAddress, chainId);\n  }\n  async getBalance(address, blockTag) {\n    return bignumber_1.BigNumber.from(await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getBalance(address, blockTag));\n  }\n  async getNonce(address, blockTag) {\n    return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getTransactionCount(address, blockTag);\n  }\n  async getChainId() {\n    return (await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getNetwork()).chainId;\n  }\n  getChecksummedAddress(address) {\n    return __classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.getAddress(address);\n  }\n  getSafeContract({\n    safeVersion,\n    chainId,\n    singletonDeployment,\n    customContractAddress\n  }) {\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n    if (!contractAddress) {\n      throw new Error('Invalid SafeProxy contract address');\n    }\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n    return (0, contractInstancesEthers_1.getSafeContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n  getSafeProxyFactoryContract({\n    safeVersion,\n    chainId,\n    singletonDeployment,\n    customContractAddress\n  }) {\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n    if (!contractAddress) {\n      throw new Error('Invalid SafeProxyFactory contract address');\n    }\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n    return (0, contractInstancesEthers_1.getSafeProxyFactoryContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n  getMultiSendContract({\n    safeVersion,\n    chainId,\n    singletonDeployment,\n    customContractAddress\n  }) {\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n    if (!contractAddress) {\n      throw new Error('Invalid MultiSend contract address');\n    }\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n    return (0, contractInstancesEthers_1.getMultiSendContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n  getMultiSendCallOnlyContract({\n    safeVersion,\n    chainId,\n    singletonDeployment,\n    customContractAddress\n  }) {\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n    if (!contractAddress) {\n      throw new Error('Invalid MultiSendCallOnly contract address');\n    }\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n    return (0, contractInstancesEthers_1.getMultiSendCallOnlyContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n  getCompatibilityFallbackHandlerContract({\n    safeVersion,\n    chainId,\n    singletonDeployment,\n    customContractAddress\n  }) {\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n    if (!contractAddress) {\n      throw new Error('Invalid CompatibilityFallbackHandler contract address');\n    }\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n    return (0, contractInstancesEthers_1.getCompatibilityFallbackHandlerContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n  getSignMessageLibContract({\n    safeVersion,\n    chainId,\n    singletonDeployment,\n    customContractAddress\n  }) {\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n    if (!contractAddress) {\n      throw new Error('Invalid SignMessageLib contract address');\n    }\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n    return (0, contractInstancesEthers_1.getSignMessageLibContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n  getCreateCallContract({\n    safeVersion,\n    chainId,\n    singletonDeployment,\n    customContractAddress\n  }) {\n    const contractAddress = customContractAddress ? customContractAddress : singletonDeployment === null || singletonDeployment === void 0 ? void 0 : singletonDeployment.networkAddresses[chainId];\n    if (!contractAddress) {\n      throw new Error('Invalid CreateCall contract address');\n    }\n    const signerOrProvider = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\") || __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\");\n    return (0, contractInstancesEthers_1.getCreateCallContractInstance)(safeVersion, contractAddress, signerOrProvider);\n  }\n  async getContractCode(address, blockTag) {\n    return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getCode(address, blockTag);\n  }\n  async isContractDeployed(address, blockTag) {\n    const contractCode = await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getCode(address, blockTag);\n    return contractCode !== '0x';\n  }\n  async getStorageAt(address, position) {\n    const content = await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getStorageAt(address, position);\n    const decodedContent = this.decodeParameters(['address'], content);\n    return decodedContent[0];\n  }\n  async getTransaction(transactionHash) {\n    return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").getTransaction(transactionHash);\n  }\n  async getSignerAddress() {\n    var _a;\n    return (_a = __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\")) === null || _a === void 0 ? void 0 : _a.getAddress();\n  }\n  signMessage(message) {\n    if (!__classPrivateFieldGet(this, _EthersAdapter_signer, \"f\")) {\n      throw new Error('EthAdapter must be initialized with a signer to use this method');\n    }\n    const messageArray = __classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.arrayify(message);\n    return __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\").signMessage(messageArray);\n  }\n  async signTypedData(safeTransactionEIP712Args) {\n    if (!__classPrivateFieldGet(this, _EthersAdapter_signer, \"f\")) {\n      throw new Error('EthAdapter must be initialized with a signer to use this method');\n    }\n    if ((0, utils_1.isTypedDataSigner)(__classPrivateFieldGet(this, _EthersAdapter_signer, \"f\"))) {\n      const typedData = (0, safe_core_sdk_utils_1.generateTypedData)(safeTransactionEIP712Args);\n      const signature = await __classPrivateFieldGet(this, _EthersAdapter_signer, \"f\")._signTypedData(typedData.domain, {\n        SafeTx: typedData.types.SafeTx\n      }, typedData.message);\n      return signature;\n    }\n    throw new Error('The current signer does not implement EIP-712 to sign typed data');\n  }\n  async estimateGas(transaction) {\n    return (await __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").estimateGas(transaction)).toNumber();\n  }\n  call(transaction, blockTag) {\n    return __classPrivateFieldGet(this, _EthersAdapter_provider, \"f\").call(transaction, blockTag);\n  }\n  encodeParameters(types, values) {\n    return new (__classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.AbiCoder)().encode(types, values);\n  }\n  decodeParameters(types, values) {\n    return new (__classPrivateFieldGet(this, _EthersAdapter_ethers, \"f\").utils.AbiCoder)().decode(types, values);\n  }\n}\n_EthersAdapter_ethers = new WeakMap(), _EthersAdapter_signer = new WeakMap(), _EthersAdapter_provider = new WeakMap();\nexports.default = EthersAdapter;","map":{"version":3,"names":["abstract_signer_1","require","bignumber_1","safe_core_sdk_utils_1","contractInstancesEthers_1","utils_1","EthersAdapter","constructor","ethers","signerOrProvider","_EthersAdapter_ethers","set","_EthersAdapter_signer","_EthersAdapter_provider","Error","__classPrivateFieldSet","isSigner","Signer","signer","provider","getProvider","__classPrivateFieldGet","getSigner","isAddress","address","utils","getEip3770Address","fullAddress","chainId","getChainId","validateEip3770Address","getBalance","blockTag","BigNumber","from","getNonce","getTransactionCount","getNetwork","getChecksummedAddress","getAddress","getSafeContract","safeVersion","singletonDeployment","customContractAddress","contractAddress","networkAddresses","getSafeContractInstance","getSafeProxyFactoryContract","getSafeProxyFactoryContractInstance","getMultiSendContract","getMultiSendContractInstance","getMultiSendCallOnlyContract","getMultiSendCallOnlyContractInstance","getCompatibilityFallbackHandlerContract","getCompatibilityFallbackHandlerContractInstance","getSignMessageLibContract","getSignMessageLibContractInstance","getCreateCallContract","getCreateCallContractInstance","getContractCode","getCode","isContractDeployed","contractCode","getStorageAt","position","content","decodedContent","decodeParameters","getTransaction","transactionHash","getSignerAddress","_a","signMessage","message","messageArray","arrayify","signTypedData","safeTransactionEIP712Args","isTypedDataSigner","typedData","generateTypedData","signature","_signTypedData","domain","SafeTx","types","estimateGas","transaction","toNumber","call","encodeParameters","values","AbiCoder","encode","decode","exports","default"],"sources":["../../src/EthersAdapter.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}