{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SafeEthersSigner = void 0;\nconst abstract_signer_1 = require(\"@ethersproject/abstract-signer\");\nconst bignumber_1 = require(\"@ethersproject/bignumber\");\nconst safe_core_sdk_types_1 = require(\"@safe-global/safe-core-sdk-types\");\nconst utils_1 = require(\"./utils\");\nconst sleep = duration => new Promise(resolve => setTimeout(resolve, duration));\nclass SafeEthersSigner extends abstract_signer_1.VoidSigner {\n  /**\n   * Creates an instance of the SafeEthersSigner.\n   * @param safe - Safe that should be used\n   * @param service - Services to which the transactions should be proposed to\n   * @param provider - (Optional) Provider that should be used for blockchain interactions. By default the provider from the signer is used.\n   * @param options - (Optional) Additional options (e.g. polling delay when waiting for a transaction to be mined)\n   * @returns The SafeEthersSigner instance\n   */\n  constructor(safe, service, provider, options) {\n    super(safe.getAddress(), provider);\n    this.service = service;\n    this.safe = safe;\n    this.options = options;\n  }\n  async buildTransactionResponse(safeTxHash, safeTx) {\n    const connectedSafe = await this.safe;\n    const connectedService = this.service;\n    return {\n      to: safeTx.to,\n      value: bignumber_1.BigNumber.from(safeTx.value),\n      data: safeTx.data,\n      operation: safeTx.operation,\n      gasLimit: bignumber_1.BigNumber.from(safeTx.safeTxGas),\n      gasPrice: bignumber_1.BigNumber.from(0),\n      nonce: safeTx.nonce,\n      chainId: await connectedSafe.getChainId(),\n      hash: safeTxHash,\n      from: this.address,\n      confirmations: 0,\n      wait: async confirmations => {\n        var _a, _b;\n        while (true) {\n          try {\n            const txDetails = await connectedService.getSafeTxDetails(safeTxHash);\n            if (txDetails.transactionHash) {\n              this._checkProvider('sendTransaction');\n              const receipt = await this.provider.waitForTransaction(txDetails.transactionHash, confirmations);\n              return (0, utils_1.mapReceipt)(receipt, safeTx);\n            }\n          } catch (e) {}\n          await sleep((_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.pollingDelay) !== null && _b !== void 0 ? _b : 5000);\n        }\n      }\n    };\n  }\n  /**\n   * Populates all fields in a transaction, signs it and sends it to the Safe transaction service\n   *\n   * @param transaction - The transaction what should be send\n   * @returns A promise that resolves to a SafeTransactionReponse, that contains all the information of the transaction.\n   */\n  async sendTransaction(transaction) {\n    var _a, _b, _c;\n    const tx = await transaction;\n    let operation = safe_core_sdk_types_1.OperationType.Call;\n    let to = await tx.to;\n    let data = (_b = (_a = await tx.data) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '0x';\n    let value = bignumber_1.BigNumber.from((_c = await tx.value) !== null && _c !== void 0 ? _c : 0);\n    if (!to) {\n      to = utils_1.createLibAddress;\n      data = utils_1.createLibInterface.encodeFunctionData('performCreate', [value, data]);\n      value = bignumber_1.BigNumber.from(0);\n      operation = safe_core_sdk_types_1.OperationType.DelegateCall;\n    }\n    const baseTx = {\n      to: to,\n      data,\n      value: value.toString(),\n      operation\n    };\n    const safeTxGas = await this.service.estimateSafeTx(this.address, baseTx);\n    const connectedSafe = await this.safe;\n    const safeTransactionData = {\n      ...baseTx,\n      safeTxGas: safeTxGas.toNumber()\n    };\n    const safeTx = await connectedSafe.createTransaction({\n      safeTransactionData\n    });\n    const safeTxHash = await connectedSafe.getTransactionHash(safeTx);\n    const signature = await connectedSafe.signTransactionHash(safeTxHash);\n    await this.service.proposeTx(this.address, safeTxHash, safeTx, signature);\n    // TODO: maybe use original tx information\n    return this.buildTransactionResponse(safeTxHash, safeTx.data);\n  }\n}\nexports.SafeEthersSigner = SafeEthersSigner;","map":{"version":3,"names":["abstract_signer_1","require","bignumber_1","safe_core_sdk_types_1","utils_1","sleep","duration","Promise","resolve","setTimeout","SafeEthersSigner","VoidSigner","constructor","safe","service","provider","options","getAddress","buildTransactionResponse","safeTxHash","safeTx","connectedSafe","connectedService","to","value","BigNumber","from","data","operation","gasLimit","safeTxGas","gasPrice","nonce","chainId","getChainId","hash","address","confirmations","wait","txDetails","getSafeTxDetails","transactionHash","_checkProvider","receipt","waitForTransaction","mapReceipt","e","_b","_a","pollingDelay","sendTransaction","transaction","tx","OperationType","Call","toString","_c","createLibAddress","createLibInterface","encodeFunctionData","DelegateCall","baseTx","estimateSafeTx","safeTransactionData","toNumber","createTransaction","getTransactionHash","signature","signTransactionHash","proposeTx","exports"],"sources":["../../src/signer.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}