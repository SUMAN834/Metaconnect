{"ast":null,"code":"import { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { W as WagmiAdapter } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { w as walletIds } from '../../../../dist/walletIds-e41b240b.browser.esm.js';\nimport { a as AbstractClientWallet } from '../../../../dist/base-eec23f27.browser.esm.js';\nimport { Buffer } from 'buffer';\nimport 'eventemitter3';\nimport '../../../../dist/classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport '../../abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js';\nimport 'ethers';\nimport '@thirdweb-dev/sdk';\n{\n  // Coinbase SDK uses Buffer for rendering the QRCode which requires a global polyfill\n  window.Buffer = Buffer;\n}\nclass CoinbaseWallet extends AbstractClientWallet {\n  get walletName() {\n    return \"Coinbase Wallet\";\n  }\n  constructor(options) {\n    super(CoinbaseWallet.id, options);\n    this.headlessMode = options?.headlessMode || false;\n    this.theme = options?.theme || this.dappMetadata.isDarkMode === false ? \"light\" : \"dark\";\n  }\n  async getConnector() {\n    if (!this.connector) {\n      // import the connector dynamically\n      const {\n        CoinbaseWalletConnector\n      } = await import('../../../connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.browser.esm.js');\n      const cbConnector = new CoinbaseWalletConnector({\n        chains: this.chains,\n        options: {\n          appName: this.dappMetadata.name,\n          reloadOnDisconnect: false,\n          darkMode: this.theme === \"dark\",\n          headlessMode: this.headlessMode\n        }\n      });\n      cbConnector.on(\"connect\", () => {});\n      this.coinbaseConnector = cbConnector;\n      this.connector = new WagmiAdapter(cbConnector);\n    }\n    return this.connector;\n  }\n  async getQrUrl() {\n    await this.getConnector();\n    if (!this.coinbaseConnector) {\n      throw new Error(\"Coinbase connector not initialized\");\n    }\n    return this.coinbaseConnector.getQrUrl();\n  }\n}\n// TODO: remove this\n_defineProperty(CoinbaseWallet, \"meta\", {\n  iconURL: \"ipfs://QmcJBHopbwfJcLqJpX2xEufSS84aLbF7bHavYhaXUcrLaH/coinbase.svg\",\n  name: \"Coinbase Wallet\",\n  urls: {\n    chrome: \"https://chrome.google.com/webstore/detail/coinbase-wallet-extension/hnfanknocfeofbddgcijnmhnfnkdnaad\",\n    android: \"https://play.google.com/store/apps/details?id=org.toshi\",\n    ios: \"https://apps.apple.com/us/app/coinbase-wallet-nfts-crypto/id1278383455\"\n  }\n});\n_defineProperty(CoinbaseWallet, \"id\", walletIds.coinbase);\nexport { CoinbaseWallet };","map":{"version":3,"names":["_","_defineProperty","W","WagmiAdapter","w","walletIds","a","AbstractClientWallet","Buffer","window","CoinbaseWallet","walletName","constructor","options","id","headlessMode","theme","dappMetadata","isDarkMode","getConnector","connector","CoinbaseWalletConnector","cbConnector","chains","appName","name","reloadOnDisconnect","darkMode","on","coinbaseConnector","getQrUrl","Error","iconURL","urls","chrome","android","ios","coinbase"],"sources":["C:/Users/SUMAN K/meta_transfer/node_modules/@thirdweb-dev/wallets/evm/wallets/coinbase-wallet/dist/thirdweb-dev-wallets-evm-wallets-coinbase-wallet.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { W as WagmiAdapter } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { w as walletIds } from '../../../../dist/walletIds-e41b240b.browser.esm.js';\nimport { a as AbstractClientWallet } from '../../../../dist/base-eec23f27.browser.esm.js';\nimport { Buffer } from 'buffer';\nimport 'eventemitter3';\nimport '../../../../dist/classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport '../../abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js';\nimport 'ethers';\nimport '@thirdweb-dev/sdk';\n\n{\n  // Coinbase SDK uses Buffer for rendering the QRCode which requires a global polyfill\n  window.Buffer = Buffer;\n}\nclass CoinbaseWallet extends AbstractClientWallet {\n  get walletName() {\n    return \"Coinbase Wallet\";\n  }\n  constructor(options) {\n    super(CoinbaseWallet.id, options);\n    this.headlessMode = options?.headlessMode || false;\n    this.theme = options?.theme || this.dappMetadata.isDarkMode === false ? \"light\" : \"dark\";\n  }\n  async getConnector() {\n    if (!this.connector) {\n      // import the connector dynamically\n      const {\n        CoinbaseWalletConnector\n      } = await import('../../../connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.browser.esm.js');\n      const cbConnector = new CoinbaseWalletConnector({\n        chains: this.chains,\n        options: {\n          appName: this.dappMetadata.name,\n          reloadOnDisconnect: false,\n          darkMode: this.theme === \"dark\",\n          headlessMode: this.headlessMode\n        }\n      });\n      cbConnector.on(\"connect\", () => {});\n      this.coinbaseConnector = cbConnector;\n      this.connector = new WagmiAdapter(cbConnector);\n    }\n    return this.connector;\n  }\n  async getQrUrl() {\n    await this.getConnector();\n    if (!this.coinbaseConnector) {\n      throw new Error(\"Coinbase connector not initialized\");\n    }\n    return this.coinbaseConnector.getQrUrl();\n  }\n}\n// TODO: remove this\n_defineProperty(CoinbaseWallet, \"meta\", {\n  iconURL: \"ipfs://QmcJBHopbwfJcLqJpX2xEufSS84aLbF7bHavYhaXUcrLaH/coinbase.svg\",\n  name: \"Coinbase Wallet\",\n  urls: {\n    chrome: \"https://chrome.google.com/webstore/detail/coinbase-wallet-extension/hnfanknocfeofbddgcijnmhnfnkdnaad\",\n    android: \"https://play.google.com/store/apps/details?id=org.toshi\",\n    ios: \"https://apps.apple.com/us/app/coinbase-wallet-nfts-crypto/id1278383455\"\n  }\n});\n_defineProperty(CoinbaseWallet, \"id\", walletIds.coinbase);\n\nexport { CoinbaseWallet };\n"],"mappings":"AAAA,SAASA,CAAC,IAAIC,eAAe,QAAQ,yDAAyD;AAC9F,SAASC,CAAC,IAAIC,YAAY,QAAQ,oDAAoD;AACtF,SAASC,CAAC,IAAIC,SAAS,QAAQ,oDAAoD;AACnF,SAASC,CAAC,IAAIC,oBAAoB,QAAQ,+CAA+C;AACzF,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,eAAe;AACtB,OAAO,gEAAgE;AACvE,OAAO,+DAA+D;AACtE,OAAO,sBAAsB;AAC7B,OAAO,8EAA8E;AACrF,OAAO,QAAQ;AACf,OAAO,mBAAmB;AAE1B;EACE;EACAC,MAAM,CAACD,MAAM,GAAGA,MAAM;AACxB;AACA,MAAME,cAAc,SAASH,oBAAoB,CAAC;EAChD,IAAII,UAAUA,CAAA,EAAG;IACf,OAAO,iBAAiB;EAC1B;EACAC,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAACH,cAAc,CAACI,EAAE,EAAED,OAAO,CAAC;IACjC,IAAI,CAACE,YAAY,GAAGF,OAAO,EAAEE,YAAY,IAAI,KAAK;IAClD,IAAI,CAACC,KAAK,GAAGH,OAAO,EAAEG,KAAK,IAAI,IAAI,CAACC,YAAY,CAACC,UAAU,KAAK,KAAK,GAAG,OAAO,GAAG,MAAM;EAC1F;EACA,MAAMC,YAAYA,CAAA,EAAG;IACnB,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE;MACnB;MACA,MAAM;QACJC;MACF,CAAC,GAAG,MAAM,MAAM,CAAC,6GAA6G,CAAC;MAC/H,MAAMC,WAAW,GAAG,IAAID,uBAAuB,CAAC;QAC9CE,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBV,OAAO,EAAE;UACPW,OAAO,EAAE,IAAI,CAACP,YAAY,CAACQ,IAAI;UAC/BC,kBAAkB,EAAE,KAAK;UACzBC,QAAQ,EAAE,IAAI,CAACX,KAAK,KAAK,MAAM;UAC/BD,YAAY,EAAE,IAAI,CAACA;QACrB;MACF,CAAC,CAAC;MACFO,WAAW,CAACM,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;MACnC,IAAI,CAACC,iBAAiB,GAAGP,WAAW;MACpC,IAAI,CAACF,SAAS,GAAG,IAAIjB,YAAY,CAACmB,WAAW,CAAC;IAChD;IACA,OAAO,IAAI,CAACF,SAAS;EACvB;EACA,MAAMU,QAAQA,CAAA,EAAG;IACf,MAAM,IAAI,CAACX,YAAY,CAAC,CAAC;IACzB,IAAI,CAAC,IAAI,CAACU,iBAAiB,EAAE;MAC3B,MAAM,IAAIE,KAAK,CAAC,oCAAoC,CAAC;IACvD;IACA,OAAO,IAAI,CAACF,iBAAiB,CAACC,QAAQ,CAAC,CAAC;EAC1C;AACF;AACA;AACA7B,eAAe,CAACS,cAAc,EAAE,MAAM,EAAE;EACtCsB,OAAO,EAAE,oEAAoE;EAC7EP,IAAI,EAAE,iBAAiB;EACvBQ,IAAI,EAAE;IACJC,MAAM,EAAE,sGAAsG;IAC9GC,OAAO,EAAE,yDAAyD;IAClEC,GAAG,EAAE;EACP;AACF,CAAC,CAAC;AACFnC,eAAe,CAACS,cAAc,EAAE,IAAI,EAAEL,SAAS,CAACgC,QAAQ,CAAC;AAEzD,SAAS3B,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}