{"ast":null,"code":"import { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { C as Connector } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { ethers } from 'ethers';\nimport { SafeService, SafeEthersSigner } from '@safe-global/safe-ethers-adapters';\nimport safeCoreSdk from '@safe-global/safe-core-sdk';\nimport safeEthersLib from '@safe-global/safe-ethers-lib';\nimport { C as CHAIN_ID_TO_GNOSIS_SERVER_URL } from '../../../../dist/constants-9cc70a7d.browser.esm.js';\nimport 'eventemitter3';\nconst CHAIN_ID_TO_SIGN_MESSAGE_LIB_ADDRESS = {\n  // mainnet\n  1: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // polygon\n  137: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // bsc\n  56: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // arbitrum\n  42161: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // aurora\n  1313161554: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // avalanche\n  43114: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // optimism\n  10: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // base goerli\n  84531: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // celo\n  42220: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // goerli\n  5: \"0x58FCe385Ed16beB4BCE49c8DF34c7d6975807520\",\n  // gnosis chain\n  100: \"0x58FCe385Ed16beB4BCE49c8DF34c7d6975807520\"\n};\nconst SIGN_MESSAGE_LIB_ABI = [{\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"msgHash\",\n    type: \"bytes32\"\n  }],\n  name: \"SignMsg\",\n  type: \"event\"\n}, {\n  inputs: [{\n    internalType: \"bytes\",\n    name: \"message\",\n    type: \"bytes\"\n  }],\n  name: \"getMessageHash\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes\",\n    name: \"_data\",\n    type: \"bytes\"\n  }],\n  name: \"signMessage\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}];\nconst __IS_SERVER__ = \"object\" === \"undefined\";\nclass SafeConnector extends Connector {\n  // config\n\n  // private options: SafeOptions;\n\n  constructor() {\n    super();\n    _defineProperty(this, \"supportedChains\", SafeConnector.supportedChains);\n    _defineProperty(this, \"id\", \"safe-wallet\");\n    _defineProperty(this, \"ready\", !__IS_SERVER__);\n    _defineProperty(this, \"name\", \"Safe Wallet\");\n    {\n      this.ready = true;\n    }\n  }\n  async connect(args) {\n    if (!(args.chain.chainId in CHAIN_ID_TO_GNOSIS_SERVER_URL)) {\n      throw new Error(\"Chain not supported by Safe\");\n    }\n    this.safeSigner = await this.createSafeSigner(args);\n    return await this.getAddress();\n  }\n  async createSafeSigner(params) {\n    this.personalWallet = params.personalWallet;\n    const signer = await params.personalWallet.getSigner();\n    const safeAddress = params.safeAddress;\n    const safeChainId = params.chain.chainId;\n    if (!signer) {\n      throw new Error(\"cannot create Gnosis Safe signer without a personal signer\");\n    }\n    const signerChainId = await signer.getChainId();\n    if (signerChainId !== safeChainId) {\n      throw new Error(\"chainId of personal signer has to match safe chainId\");\n    }\n    if (!safeAddress) {\n      throw new Error(\"safeAddress is required\");\n    }\n    if (!safeChainId) {\n      throw new Error(\"safeChainId is required\");\n    }\n    const serverUrl = CHAIN_ID_TO_GNOSIS_SERVER_URL[safeChainId];\n    const signMessageLibAddress = CHAIN_ID_TO_SIGN_MESSAGE_LIB_ADDRESS[safeChainId];\n    if (!serverUrl || !signMessageLibAddress) {\n      throw new Error(\"Chain not supported\");\n    }\n    const ethAdapter = new safeEthersLib({\n      ethers,\n      signerOrProvider: signer\n    });\n    const safe = await safeCoreSdk.create({\n      ethAdapter: ethAdapter,\n      safeAddress\n    });\n    const service = new SafeService(serverUrl);\n    const safeSigner = new SafeEthersSigner(safe, service, signer.provider);\n    safeSigner.signMessage = async message => {\n      // Encode the request to the signMessage function of the SafeMessageLib\n      const contract = new ethers.BaseContract(signMessageLibAddress, SIGN_MESSAGE_LIB_ABI);\n      const data = contract.interface.encodeFunctionData(\"signMessage\", [ethers.utils.hashMessage(message)]);\n      const to = signMessageLibAddress;\n      const value = \"0\";\n      const operation = 1; // 1 indicates a delegatecall\n      const safeTxGas = 50000;\n      const baseGas = 50000;\n      const gasPrice = 0;\n      const gasToken = ethers.constants.AddressZero;\n      const refundReceiver = ethers.constants.AddressZero;\n\n      // Create the safe transaction to approve the signature\n      const safeTx = await safe.createTransaction({\n        safeTransactionData: {\n          to,\n          value,\n          operation,\n          data,\n          baseGas,\n          safeTxGas,\n          gasPrice,\n          gasToken,\n          refundReceiver\n        }\n      });\n\n      // Sign and propose the safe transaction\n      const safeTxHash = await safe.getTransactionHash(safeTx);\n      const safeSignature = await safe.signTransactionHash(safeTxHash);\n      await service.proposeTx(safe.getAddress(), safeTxHash, safeTx, safeSignature);\n\n      // Poll while we wait for the safe transaction to reach minimum confirmations\n      while (true) {\n        try {\n          const txDetails = await service.getSafeTxDetails(safeTxHash);\n          if (txDetails.transactionHash) {\n            await signer.provider?.waitForTransaction(txDetails.transactionHash);\n            break;\n          }\n        } catch (e) {}\n        await new Promise(resolve => setTimeout(resolve, 5000));\n      }\n\n      // For on-chain signatures, safe expects just \"0x\" as the signature\n      return \"0x\";\n    };\n\n    // set the personal signer as \"previous connector\" so that we can re-connect to it later when disconnecting\n    this.previousConnector = params.personalWallet;\n    return safeSigner;\n  }\n  async disconnect() {\n    this.safeSigner = undefined;\n    this.previousConnector = undefined;\n    return undefined;\n  }\n  async getAddress() {\n    const signer = await this.getSigner();\n    return await signer.getAddress();\n  }\n  async getChainId() {\n    return (await this.getSigner()).getChainId();\n  }\n  async getProvider() {\n    const provider = (await this.getSigner()).provider;\n    if (!provider) {\n      throw new Error(\"No provider available\");\n    }\n    return provider;\n  }\n  async getSigner() {\n    if (!this.safeSigner) {\n      throw new Error(\"not connected - please call connect() first\");\n    }\n    return this.safeSigner;\n  }\n  async isConnected() {\n    try {\n      const account = await this.getAddress();\n      return !!account;\n    } catch (e) {\n      return false;\n    }\n  }\n  onAccountsChanged(accounts) {\n    if (accounts.length === 0) {\n      this.emit(\"disconnect\");\n    } else {\n      if (accounts[0]) {\n        this.emit(\"change\", {\n          account: ethers.utils.getAddress(accounts[0])\n        });\n      }\n    }\n  }\n  onDisconnect() {\n    this.emit(\"disconnect\");\n  }\n  switchChain() {\n    throw new Error(\"Safe connector does not support switching chains\");\n  }\n  updateChains() {}\n  async setupListeners() {}\n}\n_defineProperty(SafeConnector, \"supportedChains\", /* @__PURE__ */(() => Object.keys(CHAIN_ID_TO_GNOSIS_SERVER_URL))());\nexport { SafeConnector };","map":{"version":3,"names":["_","_defineProperty","C","Connector","ethers","SafeService","SafeEthersSigner","safeCoreSdk","safeEthersLib","CHAIN_ID_TO_GNOSIS_SERVER_URL","CHAIN_ID_TO_SIGN_MESSAGE_LIB_ADDRESS","SIGN_MESSAGE_LIB_ABI","anonymous","inputs","indexed","internalType","name","type","outputs","stateMutability","__IS_SERVER__","SafeConnector","constructor","supportedChains","ready","connect","args","chain","chainId","Error","safeSigner","createSafeSigner","getAddress","params","personalWallet","signer","getSigner","safeAddress","safeChainId","signerChainId","getChainId","serverUrl","signMessageLibAddress","ethAdapter","signerOrProvider","safe","create","service","provider","signMessage","message","contract","BaseContract","data","interface","encodeFunctionData","utils","hashMessage","to","value","operation","safeTxGas","baseGas","gasPrice","gasToken","constants","AddressZero","refundReceiver","safeTx","createTransaction","safeTransactionData","safeTxHash","getTransactionHash","safeSignature","signTransactionHash","proposeTx","txDetails","getSafeTxDetails","transactionHash","waitForTransaction","e","Promise","resolve","setTimeout","previousConnector","disconnect","undefined","getProvider","isConnected","account","onAccountsChanged","accounts","length","emit","onDisconnect","switchChain","updateChains","setupListeners","Object","keys"],"sources":["C:/Users/SUMAN K/meta_transfer/node_modules/@thirdweb-dev/wallets/evm/connectors/safe/dist/thirdweb-dev-wallets-evm-connectors-safe.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { C as Connector } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { ethers } from 'ethers';\nimport { SafeService, SafeEthersSigner } from '@safe-global/safe-ethers-adapters';\nimport safeCoreSdk from '@safe-global/safe-core-sdk';\nimport safeEthersLib from '@safe-global/safe-ethers-lib';\nimport { C as CHAIN_ID_TO_GNOSIS_SERVER_URL } from '../../../../dist/constants-9cc70a7d.browser.esm.js';\nimport 'eventemitter3';\n\nconst CHAIN_ID_TO_SIGN_MESSAGE_LIB_ADDRESS = {\n  // mainnet\n  1: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // polygon\n  137: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // bsc\n  56: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // arbitrum\n  42161: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // aurora\n  1313161554: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // avalanche\n  43114: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // optimism\n  10: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // base goerli\n  84531: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // celo\n  42220: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // goerli\n  5: \"0x58FCe385Ed16beB4BCE49c8DF34c7d6975807520\",\n  // gnosis chain\n  100: \"0x58FCe385Ed16beB4BCE49c8DF34c7d6975807520\"\n};\nconst SIGN_MESSAGE_LIB_ABI = [{\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"msgHash\",\n    type: \"bytes32\"\n  }],\n  name: \"SignMsg\",\n  type: \"event\"\n}, {\n  inputs: [{\n    internalType: \"bytes\",\n    name: \"message\",\n    type: \"bytes\"\n  }],\n  name: \"getMessageHash\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes\",\n    name: \"_data\",\n    type: \"bytes\"\n  }],\n  name: \"signMessage\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}];\nconst __IS_SERVER__ = \"object\" === \"undefined\";\nclass SafeConnector extends Connector {\n  // config\n\n  // private options: SafeOptions;\n\n  constructor() {\n    super();\n    _defineProperty(this, \"supportedChains\", SafeConnector.supportedChains);\n    _defineProperty(this, \"id\", \"safe-wallet\");\n    _defineProperty(this, \"ready\", !__IS_SERVER__);\n    _defineProperty(this, \"name\", \"Safe Wallet\");\n    {\n      this.ready = true;\n    }\n  }\n  async connect(args) {\n    if (!(args.chain.chainId in CHAIN_ID_TO_GNOSIS_SERVER_URL)) {\n      throw new Error(\"Chain not supported by Safe\");\n    }\n    this.safeSigner = await this.createSafeSigner(args);\n    return await this.getAddress();\n  }\n  async createSafeSigner(params) {\n    this.personalWallet = params.personalWallet;\n    const signer = await params.personalWallet.getSigner();\n    const safeAddress = params.safeAddress;\n    const safeChainId = params.chain.chainId;\n    if (!signer) {\n      throw new Error(\"cannot create Gnosis Safe signer without a personal signer\");\n    }\n    const signerChainId = await signer.getChainId();\n    if (signerChainId !== safeChainId) {\n      throw new Error(\"chainId of personal signer has to match safe chainId\");\n    }\n    if (!safeAddress) {\n      throw new Error(\"safeAddress is required\");\n    }\n    if (!safeChainId) {\n      throw new Error(\"safeChainId is required\");\n    }\n    const serverUrl = CHAIN_ID_TO_GNOSIS_SERVER_URL[safeChainId];\n    const signMessageLibAddress = CHAIN_ID_TO_SIGN_MESSAGE_LIB_ADDRESS[safeChainId];\n    if (!serverUrl || !signMessageLibAddress) {\n      throw new Error(\"Chain not supported\");\n    }\n    const ethAdapter = new safeEthersLib({\n      ethers,\n      signerOrProvider: signer\n    });\n    const safe = await safeCoreSdk.create({\n      ethAdapter: ethAdapter,\n      safeAddress\n    });\n    const service = new SafeService(serverUrl);\n    const safeSigner = new SafeEthersSigner(safe, service, signer.provider);\n    safeSigner.signMessage = async message => {\n      // Encode the request to the signMessage function of the SafeMessageLib\n      const contract = new ethers.BaseContract(signMessageLibAddress, SIGN_MESSAGE_LIB_ABI);\n      const data = contract.interface.encodeFunctionData(\"signMessage\", [ethers.utils.hashMessage(message)]);\n      const to = signMessageLibAddress;\n      const value = \"0\";\n      const operation = 1; // 1 indicates a delegatecall\n      const safeTxGas = 50000;\n      const baseGas = 50000;\n      const gasPrice = 0;\n      const gasToken = ethers.constants.AddressZero;\n      const refundReceiver = ethers.constants.AddressZero;\n\n      // Create the safe transaction to approve the signature\n      const safeTx = await safe.createTransaction({\n        safeTransactionData: {\n          to,\n          value,\n          operation,\n          data,\n          baseGas,\n          safeTxGas,\n          gasPrice,\n          gasToken,\n          refundReceiver\n        }\n      });\n\n      // Sign and propose the safe transaction\n      const safeTxHash = await safe.getTransactionHash(safeTx);\n      const safeSignature = await safe.signTransactionHash(safeTxHash);\n      await service.proposeTx(safe.getAddress(), safeTxHash, safeTx, safeSignature);\n\n      // Poll while we wait for the safe transaction to reach minimum confirmations\n      while (true) {\n        try {\n          const txDetails = await service.getSafeTxDetails(safeTxHash);\n          if (txDetails.transactionHash) {\n            await signer.provider?.waitForTransaction(txDetails.transactionHash);\n            break;\n          }\n        } catch (e) {}\n        await new Promise(resolve => setTimeout(resolve, 5000));\n      }\n\n      // For on-chain signatures, safe expects just \"0x\" as the signature\n      return \"0x\";\n    };\n\n    // set the personal signer as \"previous connector\" so that we can re-connect to it later when disconnecting\n    this.previousConnector = params.personalWallet;\n    return safeSigner;\n  }\n  async disconnect() {\n    this.safeSigner = undefined;\n    this.previousConnector = undefined;\n    return undefined;\n  }\n  async getAddress() {\n    const signer = await this.getSigner();\n    return await signer.getAddress();\n  }\n  async getChainId() {\n    return (await this.getSigner()).getChainId();\n  }\n  async getProvider() {\n    const provider = (await this.getSigner()).provider;\n    if (!provider) {\n      throw new Error(\"No provider available\");\n    }\n    return provider;\n  }\n  async getSigner() {\n    if (!this.safeSigner) {\n      throw new Error(\"not connected - please call connect() first\");\n    }\n    return this.safeSigner;\n  }\n  async isConnected() {\n    try {\n      const account = await this.getAddress();\n      return !!account;\n    } catch (e) {\n      return false;\n    }\n  }\n  onAccountsChanged(accounts) {\n    if (accounts.length === 0) {\n      this.emit(\"disconnect\");\n    } else {\n      if (accounts[0]) {\n        this.emit(\"change\", {\n          account: ethers.utils.getAddress(accounts[0])\n        });\n      }\n    }\n  }\n  onDisconnect() {\n    this.emit(\"disconnect\");\n  }\n  switchChain() {\n    throw new Error(\"Safe connector does not support switching chains\");\n  }\n  updateChains() {}\n  async setupListeners() {}\n}\n_defineProperty(SafeConnector, \"supportedChains\", /* @__PURE__ */(() => Object.keys(CHAIN_ID_TO_GNOSIS_SERVER_URL))());\n\nexport { SafeConnector };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}