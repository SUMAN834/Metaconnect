{"ast":null,"code":"import { a as assertWindowEthereum } from './assertWindowEthereum-b48c1686.browser.esm.js';\nfunction getInjectedRainbowProvider() {\n  function getReady(ethereum) {\n    const isRainbow = !!ethereum?.isRainbow;\n    if (!isRainbow) {\n      return;\n    }\n    // Brave tries to make itself look like MetaMask\n    // Could also try RPC `web3_clientVersion` if following is unreliable\n    if (ethereum.isBraveWallet && !ethereum._events && !ethereum._state) {\n      return;\n    }\n    if (ethereum.isPhantom) {\n      return;\n    }\n    if (ethereum.isAvalanche) {\n      return;\n    }\n    if (ethereum.isBitKeep) {\n      return;\n    }\n    if (ethereum.isMathWallet) {\n      return;\n    }\n    if (ethereum.isZerion) {\n      return;\n    }\n    if (ethereum.isKuCoinWallet) {\n      return;\n    }\n    if (ethereum.isPortal) {\n      return;\n    }\n    if (ethereum.isTokenPocket) {\n      return;\n    }\n    if (ethereum.isTokenary) {\n      return;\n    }\n    return ethereum;\n  }\n  if (assertWindowEthereum(globalThis.window)) {\n    if (globalThis.window.ethereum?.providers) {\n      return globalThis.window.ethereum.providers.find(getReady);\n    }\n    return getReady(globalThis.window.ethereum);\n  }\n}\nexport { getInjectedRainbowProvider as g };","map":{"version":3,"names":["a","assertWindowEthereum","getInjectedRainbowProvider","getReady","ethereum","isRainbow","isBraveWallet","_events","_state","isPhantom","isAvalanche","isBitKeep","isMathWallet","isZerion","isKuCoinWallet","isPortal","isTokenPocket","isTokenary","globalThis","window","providers","find","g"],"sources":["C:/Users/SUMAN K/meta_transfer/node_modules/@thirdweb-dev/wallets/dist/getInjectedRainbowProvider-33485100.browser.esm.js"],"sourcesContent":["import { a as assertWindowEthereum } from './assertWindowEthereum-b48c1686.browser.esm.js';\n\nfunction getInjectedRainbowProvider() {\n  function getReady(ethereum) {\n    const isRainbow = !!ethereum?.isRainbow;\n    if (!isRainbow) {\n      return;\n    }\n    // Brave tries to make itself look like MetaMask\n    // Could also try RPC `web3_clientVersion` if following is unreliable\n    if (ethereum.isBraveWallet && !ethereum._events && !ethereum._state) {\n      return;\n    }\n    if (ethereum.isPhantom) {\n      return;\n    }\n    if (ethereum.isAvalanche) {\n      return;\n    }\n    if (ethereum.isBitKeep) {\n      return;\n    }\n    if (ethereum.isMathWallet) {\n      return;\n    }\n    if (ethereum.isZerion) {\n      return;\n    }\n    if (ethereum.isKuCoinWallet) {\n      return;\n    }\n    if (ethereum.isPortal) {\n      return;\n    }\n    if (ethereum.isTokenPocket) {\n      return;\n    }\n    if (ethereum.isTokenary) {\n      return;\n    }\n    return ethereum;\n  }\n  if (assertWindowEthereum(globalThis.window)) {\n    if (globalThis.window.ethereum?.providers) {\n      return globalThis.window.ethereum.providers.find(getReady);\n    }\n    return getReady(globalThis.window.ethereum);\n  }\n}\n\nexport { getInjectedRainbowProvider as g };\n"],"mappings":"AAAA,SAASA,CAAC,IAAIC,oBAAoB,QAAQ,gDAAgD;AAE1F,SAASC,0BAA0BA,CAAA,EAAG;EACpC,SAASC,QAAQA,CAACC,QAAQ,EAAE;IAC1B,MAAMC,SAAS,GAAG,CAAC,CAACD,QAAQ,EAAEC,SAAS;IACvC,IAAI,CAACA,SAAS,EAAE;MACd;IACF;IACA;IACA;IACA,IAAID,QAAQ,CAACE,aAAa,IAAI,CAACF,QAAQ,CAACG,OAAO,IAAI,CAACH,QAAQ,CAACI,MAAM,EAAE;MACnE;IACF;IACA,IAAIJ,QAAQ,CAACK,SAAS,EAAE;MACtB;IACF;IACA,IAAIL,QAAQ,CAACM,WAAW,EAAE;MACxB;IACF;IACA,IAAIN,QAAQ,CAACO,SAAS,EAAE;MACtB;IACF;IACA,IAAIP,QAAQ,CAACQ,YAAY,EAAE;MACzB;IACF;IACA,IAAIR,QAAQ,CAACS,QAAQ,EAAE;MACrB;IACF;IACA,IAAIT,QAAQ,CAACU,cAAc,EAAE;MAC3B;IACF;IACA,IAAIV,QAAQ,CAACW,QAAQ,EAAE;MACrB;IACF;IACA,IAAIX,QAAQ,CAACY,aAAa,EAAE;MAC1B;IACF;IACA,IAAIZ,QAAQ,CAACa,UAAU,EAAE;MACvB;IACF;IACA,OAAOb,QAAQ;EACjB;EACA,IAAIH,oBAAoB,CAACiB,UAAU,CAACC,MAAM,CAAC,EAAE;IAC3C,IAAID,UAAU,CAACC,MAAM,CAACf,QAAQ,EAAEgB,SAAS,EAAE;MACzC,OAAOF,UAAU,CAACC,MAAM,CAACf,QAAQ,CAACgB,SAAS,CAACC,IAAI,CAAClB,QAAQ,CAAC;IAC5D;IACA,OAAOA,QAAQ,CAACe,UAAU,CAACC,MAAM,CAACf,QAAQ,CAAC;EAC7C;AACF;AAEA,SAASF,0BAA0B,IAAIoB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}