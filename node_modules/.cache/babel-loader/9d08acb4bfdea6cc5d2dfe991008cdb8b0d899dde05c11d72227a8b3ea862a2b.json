{"ast":null,"code":"const EventEmitter = require('events');\nclass InjectedConnection extends EventEmitter {\n  constructor(_injected, options) {\n    super();\n    if (_injected) {\n      setTimeout(() => this.onError(new Error('Injected web3 provider is not currently supported')), 0);\n    } else {\n      setTimeout(() => this.onError(new Error('No injected provider found')), 0);\n    }\n  }\n  onError(err) {\n    if (this.listenerCount('error')) this.emit('error', err);\n  }\n}\nmodule.exports = injected => options => new InjectedConnection(injected, options);","map":{"version":3,"names":["EventEmitter","require","InjectedConnection","constructor","_injected","options","setTimeout","onError","Error","err","listenerCount","emit","module","exports","injected"],"sources":["C:/Users/SUMAN K/meta_transfer/node_modules/eth-provider/connections/injected.js"],"sourcesContent":["const EventEmitter = require('events')\n\nclass InjectedConnection extends EventEmitter {\n  constructor (_injected, options) {\n    super()\n    if (_injected) {\n      setTimeout(() => this.onError(new Error('Injected web3 provider is not currently supported')), 0)\n    } else {\n      setTimeout(() => this.onError(new Error('No injected provider found')), 0)\n    }\n  }\n\n  onError (err) {\n    if (this.listenerCount('error')) this.emit('error', err)\n  }\n}\n\nmodule.exports = injected => options => new InjectedConnection(injected, options)\n"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAEtC,MAAMC,kBAAkB,SAASF,YAAY,CAAC;EAC5CG,WAAWA,CAAEC,SAAS,EAAEC,OAAO,EAAE;IAC/B,KAAK,CAAC,CAAC;IACP,IAAID,SAAS,EAAE;MACbE,UAAU,CAAC,MAAM,IAAI,CAACC,OAAO,CAAC,IAAIC,KAAK,CAAC,mDAAmD,CAAC,CAAC,EAAE,CAAC,CAAC;IACnG,CAAC,MAAM;MACLF,UAAU,CAAC,MAAM,IAAI,CAACC,OAAO,CAAC,IAAIC,KAAK,CAAC,4BAA4B,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5E;EACF;EAEAD,OAAOA,CAAEE,GAAG,EAAE;IACZ,IAAI,IAAI,CAACC,aAAa,CAAC,OAAO,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC,OAAO,EAAEF,GAAG,CAAC;EAC1D;AACF;AAEAG,MAAM,CAACC,OAAO,GAAGC,QAAQ,IAAIT,OAAO,IAAI,IAAIH,kBAAkB,CAACY,QAAQ,EAAET,OAAO,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}