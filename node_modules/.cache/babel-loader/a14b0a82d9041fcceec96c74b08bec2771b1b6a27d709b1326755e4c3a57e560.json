{"ast":null,"code":"import { a as assertWindowEthereum } from './assertWindowEthereum-b48c1686.browser.esm.js';\nfunction getInjectedCoinbaseProvider() {\n  function getReady(ethereum) {\n    const isCoinbaseWallet = !!ethereum?.isCoinbaseWallet;\n    if (isCoinbaseWallet) {\n      return ethereum;\n    }\n    if (ethereum && \"overrideIsMetaMask\" in ethereum) {\n      if (\"providerMap\" in ethereum) {\n        if (ethereum.providerMap instanceof Map) {\n          if (ethereum.providerMap.has(\"CoinbaseWallet\")) {\n            return ethereum;\n          }\n        }\n      }\n    }\n  }\n  if (assertWindowEthereum(globalThis.window)) {\n    if (globalThis.window.ethereum?.providers) {\n      return globalThis.window.ethereum.providers.find(getReady);\n    }\n    return getReady(globalThis.window.ethereum);\n  }\n}\nexport { getInjectedCoinbaseProvider as g };","map":{"version":3,"names":["a","assertWindowEthereum","getInjectedCoinbaseProvider","getReady","ethereum","isCoinbaseWallet","providerMap","Map","has","globalThis","window","providers","find","g"],"sources":["C:/Users/SUMAN K/meta_transfer/node_modules/@thirdweb-dev/wallets/dist/getInjectedCoinbaseProvider-980f40a9.browser.esm.js"],"sourcesContent":["import { a as assertWindowEthereum } from './assertWindowEthereum-b48c1686.browser.esm.js';\n\nfunction getInjectedCoinbaseProvider() {\n  function getReady(ethereum) {\n    const isCoinbaseWallet = !!ethereum?.isCoinbaseWallet;\n    if (isCoinbaseWallet) {\n      return ethereum;\n    }\n    if (ethereum && \"overrideIsMetaMask\" in ethereum) {\n      if (\"providerMap\" in ethereum) {\n        if (ethereum.providerMap instanceof Map) {\n          if (ethereum.providerMap.has(\"CoinbaseWallet\")) {\n            return ethereum;\n          }\n        }\n      }\n    }\n  }\n  if (assertWindowEthereum(globalThis.window)) {\n    if (globalThis.window.ethereum?.providers) {\n      return globalThis.window.ethereum.providers.find(getReady);\n    }\n    return getReady(globalThis.window.ethereum);\n  }\n}\n\nexport { getInjectedCoinbaseProvider as g };\n"],"mappings":"AAAA,SAASA,CAAC,IAAIC,oBAAoB,QAAQ,gDAAgD;AAE1F,SAASC,2BAA2BA,CAAA,EAAG;EACrC,SAASC,QAAQA,CAACC,QAAQ,EAAE;IAC1B,MAAMC,gBAAgB,GAAG,CAAC,CAACD,QAAQ,EAAEC,gBAAgB;IACrD,IAAIA,gBAAgB,EAAE;MACpB,OAAOD,QAAQ;IACjB;IACA,IAAIA,QAAQ,IAAI,oBAAoB,IAAIA,QAAQ,EAAE;MAChD,IAAI,aAAa,IAAIA,QAAQ,EAAE;QAC7B,IAAIA,QAAQ,CAACE,WAAW,YAAYC,GAAG,EAAE;UACvC,IAAIH,QAAQ,CAACE,WAAW,CAACE,GAAG,CAAC,gBAAgB,CAAC,EAAE;YAC9C,OAAOJ,QAAQ;UACjB;QACF;MACF;IACF;EACF;EACA,IAAIH,oBAAoB,CAACQ,UAAU,CAACC,MAAM,CAAC,EAAE;IAC3C,IAAID,UAAU,CAACC,MAAM,CAACN,QAAQ,EAAEO,SAAS,EAAE;MACzC,OAAOF,UAAU,CAACC,MAAM,CAACN,QAAQ,CAACO,SAAS,CAACC,IAAI,CAACT,QAAQ,CAAC;IAC5D;IACA,OAAOA,QAAQ,CAACM,UAAU,CAACC,MAAM,CAACN,QAAQ,CAAC;EAC7C;AACF;AAEA,SAASF,2BAA2B,IAAIW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}