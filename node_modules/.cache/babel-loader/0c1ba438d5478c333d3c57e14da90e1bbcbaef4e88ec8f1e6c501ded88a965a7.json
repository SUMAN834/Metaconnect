{"ast":null,"code":"import { _ as _classPrivateMethodInitSpec, a as _classPrivateMethodGet } from '../../../../dist/classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet, b as _classPrivateFieldGet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport BloctoSDK from '@blocto/sdk';\nimport { utils, providers } from 'ethers';\nimport { w as walletIds } from '../../../../dist/walletIds-e41b240b.browser.esm.js';\nimport { g as getValidPublicRPCUrl } from '../../../../dist/url-bc88b2b6.browser.esm.js';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport { U as UserRejectedRequestError, a as ConnectorNotFoundError, S as SwitchChainError } from '../../../../dist/errors-d961f852.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-e4cc0175.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\nvar _provider = /*#__PURE__*/new WeakMap();\nvar _onAccountsChangedBind = /*#__PURE__*/new WeakMap();\nvar _onChainChangedBind = /*#__PURE__*/new WeakMap();\nvar _onDisconnectBind = /*#__PURE__*/new WeakMap();\nvar _isUserRejectedRequestError = /*#__PURE__*/new WeakSet();\nvar _handleConnectReset = /*#__PURE__*/new WeakSet();\nclass BloctoConnector extends WagmiConnector {\n  constructor(_ref) {\n    let {\n      chains,\n      options = {}\n    } = _ref;\n    super({\n      chains,\n      options\n    });\n    _classPrivateMethodInitSpec(this, _handleConnectReset);\n    _classPrivateMethodInitSpec(this, _isUserRejectedRequestError);\n    _defineProperty(this, \"id\", walletIds.blocto);\n    _defineProperty(this, \"name\", \"Blocto\");\n    _defineProperty(this, \"ready\", true);\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _onAccountsChangedBind, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _onChainChangedBind, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _onDisconnectBind, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _onAccountsChangedBind, this.onAccountsChanged.bind(this));\n    _classPrivateFieldSet(this, _onChainChangedBind, this.onChainChanged.bind(this));\n    _classPrivateFieldSet(this, _onDisconnectBind, this.onDisconnect.bind(this));\n  }\n  async connect(config) {\n    try {\n      const provider = await this.getProvider(config);\n      this.setupListeners();\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      const accounts = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      const account = utils.getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      };\n    } catch (error) {\n      _classPrivateMethodGet(this, _handleConnectReset, _handleConnectReset2).call(this);\n      if (_classPrivateMethodGet(this, _isUserRejectedRequestError, _isUserRejectedRequestError2).call(this, error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    await provider.request({\n      method: \"wallet_disconnect\"\n    });\n    this.removeListeners();\n    _classPrivateMethodGet(this, _handleConnectReset, _handleConnectReset2).call(this);\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    const [address] = accounts || [];\n    if (!address) {\n      throw new Error(\"No accounts found\");\n    }\n    return address;\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = await provider.request({\n      method: \"eth_chainId\"\n    });\n    return normalizeChainId(chainId);\n  }\n  getProvider() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!_classPrivateFieldGet(this, _provider)) {\n      const _chainId = chainId ?? this.options.chainId ?? this.chains[0]?.chainId ?? 1;\n      const _rpc = this.chains.find(x => x.chainId === _chainId)?.rpc[0];\n      _classPrivateFieldSet(this, _provider, new BloctoSDK({\n        ethereum: {\n          chainId: _chainId,\n          rpc: _rpc\n        },\n        appId: this.options.appId\n      })?.ethereum);\n    }\n    if (!_classPrivateFieldGet(this, _provider)) {\n      throw new ConnectorNotFoundError();\n    }\n    return Promise.resolve(_classPrivateFieldGet(this, _provider));\n  }\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    return !!_classPrivateFieldGet(this, _provider)?._blocto?.sessionKey ?? false;\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = utils.hexValue(chainId);\n    const chain = this.chains.find(x => x.chainId === chainId);\n    if (!chain) {\n      throw new SwitchChainError(new Error(\"chain not found on connector.\"));\n    }\n    const isBloctoSupportChain = provider._blocto.supportNetworkList[`${chainId}`];\n    if (!isBloctoSupportChain) {\n      throw new SwitchChainError(new Error(`Blocto unsupported chain: ${id}`));\n    }\n    try {\n      await provider.request({\n        method: \"wallet_addEthereumChain\",\n        params: [{\n          chainId: id,\n          rpcUrls: getValidPublicRPCUrl(chain) // no client id on purpose here\n        }]\n      });\n\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: id\n        }]\n      });\n      return chain;\n    } catch (error) {\n      if (_classPrivateMethodGet(this, _isUserRejectedRequestError, _isUserRejectedRequestError2).call(this, error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n  onAccountsChanged() {\n    // not supported yet\n  }\n  async onChainChanged(chain) {\n    const id = normalizeChainId(chain);\n    const unsupported = this.isChainUnsupported(id);\n    const account = await this.getAccount();\n    this.emit(\"change\", {\n      chain: {\n        id,\n        unsupported\n      },\n      account\n    });\n  }\n  onDisconnect() {\n    this.emit(\"disconnect\");\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    provider.on(\"accountsChanged\", _classPrivateFieldGet(this, _onAccountsChangedBind));\n    provider.on(\"chainChanged\", _classPrivateFieldGet(this, _onChainChangedBind));\n    provider.on(\"disconnect\", _classPrivateFieldGet(this, _onDisconnectBind));\n  }\n  async removeListeners() {\n    const provider = await this.getProvider();\n    provider.off(\"accountsChanged\", _classPrivateFieldGet(this, _onAccountsChangedBind));\n    provider.off(\"chainChanged\", _classPrivateFieldGet(this, _onChainChangedBind));\n    provider.off(\"disconnect\", _classPrivateFieldGet(this, _onDisconnectBind));\n  }\n}\nfunction _isUserRejectedRequestError2(error) {\n  return /(user rejected)/i.test(error.message);\n}\nfunction _handleConnectReset2() {\n  _classPrivateFieldSet(this, _provider, undefined);\n}\nexport { BloctoConnector };","map":{"version":3,"names":["_","_classPrivateMethodInitSpec","a","_classPrivateMethodGet","_classPrivateFieldInitSpec","_classPrivateFieldSet","b","_classPrivateFieldGet","_defineProperty","BloctoSDK","utils","providers","w","walletIds","g","getValidPublicRPCUrl","W","WagmiConnector","U","UserRejectedRequestError","ConnectorNotFoundError","S","SwitchChainError","n","normalizeChainId","_provider","WeakMap","_onAccountsChangedBind","_onChainChangedBind","_onDisconnectBind","_isUserRejectedRequestError","WeakSet","_handleConnectReset","BloctoConnector","constructor","_ref","chains","options","blocto","writable","value","onAccountsChanged","bind","onChainChanged","onDisconnect","connect","config","provider","getProvider","setupListeners","emit","type","accounts","request","method","account","getAddress","id","getChainId","unsupported","isChainUnsupported","chain","error","_handleConnectReset2","call","_isUserRejectedRequestError2","disconnect","removeListeners","getAccount","address","Error","chainId","arguments","length","undefined","_chainId","_rpc","find","x","rpc","ethereum","appId","Promise","resolve","getSigner","all","Web3Provider","isAuthorized","_blocto","sessionKey","switchChain","hexValue","isBloctoSupportChain","supportNetworkList","params","rpcUrls","on","off","test","message"],"sources":["C:/Users/SUMAN K/meta_transfer/node_modules/@thirdweb-dev/wallets/evm/connectors/blocto/dist/thirdweb-dev-wallets-evm-connectors-blocto.browser.esm.js"],"sourcesContent":["import { _ as _classPrivateMethodInitSpec, a as _classPrivateMethodGet } from '../../../../dist/classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet, b as _classPrivateFieldGet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport BloctoSDK from '@blocto/sdk';\nimport { utils, providers } from 'ethers';\nimport { w as walletIds } from '../../../../dist/walletIds-e41b240b.browser.esm.js';\nimport { g as getValidPublicRPCUrl } from '../../../../dist/url-bc88b2b6.browser.esm.js';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport { U as UserRejectedRequestError, a as ConnectorNotFoundError, S as SwitchChainError } from '../../../../dist/errors-d961f852.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-e4cc0175.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\nvar _provider = /*#__PURE__*/new WeakMap();\nvar _onAccountsChangedBind = /*#__PURE__*/new WeakMap();\nvar _onChainChangedBind = /*#__PURE__*/new WeakMap();\nvar _onDisconnectBind = /*#__PURE__*/new WeakMap();\nvar _isUserRejectedRequestError = /*#__PURE__*/new WeakSet();\nvar _handleConnectReset = /*#__PURE__*/new WeakSet();\nclass BloctoConnector extends WagmiConnector {\n  constructor(_ref) {\n    let {\n      chains,\n      options = {}\n    } = _ref;\n    super({\n      chains,\n      options\n    });\n    _classPrivateMethodInitSpec(this, _handleConnectReset);\n    _classPrivateMethodInitSpec(this, _isUserRejectedRequestError);\n    _defineProperty(this, \"id\", walletIds.blocto);\n    _defineProperty(this, \"name\", \"Blocto\");\n    _defineProperty(this, \"ready\", true);\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _onAccountsChangedBind, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _onChainChangedBind, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _onDisconnectBind, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _onAccountsChangedBind, this.onAccountsChanged.bind(this));\n    _classPrivateFieldSet(this, _onChainChangedBind, this.onChainChanged.bind(this));\n    _classPrivateFieldSet(this, _onDisconnectBind, this.onDisconnect.bind(this));\n  }\n  async connect(config) {\n    try {\n      const provider = await this.getProvider(config);\n      this.setupListeners();\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      const accounts = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      const account = utils.getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      };\n    } catch (error) {\n      _classPrivateMethodGet(this, _handleConnectReset, _handleConnectReset2).call(this);\n      if (_classPrivateMethodGet(this, _isUserRejectedRequestError, _isUserRejectedRequestError2).call(this, error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    await provider.request({\n      method: \"wallet_disconnect\"\n    });\n    this.removeListeners();\n    _classPrivateMethodGet(this, _handleConnectReset, _handleConnectReset2).call(this);\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    const [address] = accounts || [];\n    if (!address) {\n      throw new Error(\"No accounts found\");\n    }\n    return address;\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = await provider.request({\n      method: \"eth_chainId\"\n    });\n    return normalizeChainId(chainId);\n  }\n  getProvider() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!_classPrivateFieldGet(this, _provider)) {\n      const _chainId = chainId ?? this.options.chainId ?? this.chains[0]?.chainId ?? 1;\n      const _rpc = this.chains.find(x => x.chainId === _chainId)?.rpc[0];\n      _classPrivateFieldSet(this, _provider, new BloctoSDK({\n        ethereum: {\n          chainId: _chainId,\n          rpc: _rpc\n        },\n        appId: this.options.appId\n      })?.ethereum);\n    }\n    if (!_classPrivateFieldGet(this, _provider)) {\n      throw new ConnectorNotFoundError();\n    }\n    return Promise.resolve(_classPrivateFieldGet(this, _provider));\n  }\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    return !!_classPrivateFieldGet(this, _provider)?._blocto?.sessionKey ?? false;\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = utils.hexValue(chainId);\n    const chain = this.chains.find(x => x.chainId === chainId);\n    if (!chain) {\n      throw new SwitchChainError(new Error(\"chain not found on connector.\"));\n    }\n    const isBloctoSupportChain = provider._blocto.supportNetworkList[`${chainId}`];\n    if (!isBloctoSupportChain) {\n      throw new SwitchChainError(new Error(`Blocto unsupported chain: ${id}`));\n    }\n    try {\n      await provider.request({\n        method: \"wallet_addEthereumChain\",\n        params: [{\n          chainId: id,\n          rpcUrls: getValidPublicRPCUrl(chain) // no client id on purpose here\n        }]\n      });\n\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: id\n        }]\n      });\n      return chain;\n    } catch (error) {\n      if (_classPrivateMethodGet(this, _isUserRejectedRequestError, _isUserRejectedRequestError2).call(this, error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n  onAccountsChanged() {\n    // not supported yet\n  }\n  async onChainChanged(chain) {\n    const id = normalizeChainId(chain);\n    const unsupported = this.isChainUnsupported(id);\n    const account = await this.getAccount();\n    this.emit(\"change\", {\n      chain: {\n        id,\n        unsupported\n      },\n      account\n    });\n  }\n  onDisconnect() {\n    this.emit(\"disconnect\");\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    provider.on(\"accountsChanged\", _classPrivateFieldGet(this, _onAccountsChangedBind));\n    provider.on(\"chainChanged\", _classPrivateFieldGet(this, _onChainChangedBind));\n    provider.on(\"disconnect\", _classPrivateFieldGet(this, _onDisconnectBind));\n  }\n  async removeListeners() {\n    const provider = await this.getProvider();\n    provider.off(\"accountsChanged\", _classPrivateFieldGet(this, _onAccountsChangedBind));\n    provider.off(\"chainChanged\", _classPrivateFieldGet(this, _onChainChangedBind));\n    provider.off(\"disconnect\", _classPrivateFieldGet(this, _onDisconnectBind));\n  }\n}\nfunction _isUserRejectedRequestError2(error) {\n  return /(user rejected)/i.test(error.message);\n}\nfunction _handleConnectReset2() {\n  _classPrivateFieldSet(this, _provider, undefined);\n}\n\nexport { BloctoConnector };\n"],"mappings":"AAAA,SAASA,CAAC,IAAIC,2BAA2B,EAAEC,CAAC,IAAIC,sBAAsB,QAAQ,gEAAgE;AAC9I,SAASH,CAAC,IAAII,0BAA0B,EAAEF,CAAC,IAAIG,qBAAqB,EAAEC,CAAC,IAAIC,qBAAqB,QAAQ,+DAA+D;AACvK,SAASP,CAAC,IAAIQ,eAAe,QAAQ,yDAAyD;AAC9F,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,KAAK,EAAEC,SAAS,QAAQ,QAAQ;AACzC,SAASC,CAAC,IAAIC,SAAS,QAAQ,oDAAoD;AACnF,SAASC,CAAC,IAAIC,oBAAoB,QAAQ,8CAA8C;AACxF,SAASC,CAAC,IAAIC,cAAc,QAAQ,yDAAyD;AAC7F,SAASC,CAAC,IAAIC,wBAAwB,EAAEjB,CAAC,IAAIkB,sBAAsB,EAAEC,CAAC,IAAIC,gBAAgB,QAAQ,iDAAiD;AACnJ,SAASC,CAAC,IAAIC,gBAAgB,QAAQ,2DAA2D;AACjG,OAAO,sBAAsB;AAC7B,OAAO,eAAe;AAEtB,IAAIC,SAAS,GAAG,aAAa,IAAIC,OAAO,CAAC,CAAC;AAC1C,IAAIC,sBAAsB,GAAG,aAAa,IAAID,OAAO,CAAC,CAAC;AACvD,IAAIE,mBAAmB,GAAG,aAAa,IAAIF,OAAO,CAAC,CAAC;AACpD,IAAIG,iBAAiB,GAAG,aAAa,IAAIH,OAAO,CAAC,CAAC;AAClD,IAAII,2BAA2B,GAAG,aAAa,IAAIC,OAAO,CAAC,CAAC;AAC5D,IAAIC,mBAAmB,GAAG,aAAa,IAAID,OAAO,CAAC,CAAC;AACpD,MAAME,eAAe,SAAShB,cAAc,CAAC;EAC3CiB,WAAWA,CAACC,IAAI,EAAE;IAChB,IAAI;MACFC,MAAM;MACNC,OAAO,GAAG,CAAC;IACb,CAAC,GAAGF,IAAI;IACR,KAAK,CAAC;MACJC,MAAM;MACNC;IACF,CAAC,CAAC;IACFpC,2BAA2B,CAAC,IAAI,EAAE+B,mBAAmB,CAAC;IACtD/B,2BAA2B,CAAC,IAAI,EAAE6B,2BAA2B,CAAC;IAC9DtB,eAAe,CAAC,IAAI,EAAE,IAAI,EAAEK,SAAS,CAACyB,MAAM,CAAC;IAC7C9B,eAAe,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC;IACvCA,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC;IACpCJ,0BAA0B,CAAC,IAAI,EAAEqB,SAAS,EAAE;MAC1Cc,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IACd,CAAC,CAAC;IACFpC,0BAA0B,CAAC,IAAI,EAAEuB,sBAAsB,EAAE;MACvDY,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IACd,CAAC,CAAC;IACFpC,0BAA0B,CAAC,IAAI,EAAEwB,mBAAmB,EAAE;MACpDW,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IACd,CAAC,CAAC;IACFpC,0BAA0B,CAAC,IAAI,EAAEyB,iBAAiB,EAAE;MAClDU,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IACd,CAAC,CAAC;IACFnC,qBAAqB,CAAC,IAAI,EAAEsB,sBAAsB,EAAE,IAAI,CAACc,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtFrC,qBAAqB,CAAC,IAAI,EAAEuB,mBAAmB,EAAE,IAAI,CAACe,cAAc,CAACD,IAAI,CAAC,IAAI,CAAC,CAAC;IAChFrC,qBAAqB,CAAC,IAAI,EAAEwB,iBAAiB,EAAE,IAAI,CAACe,YAAY,CAACF,IAAI,CAAC,IAAI,CAAC,CAAC;EAC9E;EACA,MAAMG,OAAOA,CAACC,MAAM,EAAE;IACpB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACC,WAAW,CAACF,MAAM,CAAC;MAC/C,IAAI,CAACG,cAAc,CAAC,CAAC;MACrB,IAAI,CAACC,IAAI,CAAC,SAAS,EAAE;QACnBC,IAAI,EAAE;MACR,CAAC,CAAC;MACF,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,OAAO,CAAC;QACtCC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,MAAMC,OAAO,GAAG7C,KAAK,CAAC8C,UAAU,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC7C,MAAMK,EAAE,GAAG,MAAM,IAAI,CAACC,UAAU,CAAC,CAAC;MAClC,MAAMC,WAAW,GAAG,IAAI,CAACC,kBAAkB,CAACH,EAAE,CAAC;MAC/C,OAAO;QACLF,OAAO;QACPM,KAAK,EAAE;UACLJ,EAAE;UACFE;QACF,CAAC;QACDZ;MACF,CAAC;IACH,CAAC,CAAC,OAAOe,KAAK,EAAE;MACd3D,sBAAsB,CAAC,IAAI,EAAE6B,mBAAmB,EAAE+B,oBAAoB,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MAClF,IAAI7D,sBAAsB,CAAC,IAAI,EAAE2B,2BAA2B,EAAEmC,4BAA4B,CAAC,CAACD,IAAI,CAAC,IAAI,EAAEF,KAAK,CAAC,EAAE;QAC7G,MAAM,IAAI3C,wBAAwB,CAAC2C,KAAK,CAAC;MAC3C;MACA,MAAMA,KAAK;IACb;EACF;EACA,MAAMI,UAAUA,CAAA,EAAG;IACjB,MAAMnB,QAAQ,GAAG,MAAM,IAAI,CAACC,WAAW,CAAC,CAAC;IACzC,MAAMD,QAAQ,CAACM,OAAO,CAAC;MACrBC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAI,CAACa,eAAe,CAAC,CAAC;IACtBhE,sBAAsB,CAAC,IAAI,EAAE6B,mBAAmB,EAAE+B,oBAAoB,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;EACpF;EACA,MAAMI,UAAUA,CAAA,EAAG;IACjB,MAAMrB,QAAQ,GAAG,MAAM,IAAI,CAACC,WAAW,CAAC,CAAC;IACzC,MAAMI,QAAQ,GAAG,MAAML,QAAQ,CAACM,OAAO,CAAC;MACtCC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,MAAM,CAACe,OAAO,CAAC,GAAGjB,QAAQ,IAAI,EAAE;IAChC,IAAI,CAACiB,OAAO,EAAE;MACZ,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;IACtC;IACA,OAAOD,OAAO;EAChB;EACA,MAAMX,UAAUA,CAAA,EAAG;IACjB,MAAMX,QAAQ,GAAG,MAAM,IAAI,CAACC,WAAW,CAAC,CAAC;IACzC,MAAMuB,OAAO,GAAG,MAAMxB,QAAQ,CAACM,OAAO,CAAC;MACrCC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,OAAO9B,gBAAgB,CAAC+C,OAAO,CAAC;EAClC;EACAvB,WAAWA,CAAA,EAAG;IACZ,IAAI;MACFuB;IACF,CAAC,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1E,IAAI,CAACjE,qBAAqB,CAAC,IAAI,EAAEkB,SAAS,CAAC,EAAE;MAC3C,MAAMkD,QAAQ,GAAGJ,OAAO,IAAI,IAAI,CAAClC,OAAO,CAACkC,OAAO,IAAI,IAAI,CAACnC,MAAM,CAAC,CAAC,CAAC,EAAEmC,OAAO,IAAI,CAAC;MAChF,MAAMK,IAAI,GAAG,IAAI,CAACxC,MAAM,CAACyC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACP,OAAO,KAAKI,QAAQ,CAAC,EAAEI,GAAG,CAAC,CAAC,CAAC;MAClE1E,qBAAqB,CAAC,IAAI,EAAEoB,SAAS,EAAE,IAAIhB,SAAS,CAAC;QACnDuE,QAAQ,EAAE;UACRT,OAAO,EAAEI,QAAQ;UACjBI,GAAG,EAAEH;QACP,CAAC;QACDK,KAAK,EAAE,IAAI,CAAC5C,OAAO,CAAC4C;MACtB,CAAC,CAAC,EAAED,QAAQ,CAAC;IACf;IACA,IAAI,CAACzE,qBAAqB,CAAC,IAAI,EAAEkB,SAAS,CAAC,EAAE;MAC3C,MAAM,IAAIL,sBAAsB,CAAC,CAAC;IACpC;IACA,OAAO8D,OAAO,CAACC,OAAO,CAAC5E,qBAAqB,CAAC,IAAI,EAAEkB,SAAS,CAAC,CAAC;EAChE;EACA,MAAM2D,SAASA,CAAA,EAAG;IAChB,IAAI;MACFb;IACF,CAAC,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1E,MAAM,CAACzB,QAAQ,EAAEQ,OAAO,CAAC,GAAG,MAAM2B,OAAO,CAACG,GAAG,CAAC,CAAC,IAAI,CAACrC,WAAW,CAAC,CAAC,EAAE,IAAI,CAACoB,UAAU,CAAC,CAAC,CAAC,CAAC;IACtF,OAAO,IAAIzD,SAAS,CAAC2E,YAAY,CAACvC,QAAQ,EAAEwB,OAAO,CAAC,CAACa,SAAS,CAAC7B,OAAO,CAAC;EACzE;EACA,MAAMgC,YAAYA,CAAA,EAAG;IACnB,OAAO,CAAC,CAAChF,qBAAqB,CAAC,IAAI,EAAEkB,SAAS,CAAC,EAAE+D,OAAO,EAAEC,UAAU,IAAI,KAAK;EAC/E;EACA,MAAMC,WAAWA,CAACnB,OAAO,EAAE;IACzB,MAAMxB,QAAQ,GAAG,MAAM,IAAI,CAACC,WAAW,CAAC,CAAC;IACzC,MAAMS,EAAE,GAAG/C,KAAK,CAACiF,QAAQ,CAACpB,OAAO,CAAC;IAClC,MAAMV,KAAK,GAAG,IAAI,CAACzB,MAAM,CAACyC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACP,OAAO,KAAKA,OAAO,CAAC;IAC1D,IAAI,CAACV,KAAK,EAAE;MACV,MAAM,IAAIvC,gBAAgB,CAAC,IAAIgD,KAAK,CAAC,+BAA+B,CAAC,CAAC;IACxE;IACA,MAAMsB,oBAAoB,GAAG7C,QAAQ,CAACyC,OAAO,CAACK,kBAAkB,CAAE,GAAEtB,OAAQ,EAAC,CAAC;IAC9E,IAAI,CAACqB,oBAAoB,EAAE;MACzB,MAAM,IAAItE,gBAAgB,CAAC,IAAIgD,KAAK,CAAE,6BAA4Bb,EAAG,EAAC,CAAC,CAAC;IAC1E;IACA,IAAI;MACF,MAAMV,QAAQ,CAACM,OAAO,CAAC;QACrBC,MAAM,EAAE,yBAAyB;QACjCwC,MAAM,EAAE,CAAC;UACPvB,OAAO,EAAEd,EAAE;UACXsC,OAAO,EAAEhF,oBAAoB,CAAC8C,KAAK,CAAC,CAAC;QACvC,CAAC;MACH,CAAC,CAAC;;MAEF,MAAMd,QAAQ,CAACM,OAAO,CAAC;QACrBC,MAAM,EAAE,4BAA4B;QACpCwC,MAAM,EAAE,CAAC;UACPvB,OAAO,EAAEd;QACX,CAAC;MACH,CAAC,CAAC;MACF,OAAOI,KAAK;IACd,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAI3D,sBAAsB,CAAC,IAAI,EAAE2B,2BAA2B,EAAEmC,4BAA4B,CAAC,CAACD,IAAI,CAAC,IAAI,EAAEF,KAAK,CAAC,EAAE;QAC7G,MAAM,IAAI3C,wBAAwB,CAAC2C,KAAK,CAAC;MAC3C;MACA,MAAM,IAAIxC,gBAAgB,CAACwC,KAAK,CAAC;IACnC;EACF;EACArB,iBAAiBA,CAAA,EAAG;IAClB;EAAA;EAEF,MAAME,cAAcA,CAACkB,KAAK,EAAE;IAC1B,MAAMJ,EAAE,GAAGjC,gBAAgB,CAACqC,KAAK,CAAC;IAClC,MAAMF,WAAW,GAAG,IAAI,CAACC,kBAAkB,CAACH,EAAE,CAAC;IAC/C,MAAMF,OAAO,GAAG,MAAM,IAAI,CAACa,UAAU,CAAC,CAAC;IACvC,IAAI,CAAClB,IAAI,CAAC,QAAQ,EAAE;MAClBW,KAAK,EAAE;QACLJ,EAAE;QACFE;MACF,CAAC;MACDJ;IACF,CAAC,CAAC;EACJ;EACAX,YAAYA,CAAA,EAAG;IACb,IAAI,CAACM,IAAI,CAAC,YAAY,CAAC;EACzB;EACA,MAAMD,cAAcA,CAAA,EAAG;IACrB,MAAMF,QAAQ,GAAG,MAAM,IAAI,CAACC,WAAW,CAAC,CAAC;IACzCD,QAAQ,CAACiD,EAAE,CAAC,iBAAiB,EAAEzF,qBAAqB,CAAC,IAAI,EAAEoB,sBAAsB,CAAC,CAAC;IACnFoB,QAAQ,CAACiD,EAAE,CAAC,cAAc,EAAEzF,qBAAqB,CAAC,IAAI,EAAEqB,mBAAmB,CAAC,CAAC;IAC7EmB,QAAQ,CAACiD,EAAE,CAAC,YAAY,EAAEzF,qBAAqB,CAAC,IAAI,EAAEsB,iBAAiB,CAAC,CAAC;EAC3E;EACA,MAAMsC,eAAeA,CAAA,EAAG;IACtB,MAAMpB,QAAQ,GAAG,MAAM,IAAI,CAACC,WAAW,CAAC,CAAC;IACzCD,QAAQ,CAACkD,GAAG,CAAC,iBAAiB,EAAE1F,qBAAqB,CAAC,IAAI,EAAEoB,sBAAsB,CAAC,CAAC;IACpFoB,QAAQ,CAACkD,GAAG,CAAC,cAAc,EAAE1F,qBAAqB,CAAC,IAAI,EAAEqB,mBAAmB,CAAC,CAAC;IAC9EmB,QAAQ,CAACkD,GAAG,CAAC,YAAY,EAAE1F,qBAAqB,CAAC,IAAI,EAAEsB,iBAAiB,CAAC,CAAC;EAC5E;AACF;AACA,SAASoC,4BAA4BA,CAACH,KAAK,EAAE;EAC3C,OAAO,kBAAkB,CAACoC,IAAI,CAACpC,KAAK,CAACqC,OAAO,CAAC;AAC/C;AACA,SAASpC,oBAAoBA,CAAA,EAAG;EAC9B1D,qBAAqB,CAAC,IAAI,EAAEoB,SAAS,EAAEiD,SAAS,CAAC;AACnD;AAEA,SAASzC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}