{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n// @ts-ignore no types\nconst explain = require('explain-error');\n\n/**\n * @param {CID | string | Uint8Array} cid\n */\nmodule.exports = function base32(cid) {\n  try {\n    cid = new CID(cid);\n  } catch (err) {\n    throw explain(err, `invalid cid: ${cid}`);\n  }\n  if (cid.version !== 1) {\n    cid = cid.toV1();\n  }\n  return cid.toBaseEncodedString('base32');\n};","map":{"version":3,"names":["CID","require","explain","module","exports","base32","cid","err","version","toV1","toBaseEncodedString"],"sources":["C:/Users/SUMAN K/meta_transfer/node_modules/cid-tool/src/core/base32.js"],"sourcesContent":["'use strict'\n\nconst CID = require('cids')\n// @ts-ignore no types\nconst explain = require('explain-error')\n\n/**\n * @param {CID | string | Uint8Array} cid\n */\nmodule.exports = function base32 (cid) {\n  try {\n    cid = new CID(cid)\n  } catch (err) {\n    throw explain(err, `invalid cid: ${cid}`)\n  }\n\n  if (cid.version !== 1) {\n    cid = cid.toV1()\n  }\n\n  return cid.toBaseEncodedString('base32')\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC3B;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,eAAe,CAAC;;AAExC;AACA;AACA;AACAE,MAAM,CAACC,OAAO,GAAG,SAASC,MAAMA,CAAEC,GAAG,EAAE;EACrC,IAAI;IACFA,GAAG,GAAG,IAAIN,GAAG,CAACM,GAAG,CAAC;EACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,MAAML,OAAO,CAACK,GAAG,EAAG,gBAAeD,GAAI,EAAC,CAAC;EAC3C;EAEA,IAAIA,GAAG,CAACE,OAAO,KAAK,CAAC,EAAE;IACrBF,GAAG,GAAGA,GAAG,CAACG,IAAI,CAAC,CAAC;EAClB;EAEA,OAAOH,GAAG,CAACI,mBAAmB,CAAC,QAAQ,CAAC;AAC1C,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}