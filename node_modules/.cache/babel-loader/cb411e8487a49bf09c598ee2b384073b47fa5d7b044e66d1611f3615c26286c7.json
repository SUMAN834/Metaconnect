{"ast":null,"code":"const EventEmitter = require('events');\nclass UnavailableConnection extends EventEmitter {\n  constructor(message) {\n    super();\n    setTimeout(() => this.onError(new Error(message)), 0);\n  }\n  onError(err) {\n    if (this.listenerCount('error')) this.emit('error', err);\n  }\n}\nmodule.exports = message => () => new UnavailableConnection(message);","map":{"version":3,"names":["EventEmitter","require","UnavailableConnection","constructor","message","setTimeout","onError","Error","err","listenerCount","emit","module","exports"],"sources":["C:/Users/SUMAN K/meta_transfer/node_modules/eth-provider/connections/unavailable.js"],"sourcesContent":["const EventEmitter = require('events')\n\nclass UnavailableConnection extends EventEmitter {\n  constructor (message) {\n    super()\n    setTimeout(() => this.onError(new Error(message)), 0)\n  }\n\n  onError (err) {\n    if (this.listenerCount('error')) this.emit('error', err)\n  }\n}\n\nmodule.exports = message => () => new UnavailableConnection(message)\n"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAEtC,MAAMC,qBAAqB,SAASF,YAAY,CAAC;EAC/CG,WAAWA,CAAEC,OAAO,EAAE;IACpB,KAAK,CAAC,CAAC;IACPC,UAAU,CAAC,MAAM,IAAI,CAACC,OAAO,CAAC,IAAIC,KAAK,CAACH,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;EACvD;EAEAE,OAAOA,CAAEE,GAAG,EAAE;IACZ,IAAI,IAAI,CAACC,aAAa,CAAC,OAAO,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC,OAAO,EAAEF,GAAG,CAAC;EAC1D;AACF;AAEAG,MAAM,CAACC,OAAO,GAAGR,OAAO,IAAI,MAAM,IAAIF,qBAAqB,CAACE,OAAO,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}