{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _OwnerManager_ethAdapter, _OwnerManager_safeContract;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../utils/constants\");\nclass OwnerManager {\n  constructor(ethAdapter, safeContract) {\n    _OwnerManager_ethAdapter.set(this, void 0);\n    _OwnerManager_safeContract.set(this, void 0);\n    __classPrivateFieldSet(this, _OwnerManager_ethAdapter, ethAdapter, \"f\");\n    __classPrivateFieldSet(this, _OwnerManager_safeContract, safeContract, \"f\");\n  }\n  validateOwnerAddress(ownerAddress, errorMessage) {\n    const isValidAddress = __classPrivateFieldGet(this, _OwnerManager_ethAdapter, \"f\").isAddress(ownerAddress);\n    if (!isValidAddress || (0, utils_1.isRestrictedAddress)(ownerAddress)) {\n      throw new Error(errorMessage || 'Invalid owner address provided');\n    }\n  }\n  validateThreshold(threshold, numOwners) {\n    if (threshold <= 0) {\n      throw new Error('Threshold needs to be greater than 0');\n    }\n    if (threshold > numOwners) {\n      throw new Error('Threshold cannot exceed owner count');\n    }\n  }\n  validateAddressIsNotOwner(ownerAddress, owners, errorMessage) {\n    const ownerIndex = owners.findIndex(owner => (0, utils_1.sameString)(owner, ownerAddress));\n    const isOwner = ownerIndex >= 0;\n    if (isOwner) {\n      throw new Error(errorMessage || 'Address provided is already an owner');\n    }\n  }\n  validateAddressIsOwner(ownerAddress, owners, errorMessage) {\n    const ownerIndex = owners.findIndex(owner => (0, utils_1.sameString)(owner, ownerAddress));\n    const isOwner = ownerIndex >= 0;\n    if (!isOwner) {\n      throw new Error(errorMessage || 'Address provided is not an owner');\n    }\n    return ownerIndex;\n  }\n  async getOwners() {\n    const owners = await __classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\").getOwners();\n    return [...owners];\n  }\n  async getThreshold() {\n    return __classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\").getThreshold();\n  }\n  async isOwner(ownerAddress) {\n    return __classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\").isOwner(ownerAddress);\n  }\n  async encodeAddOwnerWithThresholdData(ownerAddress, threshold) {\n    this.validateOwnerAddress(ownerAddress);\n    const owners = await this.getOwners();\n    this.validateAddressIsNotOwner(ownerAddress, owners);\n    const newThreshold = threshold !== null && threshold !== void 0 ? threshold : await this.getThreshold();\n    this.validateThreshold(newThreshold, owners.length + 1);\n    return __classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\").encode('addOwnerWithThreshold', [ownerAddress, newThreshold]);\n  }\n  async encodeRemoveOwnerData(ownerAddress, threshold) {\n    this.validateOwnerAddress(ownerAddress);\n    const owners = await this.getOwners();\n    const ownerIndex = this.validateAddressIsOwner(ownerAddress, owners);\n    const newThreshold = threshold !== null && threshold !== void 0 ? threshold : (await this.getThreshold()) - 1;\n    this.validateThreshold(newThreshold, owners.length - 1);\n    const prevOwnerAddress = ownerIndex === 0 ? constants_1.SENTINEL_ADDRESS : owners[ownerIndex - 1];\n    return __classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\").encode('removeOwner', [prevOwnerAddress, ownerAddress, newThreshold]);\n  }\n  async encodeSwapOwnerData(oldOwnerAddress, newOwnerAddress) {\n    this.validateOwnerAddress(newOwnerAddress, 'Invalid new owner address provided');\n    this.validateOwnerAddress(oldOwnerAddress, 'Invalid old owner address provided');\n    const owners = await this.getOwners();\n    this.validateAddressIsNotOwner(newOwnerAddress, owners, 'New address provided is already an owner');\n    const oldOwnerIndex = this.validateAddressIsOwner(oldOwnerAddress, owners, 'Old address provided is not an owner');\n    const prevOwnerAddress = oldOwnerIndex === 0 ? constants_1.SENTINEL_ADDRESS : owners[oldOwnerIndex - 1];\n    return __classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\").encode('swapOwner', [prevOwnerAddress, oldOwnerAddress, newOwnerAddress]);\n  }\n  async encodeChangeThresholdData(threshold) {\n    const owners = await this.getOwners();\n    this.validateThreshold(threshold, owners.length);\n    return __classPrivateFieldGet(this, _OwnerManager_safeContract, \"f\").encode('changeThreshold', [threshold]);\n  }\n}\n_OwnerManager_ethAdapter = new WeakMap(), _OwnerManager_safeContract = new WeakMap();\nexports.default = OwnerManager;","map":{"version":3,"names":["utils_1","require","constants_1","OwnerManager","constructor","ethAdapter","safeContract","_OwnerManager_ethAdapter","set","_OwnerManager_safeContract","__classPrivateFieldSet","validateOwnerAddress","ownerAddress","errorMessage","isValidAddress","__classPrivateFieldGet","isAddress","isRestrictedAddress","Error","validateThreshold","threshold","numOwners","validateAddressIsNotOwner","owners","ownerIndex","findIndex","owner","sameString","isOwner","validateAddressIsOwner","getOwners","getThreshold","encodeAddOwnerWithThresholdData","newThreshold","length","encode","encodeRemoveOwnerData","prevOwnerAddress","SENTINEL_ADDRESS","encodeSwapOwnerData","oldOwnerAddress","newOwnerAddress","oldOwnerIndex","encodeChangeThresholdData","exports","default"],"sources":["../../../src/managers/ownerManager.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}